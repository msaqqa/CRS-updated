{"version":3,"sources":["admin/components/jobs/singlejob/index.jsx"],"names":["SingleJob","componentDidMount","context","getSingleJob","singleJob","id","props","match","params","length","state","key","activeModal","proposal","handleSelect","console","log","setState","openModal","closeModal","handleViewBtn","this","jobStatus","completeJob","job","proposals","pending","accepted","selected","rejected","image","title","status","category","employer","proposals_count","created_at","finish_at","details","requirements","responsibility","imageUrl","IMG01","categoryImgUrl","statusValue","toString","statusName","columns","dataIndex","render","name","photo","photoUrl","className","to","alt","src","sorter","a","b","employee","date","moment","format","seen","seenClass","message","record","onClick","activeKey","onSelect","eventKey","ReactHtmlParser","map","item","index","style","overflowX","dataSource","rowKey","showSizeChanger","pagination","total","showTotal","range","onShowSizeChange","itemRender","show","onHide","centered","Body","type","data-dismiss","Component","contextType","AdminContext"],"mappings":"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","file":"static/js/51.8d83281a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport { Table } from \"antd\";\nimport 'antd/dist/antd.css';\nimport { itemRender, onShowSizeChange } from \"../../../components/paginationfunction\";\nimport { Modal } from 'react-bootstrap';\nimport IMG01 from '../../../assets/images/avatar-01.jpg';\n// context\nimport { AdminContext } from \"../../../context/admin\";\nimport ReactHtmlParser from 'react-html-parser';\nimport moment from \"moment\";\nimport ViewProposal from \"../../viewproposal\"\n\nclass SingleJob extends Component {\n\n  componentDidMount = () => {\n    const { getSingleJob, singleJob } = this.context;\n    const { id } = this.props.match.params;\n    if (singleJob.length === 0) { getSingleJob(id) };\n  }\n\n  state = {\n    key: 1,\n    activeModal: null,\n    proposal: {},\n  }\n\n  handleSelect = (key) => {\n    console.log(\"selected \" + key);\n    this.setState({ key });\n  }\n\n  openModal = (id) => {\n    this.setState({\n      activeModal: id\n    })\n  }\n\n  closeModal = () => {\n    this.setState({ activeModal: false });\n  };\n\n  handleViewBtn = (proposal) => {\n    this.setState({ proposal })\n    this.openModal(\"coverLetter\");\n  }\n\n  render() {\n    const { singleJob, jobStatus, completeJob } = this.context;\n    const { job: { ...job }, proposals: { ...proposals } } = singleJob;\n    const { pending, accepted, selected, rejected } = proposals;\n    const { id, image, title, status, category: { ...category }, employer: { ...employer }, proposals_count, created_at, finish_at, details, requirements, responsibility } = job;\n    const imageUrl = image ? `http://excodeteam.com/crs/public/images/${image}` : IMG01;\n    const categoryImgUrl = category.image ? `http://excodeteam.com/crs/public/images/${category.image}` : IMG01;\n    const statusValue = jobStatus.toString() || status;\n    const statusName = statusValue === \"0\" ? \"Opened Job\" : statusValue === \"1\" ? \"Closed Job\" : statusValue === \"2\" ? \"processed Job\" : \"completed Job\";\n    const columns = [\n      {\n        title: \"Employee Name\",\n        dataIndex: \"employee\",\n        render: ({ name, photo }) => {\n          const photoUrl = photo ? `http://excodeteam.com/crs/public/images/${photo}` : IMG01;\n          return (\n            <div className=\"table-avatar\">\n              <Link to=\"/admin/profile/employee\" className=\"avatar avatar-sm mr-2\">\n                <img alt=\"\" src={photoUrl} />\n              </Link>\n              <Link to=\"/admin/profile/employee\">{name}</Link>\n            </div>\n          )\n        },\n        sorter: (a, b) => a.employee.name.length - b.employee.name.length,\n      },\n      {\n        title: \"Posted At\",\n        dataIndex: \"created_at\",\n        render: (date) => (moment(date).format(\"YYYY-MM-DD\")),\n        sorter: (a, b) => a.created_at.length - b.created_at.length,\n      },\n      {\n        title: \"Seen\",\n        dataIndex: \"seen\",\n        className: \"text-center\",\n        render: (seen) => {\n          const seenClass = seen === \"1\" ? \"text-success\" : \"\";\n          return <i className={`far fa-eye d-block ${seenClass}`} ></i>;\n        },\n      },\n      {\n        title: \"Cover Letter\",\n        dataIndex: \"message\",\n        className: \"text-center\",\n        render: (message, record) => {\n          const { employee, status } = record;\n          const { photo } = employee\n          const photoUrl = photo ? `http://excodeteam.com/crs/public/images/${photo}` : IMG01;\n          const proposal = { ...employee, message, photoUrl, status };\n          return <button className=\"btn btn-sm bg-info-light\" onClick={() => this.handleViewBtn(proposal)}>View</button>;\n        },\n      },\n    ];\n\n    return (\n      <>\n        <div className=\"page-wrapper\">\n          <div className=\"content container-fluid\">\n\n            <div className=\"page-header\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <h3 className=\"page-title\">{title}</h3>\n                  <ul className=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\"><Link to=\"/admin\">Dashboard</Link></li>\n                    <li className=\"breadcrumb-item\">Jobs</li>\n                    <li className=\"breadcrumb-item active\">{title}</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"doctor-widget\">\n                  <div className=\"doc-info-left\">\n                    <div className=\"doctor-img\">\n                      <img src={imageUrl} className=\"img-fluid\" alt=\"User\" />\n                    </div>\n                    <div className=\"doc-info-cont\">\n                      <h4 className=\"doc-name\">{title}</h4>\n                      <p className=\"doc-speciality\">MDS - Periodontology and Oral Implantology, BDS</p>\n                      <h5 className=\"doc-department\"><img src={categoryImgUrl} className=\"img-fluid\" alt=\"Category\" />{category.name}</h5>\n                      <ul className=\"entry-meta meta-item\">\n                        <li><i className=\"fas fa-sun\"></i> {statusName}</li>\n                        {/* <li><i className=\"fab fa-sketch\"></i> {categoryName}</li> */}\n                        <li><i className=\"fas fa-file-signature\"></i> {proposals_count} Proposals</li>\n                        <li><i className=\"fab fa-black-tie\"></i> By {employer.name}</li>\n                        <li><i className=\"fas fa-hourglass-start\"></i> {moment(created_at).format(\"YYYY-MM-DD\")}</li>\n                        <li><i className=\"fas fa-hourglass-end\"></i> {moment(finish_at).format(\"YYYY-MM-DD\")}</li>\n                      </ul>\n                    </div>\n                  </div>\n                  <div className=\"doc-info-right\">\n                    <div className=\"clinic-booking\">\n                      {\n                        statusValue === \"2\" ?\n                          <button className=\"apt-btn\" onClick={() => this.openModal('action')}>\n                            Complete Job\n                          </button>\n                          : null\n                      }\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <Tabs\n                  className=\"tab-view\"\n                  activeKey={this.state.key}\n                  onSelect={this.handleSelect}\n                  id=\"controlled-tab-example\"\n                >\n                  <Tab className=\"nav-item\" eventKey={1} title=\"Overview\">\n                    <div className=\"row\">\n                      <div className=\"col-md-12 col-lg-9\">\n\n                        <div className=\"widget about-widget\">\n                          <h4 className=\"widget-title\">Description</h4>\n                          <article>{ReactHtmlParser(details)}</article>\n                        </div>\n\n                        <div className=\"widget education-widget\">\n                          <h4 className=\"widget-title\">Requirements</h4>\n                          <div className=\"experience-box\">\n                            <ul className=\"experience-list\">\n                              {\n                                (requirements && requirements.length > 0) ? requirements.map((item, index) => {\n                                  return (\n                                    <li key={index}>\n                                      <div className=\"experience-user\">\n                                        <div className=\"before-circle\"></div>\n                                      </div>\n                                      <div className=\"experience-content\">\n                                        <div className=\"timeline-content\">\n                                          <p>{item}</p>\n                                        </div>\n                                      </div>\n                                    </li>\n                                  )\n                                }) : null\n                              }\n                            </ul>\n                          </div>\n                        </div>\n\n                        <div className=\"widget experience-widget\">\n                          <h4 className=\"widget-title\">Responsibilities</h4>\n                          <div className=\"experience-box\">\n                            <ul className=\"experience-list\">\n                              {\n                                (responsibility && responsibility.length > 0) ? responsibility.map((item, index) => {\n                                  return (\n                                    <li key={index}>\n                                      <div className=\"experience-user\">\n                                        <div className=\"before-circle\"></div>\n                                      </div>\n                                      <div className=\"experience-content\">\n                                        <div className=\"timeline-content\">\n                                          <p>{item}</p>\n                                        </div>\n                                      </div>\n                                    </li>\n                                  )\n                                }) : null\n                              }\n                            </ul>\n                          </div>\n                        </div>\n\n                      </div>\n                    </div>\n                  </Tab>\n                  <Tab className=\"nav-item\" eventKey={2} title=\"Pending Proposals\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <div className=\"card\">\n                          <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                              <Table\n                                className=\"table-striped\"\n                                style={{ overflowX: \"auto\" }}\n                                columns={columns}\n                                // bordered\n                                dataSource={pending}\n                                rowKey={(record) => record.id}\n                                showSizeChanger={true}\n                                pagination={{\n                                  total: pending ? pending.length : 0,\n                                  showTotal: (total, range) =>\n                                    `Showing ${range[0]} to ${range[1]} of ${total} entries`,\n                                  showSizeChanger: true,\n                                  onShowSizeChange: onShowSizeChange,\n                                  itemRender: itemRender,\n                                }}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </Tab>\n                  <Tab className=\"nav-item\" eventKey={3} title=\"Accepted Proposals\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <div className=\"card\">\n                          <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                              <Table\n                                className=\"table-striped\"\n                                style={{ overflowX: \"auto\" }}\n                                columns={columns}\n                                // bordered\n                                dataSource={accepted}\n                                rowKey={(record) => record.id}\n                                showSizeChanger={true}\n                                pagination={{\n                                  total: accepted ? accepted.length : 0,\n                                  showTotal: (total, range) =>\n                                    `Showing ${range[0]} to ${range[1]} of ${total} entries`,\n                                  showSizeChanger: true,\n                                  onShowSizeChange: onShowSizeChange,\n                                  itemRender: itemRender,\n                                }}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </Tab>\n                  <Tab className=\"nav-item\" eventKey={4} title=\"Selected Proposals\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <div className=\"card\">\n                          <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                              <Table\n                                className=\"table-striped\"\n                                style={{ overflowX: \"auto\" }}\n                                columns={columns}\n                                // bordered\n                                dataSource={selected}\n                                rowKey={(record) => record.id}\n                                showSizeChanger={true}\n                                pagination={{\n                                  total: selected ? selected.length : 0,\n                                  showTotal: (total, range) =>\n                                    `Showing ${range[0]} to ${range[1]} of ${total} entries`,\n                                  showSizeChanger: true,\n                                  onShowSizeChange: onShowSizeChange,\n                                  itemRender: itemRender,\n                                }}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </Tab>\n                  <Tab className=\"nav-item\" eventKey={5} title=\"Rejected Proposals\">\n                    <div className=\"row\">\n                      <div className=\"col-sm-12\">\n                        <div className=\"card\">\n                          <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                              <Table\n                                className=\"table-striped\"\n                                style={{ overflowX: \"auto\" }}\n                                columns={columns}\n                                // bordered\n                                dataSource={rejected}\n                                rowKey={(record) => record.id}\n                                showSizeChanger={true}\n                                pagination={{\n                                  total: rejected ? rejected.length : 0,\n                                  showTotal: (total, range) =>\n                                    `Showing ${range[0]} to ${range[1]} of ${total} entries`,\n                                  showSizeChanger: true,\n                                  onShowSizeChange: onShowSizeChange,\n                                  itemRender: itemRender,\n                                }}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </Tab>\n                </Tabs>\n              </div>\n            </div>\n\n            {/* cover letter modal */}\n            <ViewProposal proposal={this.state.proposal} activeModal={this.state.activeModal} closeModal={this.closeModal} />\n            {/* <Modal size=\"lg\" show={this.state.activeModal === 'coverLetter'} onHide={this.closeModal} centered>\n              <Modal.Header closeButton>\n              <h5 className=\"modal-title\">Cover Letter</h5>\n              </Modal.Header>\n              <Modal.Body>\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <div className=\"doc-info-left\">\n                      <div className=\"doctor-img\">\n                        <img src={imageUrl} className=\"img-fluid\" alt=\"User\" />\n                      </div>\n                      <div className=\"doc-info-cont\">\n                        <h4 className=\"doc-name\">{title}</h4>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    {ReactHtmlParser(this.state.coverLetter)}\n                  </div>\n                </div>\n              </Modal.Body>\n            </Modal> */}\n\n            {/* action modal */}\n            <Modal show={this.state.activeModal === 'action'} onHide={this.closeModal} centered>\n              <Modal.Body className=\"text-center\">\n                <div className=\"form-content p-2\">\n                  <h4 className=\"modal-title\">Complete</h4>\n                  <p className=\"mb-4\">Are you sure want to complete?</p>\n                  <button type=\"button\" className=\"btn bg-success-light mr-2\" onClick={() => { completeJob(id); this.closeModal() }}> OK </button>\n                  <button type=\"button\" className=\"btn bg-danger-light\" data-dismiss=\"modal\" onClick={this.closeModal}>Cancel</button>\n                </div>\n              </Modal.Body>\n            </Modal>\n\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nSingleJob.contextType = AdminContext;\nexport default SingleJob;"],"sourceRoot":""}