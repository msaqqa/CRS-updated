{"version":3,"sources":["history.jsx","client/context/user.js","client/context/jobs.js","client/components/loading/systemloading/index.jsx","approuter.jsx","index.js"],"names":["createBrowserHistory","toast","configure","UserContext","createContext","UserProvider","state","url","categories","countries","user","loading","forgetStatus","componentDidMount","localStorage","getItem","setState","JSON","parse","getCategories","a","axios","method","then","res","data","console","log","error","getCountries","map","item","name","userRegister","values","code","status","message","success","autoClose","position","POSITION","TOP_CENTER","history","push","userLogin","token","accessToken","type","photo","birthDate","country_id","dashboardUrl","window","open","setItem","stringify","userRefresh","userLogout","removeItem","changePassword","oldPassword","newPassword","headers","Authorization","forgotPassword","sendCode","resetPassword","Provider","value","this","props","children","Component","UserConsumer","Consumer","JobContext","JobProvider","categoriesList","recentJobs","categoryJobs","subCategories","singleJob","successStories","getCategoriesJobs","getSuccessStories","authHeader","catVal","catName","catType","sub_category","category_id","keyword","recent_jobs","tags","find","cntry","id","categoryName","categoryType","categoriesStorage","getStorageCategoriesJobs","getSingleJob","setProposalJob","coverLetter","JobConsumer","override","css","SystemLoading","className","size","color","AppContainer","lazy","AppRouter","fallback","render","ReactDOM","document","getElementById"],"mappings":"iHAAA,WAEeA,mB,4NCIfC,IAAMC,YAGN,IAAMC,EAAcC,0BAGdC,E,4MACFC,MAAQ,CACJC,IAAK,mCACLC,WAAY,GACZC,UAAW,GACXC,KAAM,GACNC,SAAS,EACTC,aAAc,G,EAGlBC,kBAAoB,WAChBC,aAAaC,QAAQ,QACf,EAAKC,SAAS,CAAEN,KAAMO,KAAKC,MAAMJ,aAAaC,QAAQ,WACtD,EAAKC,SAAS,CAAEN,KAAM,M,EAGhCS,c,sBAAgB,sBAAAC,EAAA,sEACNC,IAAM,CACRC,OAAQ,MACRf,IAAI,GAAD,OAAK,EAAKD,MAAMC,IAAhB,oBACJgB,MACC,SAAAC,GACI,IACQhB,EADSgB,EAAIC,KAAbA,KACAjB,WACR,EAAKQ,SAAS,CAAER,eAChBkB,QAAQC,IAAIH,MAEhB,SAAAI,GACIF,QAAQC,IAAIC,MAZR,2C,EAiBhBC,a,sBAAe,sBAAAT,EAAA,sEACLC,IAAM,CACRC,OAAQ,MACRf,IAAK,yCACNgB,MACC,SAAAC,GACI,IAAMf,EAAYe,EAAIC,KAAKK,KAAI,SAAAC,GAC3B,OAAOA,EAAKC,QAEhB,EAAKhB,SAAS,CAAEP,cAChBiB,QAAQC,IAAIH,MAEhB,SAAAI,GACIF,QAAQC,IAAIC,MAbT,2C,EAmBfK,a,uCAAe,WAAOC,GAAP,SAAAd,EAAA,6DACX,EAAKJ,SAAS,CAAEL,SAAS,IACzBe,QAAQC,IAAI,eAAgBO,GAFjB,SAGLb,IAAM,CACRC,OAAQ,OACRf,IAAI,GAAD,OAAK,EAAKD,MAAMC,IAAhB,kBACHkB,KAAK,eAAMS,KACZX,MACC,SAAAC,GACI,MAAkCA,EAAIC,KAA9BU,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,QACV,KAARF,IAA0B,IAAXC,GACfnC,IAAMqC,QAAQD,EAAS,CAAEE,UAAW,IAAMC,SAAUvC,IAAMwC,SAASC,aACnEC,IAAQC,KAAK,WAEb3C,IAAM2B,MAAMS,EAAS,CAAEG,SAAUvC,IAAMwC,SAASC,aAEpDhB,QAAQC,IAAIH,MAEhB,SAAAI,GACIF,QAAQC,IAAIC,MAnBT,OAsBX,EAAKZ,SAAS,CAAEL,SAAS,IAtBd,2C,wDAyBfkC,U,uCAAY,WAAOX,GAAP,SAAAd,EAAA,6DACR,EAAKJ,SAAS,CAAEL,SAAS,IADjB,SAEFU,IAAM,CACRC,OAAQ,OACRf,IAAI,GAAD,OAAK,EAAKD,MAAMC,IAAhB,eACHkB,KAAK,eAAMS,KACZX,MACC,SAAAC,GACI,MAA4DA,EAAIC,KAAxDU,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,QAAsBS,EAA5C,EAA+BC,YAAoBrC,EAAnD,EAAmDA,KACnD,GAAa,QAATyB,IAA6B,IAAXC,EAAiB,CACnC,IAAQY,EAA6CtC,EAA7CsC,KAAMC,EAAuCvC,EAAvCuC,MAAOjB,EAAgCtB,EAAhCsB,KAAMkB,EAA0BxC,EAA1BwC,UAAWC,EAAezC,EAAfyC,WACtC,EAAKnC,SAAS,CACVN,KAAK,aAAGoC,SAAUpC,KAEtB,IAAM0C,EAAyB,MAATJ,EAAe,sBAAwB,sBACpD,MAATA,EAAeK,OAAOC,KAAK,SAAU,UAAYX,IAAQC,KAAKQ,GAC9DtC,aAAayC,QAAQ,OAAQtC,KAAKuC,UAAU,CAAEV,QAAOE,OAAMC,QAAOjB,OAAMkB,YAAWC,gBACnFlD,IAAMqC,QAAQD,EAAS,CAAEE,UAAW,IAAMC,SAAUvC,IAAMwC,SAASC,kBAEnEzC,IAAM2B,MAAMS,EAAS,CAAEG,SAAUvC,IAAMwC,SAASC,aAEpDhB,QAAQC,IAAIH,MAGhB,SAAAI,GACI3B,IAAM2B,MAAM,0CAA2C,CAAEW,UAAW,IAAMC,SAAUvC,IAAMwC,SAASC,aACnGhB,QAAQC,IAAIC,MA1BZ,OA6BR,EAAKZ,SAAS,CAAEL,SAAS,IA7BjB,2C,wDAgCZ8C,Y,uCAAc,WAAO/C,GAAP,yBAAAU,EAAA,6DACF4B,EAA6CtC,EAA7CsC,KAAMC,EAAuCvC,EAAvCuC,MAAOjB,EAAgCtB,EAAhCsB,KAAMkB,EAA0BxC,EAA1BwC,UAAWC,EAAezC,EAAfyC,WAC9BL,EAAU,EAAKxC,MAAMI,KAArBoC,MAFE,SAGJ,EAAK9B,SAAS,CAAEN,KAAK,aAAGoC,SAAUpC,KAH9B,OAIVI,aAAayC,QAAQ,OAAQtC,KAAKuC,UAAU,CAAEV,QAAOE,OAAMC,QAAOjB,OAAMkB,YAAWC,gBAJzE,2C,wDAOdO,WAAa,WACT,EAAK1C,SAAS,CAAEN,KAAM,KACtBI,aAAa6C,WAAW,QACxBhB,IAAQC,KAAK,W,EAGjBgB,e,uCAAiB,+BAAAxC,EAAA,6DAASyC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,YAAtB,SACPzC,IAAM,CACRC,OAAQ,OACRf,IAAI,GAAD,OAAK,EAAKD,MAAMC,IAAhB,oBACHwD,QAAS,CAAEC,cAAc,UAAD,OAAY,EAAK1D,MAAMI,KAAKoC,QACpDrB,KAAM,CAAE,aAAgBoC,EAAa,aAAgBC,KACtDvC,MACC,SAAAC,GACI,MAAkCA,EAAIC,KAA9BU,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,QACT,MAATF,IAA2B,IAAXC,EAChBnC,IAAMqC,QAAQD,EAAS,CAAEE,UAAW,IAAMC,SAAUvC,IAAMwC,SAASC,aAEnEzC,IAAM2B,MAAMS,EAAS,CAAEE,UAAW,IAAMC,SAAUvC,IAAMwC,SAASC,aAErEhB,QAAQC,IAAIH,MAEhB,SAAAI,GACIF,QAAQC,IAAIC,MAjBP,2C,wDAsBjBqC,e,uCAAiB,WAAO/B,GAAP,SAAAd,EAAA,sEACPC,IAAM,CACRC,OAAQ,OACRf,IAAI,GAAD,OAAK,EAAKD,MAAMC,IAAhB,yBACHkB,KAAMS,IACPX,MACC,SAAAC,GACI,MAAkCA,EAAIC,KAA9BU,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,QACT,MAATF,IAA2B,IAAXC,GAChB,EAAKpB,SAAS,CAAEJ,aAAc,IAC9BX,IAAMqC,QAAQD,EAAS,CAAEE,UAAW,IAAMC,SAAUvC,IAAMwC,SAASC,cAEnEzC,IAAM2B,MAAMS,EAAS,CAAEE,UAAW,IAAMC,SAAUvC,IAAMwC,SAASC,aAErEhB,QAAQC,IAAIH,MAEhB,SAAAI,GACIF,QAAQC,IAAIC,MAjBP,2C,wDAsBjBsC,S,uCAAW,WAAOhC,GAAP,SAAAd,EAAA,sEACDC,IAAM,CACRC,OAAQ,OACRf,IAAI,GAAD,OAAK,EAAKD,MAAMC,IAAhB,mBACHkB,KAAMS,IACPX,MACC,SAAAC,GACI,MAAkCA,EAAIC,KAA9BU,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,QACT,MAATF,IAA2B,IAAXC,GAChB,EAAKpB,SAAS,CAAEJ,aAAc,IAC9BX,IAAMqC,QAAQD,EAAS,CAAEE,UAAW,IAAMC,SAAUvC,IAAMwC,SAASC,cAEnEzC,IAAM2B,MAAMS,EAAS,CAAEE,UAAW,IAAMC,SAAUvC,IAAMwC,SAASC,aAErEhB,QAAQC,IAAIH,MAEhB,SAAAI,GACIF,QAAQC,IAAIC,MAjBb,2C,wDAsBXuC,c,uCAAgB,WAAOjC,GAAP,SAAAd,EAAA,sEACNC,IAAM,CACRC,OAAQ,OACRf,IAAI,GAAD,OAAK,EAAKD,MAAMC,IAAhB,wBACHkB,KAAMS,IACPX,MACC,SAAAC,GACI,MAAkCA,EAAIC,KAA9BU,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,QACT,MAATF,IAA2B,IAAXC,GAChB,EAAKpB,SAAS,CAAEJ,aAAc,IAC9B+B,IAAQC,KAAK,UACb3C,IAAMqC,QAAQD,EAAS,CAAEE,UAAW,IAAMC,SAAUvC,IAAMwC,SAASC,cAEnEzC,IAAM2B,MAAMS,EAAS,CAAEE,UAAW,IAAMC,SAAUvC,IAAMwC,SAASC,aAErEhB,QAAQC,IAAIH,MAEhB,SAAAI,GACIF,QAAQC,IAAIC,MAlBR,2C,kGAuBhB,WACI,OACI,kBAACzB,EAAYiE,SAAb,CAAsBC,MAAK,2BACpBC,KAAKhE,OADe,IAEvBa,cAAemD,KAAKnD,cACpBU,aAAcyC,KAAKzC,aACnBI,aAAcqC,KAAKrC,aACnBY,UAAWyB,KAAKzB,UAChBY,YAAaa,KAAKb,YAClBC,WAAYY,KAAKZ,WACjBE,eAAgBU,KAAKV,eAErBK,eAAgBK,KAAKL,eACrBC,SAAUI,KAAKJ,SACfC,cAAeG,KAAKH,iBAEnBG,KAAKC,MAAMC,c,GAnODC,aA0OrBC,EAAevE,EAAYwE,SAGlBtE,O,4NCjPfJ,IAAMC,YAGN,IAAM0E,EAAaxE,0BAGbyE,E,4MACFvE,MAAQ,CACJC,IAAK,mCACLC,WAAY,CACRsE,eAAgB,GAChBC,WAAY,GACZC,aAAc,GACdC,cAAe,IAEnBC,UAAW,GACXC,eAAgB,GAChBxE,SAAS,G,EAGbE,kBAAoB,WAChB,EAAKuE,oBACL,EAAKC,qB,EAGTC,WAAa,WACT,IAAM5E,EAAOO,KAAKC,MAAMJ,aAAaC,QAAQ,SAC7C,OAAIL,GAAQA,EAAKoC,MACN,CAAEkB,cAAc,UAAD,OAAYtD,EAAKoC,QAGhC,I,EAKfsC,kB,uCAAoB,WAAOG,EAAQC,EAASC,GAAxB,mBAAArE,EAAA,6DAChB,EAAKJ,SAAS,CAAEL,SAAS,IAED,kBAAZ4E,EACI,QAAZE,EAAoBC,EAAeH,EAASI,EAAcJ,EAE1DK,EAAUL,EANE,SAQVlE,IAAM,CACRC,OAAQ,OACRf,IAAI,GAAD,OAAK,EAAKD,MAAMC,IAAhB,sBACHkB,KAAM,CAAEkE,cAAaD,eAAcE,aACpCrE,MACC,SAAAC,GACI,MAAgDA,EAAIC,KAA5CA,EAAR,EAAQA,KAAMjB,EAAd,EAAcA,WAAYqF,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,KACjCd,EAAevD,EAAKA,KACpBwD,EAAgBU,EAAcnF,EAAWuF,MAAK,SAAAC,GAAK,OAAIA,EAAMC,IAAMN,KAAaD,aAAe,GACrG,EAAK1E,SAAS,CACVR,WAAY,CACRsE,eAAgBtE,EAChBuE,WAAYc,EACZC,OACAd,eACAkB,aAAcV,GAAoB,GAClCW,aAAcV,EACdR,mBAGR,IAAMmB,EAAoB,CAAEtB,eAAgBtE,EAAYuE,WAAYc,EAAaC,OAAMd,gBACvFlE,aAAayC,QAAQ,aAActC,KAAKuC,UAAU4C,IAClD1E,QAAQC,IAAIH,MAEhB,SAAAI,GACIF,QAAQC,IAAIC,MAjCJ,OAoChB,EAAKZ,SAAS,CAAEL,SAAS,IApCT,2C,4DAuCpB0F,yBAA2B,WACvB,OAAOvF,aAAaC,QAAQ,cACtBE,KAAKC,MAAMJ,aAAaC,QAAQ,eAChC,I,EAGVuF,a,uCAAe,WAAOL,GAAP,SAAA7E,EAAA,6DACX,EAAKJ,SAAS,CAAEL,SAAS,IADd,SAELU,IAAM,CACRC,OAAQ,OACRf,IAAI,GAAD,OAAK,EAAKD,MAAMC,IAAhB,qBACHkB,KAAM,CAAE,OAAUwE,KACnB1E,MACC,SAAAC,GACI,IACM0D,EADW1D,EAAIC,KAAbA,KAER,EAAKT,SAAS,CAAEkE,cAEhBxD,QAAQC,IAAIH,MAEhB,SAAAI,GACIF,QAAQC,IAAIC,MAfT,OAkBX,EAAKZ,SAAS,CAAEL,SAAS,IAlBd,2C,wDAqBf4F,e,uCAAiB,WAAON,EAAIO,GAAX,SAAApF,EAAA,sEACPC,IAAM,CACRC,OAAQ,OACRf,IAAI,GAAD,OAAK,EAAKD,MAAMC,IAAhB,2BACHwD,QAAS,EAAKuB,aACd7D,KAAM,CAAE,OAAUwE,EAAI,QAAWO,KAClCjF,MACC,SAAAC,GACIvB,IAAMqC,QAAQ,wBAAyB,CAAEC,UAAW,IAAMC,SAAUvC,IAAMwC,SAASC,aACnFhB,QAAQC,IAAIH,MAEhB,SAAAI,GACIF,QAAQC,IAAIC,MAZP,2C,0DAiBjByD,kB,sBAAoB,sBAAAjE,EAAA,6DAChB,EAAKJ,SAAS,CAAEL,SAAS,IADT,SAEVU,IAAM,CACRC,OAAQ,OACRf,IAAI,GAAD,OAAK,EAAKD,MAAMC,IAAhB,0BACJgB,MACC,SAAAC,GACI,IACM2D,EADW3D,EAAIC,KAAbA,KAER,EAAKT,SAAS,CAAEmE,mBAChBzD,QAAQC,IAAIH,MAEhB,SAAAI,GACIF,QAAQC,IAAIC,MAbJ,OAgBhB,EAAKZ,SAAS,CAAEL,SAAS,IAhBT,2C,4CAmBpB,WACI,OACI,kBAACiE,EAAWR,SAAZ,CAAqBC,MAAK,2BACnBC,KAAKhE,OADc,IAEtB8E,kBAAmBd,KAAKc,kBACxBkB,aAAchC,KAAKgC,aACnBC,eAAgBjC,KAAKiC,eACrBlB,kBAAmBf,KAAKe,qBAEvBf,KAAKC,MAAMC,c,GA7IFC,aAoJpBgC,EAAc7B,EAAWD,SAGhBE,O,uFClKT6B,EAAWC,cAAH,mFAiBCC,IAZf,WACI,OACE,yBAAKC,UAAU,iBACb,kBAAC,IAAD,CACEF,IAAKD,EACLI,KAAM,IACNC,MAAO,e,wSCRXC,EAAeC,gBAAK,kBAAM,wDAmBjBC,EAhBG,SAAC3C,GAEjB,OACE,kBAAC,IAAD,KACI,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAU4C,SAAU,kBAAC,IAAD,OAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAQ,SAAC7C,GAAD,OAAU,kBAACyC,EAAiBzC,W,wECazD8C,IAASD,OAAO,kBAAC,EAAD,MAAcE,SAASC,eAAe,W","file":"static/js/main.2f0034a0.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React, { Component, createContext } from 'react';\nimport history from \"../../history\";\nimport axios from \"axios\";\n// importing toastify module\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure();\n\n// context\nconst UserContext = createContext();\n\n// provider\nclass UserProvider extends Component {\n    state = {\n        url: \"http://excodeteam.com/crs/api/v1\",\n        categories: [],\n        countries: [],\n        user: {},\n        loading: false,\n        forgetStatus: 0\n    }\n\n    componentDidMount = () => {\n        localStorage.getItem(\"user\")\n            ? this.setState({ user: JSON.parse(localStorage.getItem(\"user\")) })\n            : this.setState({ user: {} });\n    }\n\n    getCategories = async () => {\n        await axios({\n            method: 'get',\n            url: `${this.state.url}/user/register`,\n        }).then(\n            res => {\n                const { data } = res.data;\n                const { categories } = data;\n                this.setState({ categories });\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    getCountries = async () => {\n        await axios({\n            method: 'get',\n            url: \"https://restcountries.eu/rest/v2/all\",\n        }).then(\n            res => {\n                const countries = res.data.map(item => {\n                    return item.name\n                })\n                this.setState({ countries });\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n\n    userRegister = async (values) => {\n        this.setState({ loading: true });\n        console.log(\"userRegister\", values);\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/user/register`,\n            data: { ...values },\n        }).then(\n            res => {\n                const { code, status, message } = res.data;\n                if (code == 200 && status === true) {\n                    toast.success(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                    history.push(\"/login\");\n                } else {\n                    toast.error(message, { position: toast.POSITION.TOP_CENTER });\n                }\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({ loading: false });\n    }\n\n    userLogin = async (values) => {\n        this.setState({ loading: true });\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/user/login`,\n            data: { ...values },\n        }).then(\n            res => {\n                const { code, status, message, accessToken: token, user } = res.data;\n                if (code === \"200\" && status === true) {\n                    const { type, photo, name, birthDate, country_id } = user;\n                    this.setState({\n                        user: { token, ...user }\n                    });\n                    const dashboardUrl = (type === \"2\" ? \"/employee/dashboard\" : \"/employer/dashboard\");\n                    type === \"0\" ? window.open('/admin', '_blank') : history.push(dashboardUrl);\n                    localStorage.setItem(\"user\", JSON.stringify({ token, type, photo, name, birthDate, country_id }));\n                    toast.success(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                } else {\n                    toast.error(message, { position: toast.POSITION.TOP_CENTER });\n                }\n                console.log(res);\n\n            },\n            error => {\n                toast.error(\"There was an error. Please try again...\", { autoClose: 2000, position: toast.POSITION.TOP_CENTER })\n                console.log(error);\n            }\n        )\n        this.setState({ loading: false });\n    }\n\n    userRefresh = async (user) => {\n        const { type, photo, name, birthDate, country_id } = user;\n        const { token } = this.state.user;\n        await this.setState({ user: { token, ...user } });\n        localStorage.setItem(\"user\", JSON.stringify({ token, type, photo, name, birthDate, country_id }));\n    }\n\n    userLogout = () => {\n        this.setState({ user: {} });\n        localStorage.removeItem(\"user\");\n        history.push(\"/login\");\n    };\n\n    changePassword = async ({ oldPassword, newPassword }) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/change_password`,\n            headers: { Authorization: `Bearer ${this.state.user.token}` },\n            data: { \"old_password\": oldPassword, \"new_password\": newPassword },\n        }).then(\n            res => {\n                const { code, status, message } = res.data;\n                if (code === 200 && status === true) {\n                    toast.success(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                } else {\n                    toast.error(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER })\n                }\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    forgotPassword = async (values) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/user/forgot_password`,\n            data: values,\n        }).then(\n            res => {\n                const { code, status, message } = res.data;\n                if (code === 200 && status === true) {\n                    this.setState({ forgetStatus: 1 })\n                    toast.success(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                } else {\n                    toast.error(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER })\n                }\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    sendCode = async (values) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/user/send_code`,\n            data: values,\n        }).then(\n            res => {\n                const { code, status, message } = res.data;\n                if (code === 200 && status === true) {\n                    this.setState({ forgetStatus: 2 })\n                    toast.success(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                } else {\n                    toast.error(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER })\n                }\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    resetPassword = async (values) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/user/reset_password`,\n            data: values,\n        }).then(\n            res => {\n                const { code, status, message } = res.data;\n                if (code === 200 && status === true) {\n                    this.setState({ forgetStatus: 0 })\n                    history.push(\"/login\");\n                    toast.success(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                } else {\n                    toast.error(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER })\n                }\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    render() {\n        return (\n            <UserContext.Provider value={{\n                ...this.state,\n                getCategories: this.getCategories,\n                getCountries: this.getCountries,\n                userRegister: this.userRegister,\n                userLogin: this.userLogin,\n                userRefresh: this.userRefresh,\n                userLogout: this.userLogout,\n                changePassword: this.changePassword,\n\n                forgotPassword: this.forgotPassword,\n                sendCode: this.sendCode,\n                resetPassword: this.resetPassword\n            }}>\n                {this.props.children}\n            </UserContext.Provider>\n        )\n    }\n}\n\n// consumer\nconst UserConsumer = UserContext.Consumer;\n\nexport { UserConsumer, UserContext };\nexport default UserProvider;","import React, { Component, createContext } from 'react';\nimport axios from \"axios\";\nimport history from \"../../history\";\n// Importing toastify module \nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// toast-configuration method,  \n// it is compulsory method. \ntoast.configure()\n\n// context\nconst JobContext = createContext();\n\n// provider\nclass JobProvider extends Component {\n    state = {\n        url: \"http://excodeteam.com/crs/api/v1\",\n        categories: {\n            categoriesList: [],\n            recentJobs: [],\n            categoryJobs: [],\n            subCategories: []\n        },\n        singleJob: {},\n        successStories: [],\n        loading: false,\n    }\n\n    componentDidMount = () => {\n        this.getCategoriesJobs();\n        this.getSuccessStories();\n    }\n\n    authHeader = () => {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (user && user.token) {\n            return { Authorization: `Bearer ${user.token}` };\n        } else {\n            // redirect to login page\n            return {};\n        }\n    }\n\n    // get categories jobs\n    getCategoriesJobs = async (catVal, catName, catType) => {\n        this.setState({ loading: true });\n        let category_id, sub_category, keyword;\n        if (typeof (catVal) === \"number\") {\n            catType === \"sub\" ? sub_category = catVal : category_id = catVal;\n        } else {\n            keyword = catVal\n        }\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employer/all_jobs`,\n            data: { category_id, sub_category, keyword },\n        }).then(\n            res => {\n                const { data, categories, recent_jobs, tags } = res.data;\n                const categoryJobs = data.data;\n                const subCategories = category_id ? categories.find(cntry => cntry.id == category_id).sub_category : []\n                this.setState({\n                    categories: {\n                        categoriesList: categories,\n                        recentJobs: recent_jobs,\n                        tags,\n                        categoryJobs,\n                        categoryName: catName ? catName : \"\",\n                        categoryType: catType,\n                        subCategories\n                    }\n                });\n                const categoriesStorage = { categoriesList: categories, recentJobs: recent_jobs, tags, categoryJobs }\n                localStorage.setItem(\"categories\", JSON.stringify(categoriesStorage));\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({ loading: false });\n    };\n    // get storage categories jobs\n    getStorageCategoriesJobs = () => {\n        return localStorage.getItem(\"categories\")\n            ? JSON.parse(localStorage.getItem(\"categories\"))\n            : {};\n    };\n\n    getSingleJob = async (id) => {\n        this.setState({ loading: true });\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/get_job`,\n            data: { \"job_id\": id },\n        }).then(\n            res => {\n                const { data } = res.data;\n                const singleJob = data;\n                this.setState({ singleJob });\n                // history.push(\"/jobs/single-job\");\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({ loading: false });\n    };\n\n    setProposalJob = async (id, coverLetter) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/send_proposal`,\n            headers: this.authHeader(),\n            data: { \"job_id\": id, \"message\": coverLetter },\n        }).then(\n            res => {\n                toast.success('Success Post Proposal', { autoClose: 2000, position: toast.POSITION.TOP_CENTER })\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    getSuccessStories = async () => {\n        this.setState({ loading: true });\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/success_story`,\n        }).then(\n            res => {\n                const { data } = res.data;\n                const successStories = data;\n                this.setState({ successStories });\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({ loading: false });\n    };\n\n    render() {\n        return (\n            <JobContext.Provider value={{\n                ...this.state,\n                getCategoriesJobs: this.getCategoriesJobs,\n                getSingleJob: this.getSingleJob,\n                setProposalJob: this.setProposalJob,\n                getSuccessStories: this.getSuccessStories,\n            }}>\n                {this.props.children}\n            </JobContext.Provider>\n        )\n    }\n}\n\n// consumer\nconst JobConsumer = JobContext.Consumer;\n\nexport { JobConsumer, JobContext };\nexport default JobProvider;","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\nconst override = css`\n  display: block;\n  margin: calc(50vh - 100px) auto;\n`;\n\nfunction SystemLoading () {\n    return (\n      <div className=\"sweet-loading\">\n        <BounceLoader\n          css={override}\n          size={100}\n          color={\"#36D7B7\"}\n        />\n      </div>\n    );\n}\n\nexport default SystemLoading;","import React, { lazy, Suspense } from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n// import AppContainer from './appcontainer.jsx';\nimport UserProvider from \"./client/context/user\";\nimport JobProvider from \"./client/context/jobs\";\nimport SystemLoading from \"./client/components/loading/systemloading\";\nconst AppContainer = lazy(() => import('./appcontainer.jsx'));\n\n\nconst AppRouter = (props) => {\n\n  return(\n    <UserProvider>\n        <JobProvider>\n          <Suspense fallback={<SystemLoading />}>\n            <Router>\n              <Route render={(props)=> <AppContainer {...props}/>} />\n            </Router>\n          </Suspense>\n        </JobProvider>\n      </UserProvider>\n\n  );\n}\n\nexport default AppRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport AppRouter from './approuter';\n// import * as serviceWorker from './client/serviceWorker';\n\n// boostrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//fontawesome\n\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \n\nimport './client/assets/css/all.css';\nimport './client/assets/css/all.min.css';\nimport './client/assets/css/fontawesome.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n//carousel\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\n//style\nimport './client/assets/css/style.css';\n\n//admin\n//import './admin/assets/css/app.css';\nimport './admin/assets/css/feathericon.min.css';\nimport './admin/assets/js/script.js';\nimport './admin/assets/css/fontawesome.min.css';\n\nReactDOM.render(<AppRouter/>, document.getElementById('root'));\n\nif (module.hot) { // enables hot module replacement if plugin is installed\n module.hot.accept();\n}"],"sourceRoot":""}