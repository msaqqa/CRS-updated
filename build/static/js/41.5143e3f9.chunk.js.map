{"version":3,"sources":["client/components/employer/sidebar/index.jsx","client/components/loading/actionloading/index.jsx","../node_modules/react-spinners/ClipLoader.js","client/components/employer/profilesetting/index.jsx"],"names":["EmployerSidebar","value","userLogout","user","photo","name","birthDate","country_id","photoUrl","IMG01","className","to","src","alt","Item","activeClassName","onClick","Component","override","css","ActionLoading","props","size","color","loading","__makeTemplateObject","this","cooked","raw","Object","defineProperty","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__importStar","mod","__esModule","result","k","call","exports","templateObject_1","templateObject_2","React","require","core_1","helpers_1","clip","keyframes","Loader","_super","_this","apply","arguments","style","_a","cssValue","render","jsx","defaultProps","sizeDefaults","PureComponent","default","ProfileSetting","useContext","EmployerContext","getProfile","profile","setProfile","UserContext","getCountries","employeeInfo","countries","email","mobile","address","city","state","zipCode","imageUrl","pref","useState","preview","setPreview","useEffect","validationSchema","Yup","shape","required","handleSubmit","values","a","moment","format","aria-label","href","aria-current","initialValues","date","Date","country","onSubmit","validateOnChange","enableReinitialize","formik","setFieldValue","isSubmitting","type","onChange","e","URL","createObjectURL","target","files","currentTarget","form","field","placeholderText","maxDate","selected","dateFormat","showYearDropdown","val","rows","as","disabled"],"mappings":"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","file":"static/js/41.5143e3f9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport Nav from 'react-bootstrap/Nav';\nimport IMG01 from '../../../assets/images/doctor-thumb-02.jpg';\n// context\nimport { UserConsumer } from \"../../../context/user\";\n\nclass EmployerSidebar extends Component {\n  render() {\n    return (\n      <UserConsumer>\n        {(value) => {\n          const { userLogout, user: { photo, name, birthDate, country_id } } = value;\n          const photoUrl = photo ? `http://excodeteam.com/crs/public/images/${photo}` : IMG01;\n          return (\n            <div className=\"profile-sidebar\">\n              <div className=\"widget-profile pro-widget-content\">\n                <div className=\"profile-info-widget\">\n                  <Link to=\"#\" className=\"booking-doc-img\">\n                    <img src={photoUrl} alt=\"User\" />\n                  </Link>\n                  <div className=\"profile-det-info\">\n                    <h3>{name}</h3>\n                    <div className=\"patient-details\">\n                      <h5><i className=\"fas fa-birthday-cake\"></i> {birthDate}</h5>\n                      <h5 className=\"mb-0\"><i className=\"fas fa-map-marker-alt\"></i> {country_id}</h5>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"dashboard-widget\">\n                <Nav className=\"dashboard-menu\">\n\n                  <Nav.Item>\n                    <NavLink to=\"/employer/dashboard\">\n                      <i className=\"fas fa-columns\"></i>\n                      <span>Dashboard</span>\n                    </NavLink>\n                  </Nav.Item>\n\n                  <Nav.Item>\n                    <NavLink to=\"/employer/jobs\" activeClassName=\"active\">\n                      <i className=\"fas fa-calendar-check\"></i>\n                      <span>Jobs</span>\n                    </NavLink>\n                  </Nav.Item>\n\n                  <Nav.Item>\n                    <NavLink to=\"/employer/my-employees\">\n                      <i className=\"fas fa-user-injured\"></i>\n                      <span>My Employees</span>\n                    </NavLink>\n                  </Nav.Item>\n\n                  {/* <Nav.Item> \n                    <NavLink to=\"/employer/chat-employer\">\n                      <i className=\"fas fa-comments\"></i>\n                      <span>Message</span>\n                      <small className=\"unread-msg\">23</small>\n                    </NavLink>\n                  </Nav.Item> */}\n\n                  <Nav.Item>\n                    <NavLink to=\"/employer/profile-setting\">\n                      <i className=\"fas fa-user-cog\"></i>\n                      <span>Profile Settings</span>\n                    </NavLink>\n                  </Nav.Item>\n\n                  <Nav.Item>\n                    <NavLink to=\"/employer/change-password\">\n                      <i className=\"fas fa-lock\"></i>\n                      <span>Change Password</span>\n                    </NavLink>\n                  </Nav.Item>\n\n                  <Nav.Item>\n                    <NavLink to=\"/login\" activeClassName=\"active\">\n                      <i className=\"fas fa-sign-out-alt\"></i>\n                      <span onClick={userLogout}>Logout</span>\n                    </NavLink>\n                  </Nav.Item>\n\n                </Nav>\n              </div>\n            </div>\n          );\n        }}\n      </UserConsumer>\n    )\n  }\n}\nexport default EmployerSidebar;\n","import React, { useContext } from \"react\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n/* position: absolute; */\n  margin-left: 10px;\n`;\n\nfunction ActionLoading (props) {\n    return (\n      // <div className=\"sweet-loading d-inline-block \">\n        <ClipLoader\n          css={override}\n          size={25}\n          color={\"#757575\"}\n          loading={props.loading}\n        />\n      // </div>\n    );\n}\n\nexport default ActionLoading;","\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @jsx jsx */\nvar React = __importStar(require(\"react\"));\nvar core_1 = require(\"@emotion/core\");\nvar helpers_1 = require(\"./helpers\");\nvar clip = core_1.keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  0% {transform: rotate(0deg) scale(1)}\\n  50% {transform: rotate(180deg) scale(0.8)}\\n  100% {transform: rotate(360deg) scale(1)}\\n\"], [\"\\n  0% {transform: rotate(0deg) scale(1)}\\n  50% {transform: rotate(180deg) scale(0.8)}\\n  100% {transform: rotate(360deg) scale(1)}\\n\"])));\nvar Loader = /** @class */ (function (_super) {\n    __extends(Loader, _super);\n    function Loader() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.style = function () {\n            var _a = _this.props, size = _a.size, color = _a.color;\n            return core_1.css(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n      background: transparent !important;\\n      width: \", \";\\n      height: \", \";\\n      border-radius: 100%;\\n      border: 2px solid;\\n      border-color: \", \";\\n      border-bottom-color: transparent;\\n      display: inline-block;\\n      animation: \", \" 0.75s 0s infinite linear;\\n      animation-fill-mode: both;\\n    \"], [\"\\n      background: transparent !important;\\n      width: \", \";\\n      height: \", \";\\n      border-radius: 100%;\\n      border: 2px solid;\\n      border-color: \", \";\\n      border-bottom-color: transparent;\\n      display: inline-block;\\n      animation: \", \" 0.75s 0s infinite linear;\\n      animation-fill-mode: both;\\n    \"])), helpers_1.cssValue(size), helpers_1.cssValue(size), color, clip);\n        };\n        return _this;\n    }\n    Loader.prototype.render = function () {\n        var _a = this.props, loading = _a.loading, css = _a.css;\n        return loading ? core_1.jsx(\"div\", { css: [this.style(), css] }) : null;\n    };\n    Loader.defaultProps = helpers_1.sizeDefaults(35);\n    return Loader;\n}(React.PureComponent));\nexports.default = Loader;\nvar templateObject_1, templateObject_2;\n","import React, { useContext, useState, useEffect } from 'react';\nimport DoctorSidebar from '../sidebar/index';\nimport IMG01 from '../../../assets/images/doctor-thumb-02.jpg';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n// context\nimport { EmployerContext } from \"../../../context/employer\";\nimport { UserContext } from \"../../../context/user\";\nimport DateView from \"react-datepicker\";\nimport moment from \"moment\";\nimport ActionLoading from \"../../loading/actionloading\";\n\nfunction ProfileSetting() {\n\n  // context values\n  const { getProfile, profile, setProfile, loading } = useContext(EmployerContext);\n  const { getCountries, countries } = useContext(UserContext);\n  const { employeeInfo } = profile;\n  const { country_id, email, mobile, photo, name, birthDate, address, city, state, zipCode, pref } = employeeInfo;\n  const imageUrl = photo ? `http://excodeteam.com/crs/public/images/${photo}` : IMG01;\n\n  const [files, setFiles] = useState([]);\n  const [preview, setPreview] = useState(\"\");\n\n  useEffect(() => {\n    getProfile();\n    getCountries();\n  }, [])\n\n  const handleChange = (files) => {\n    setFiles(files);\n  }\n\n  const initialValues = () => {\n    const date = (!birthDate || birthDate === \"0000-00-00 00:00:00\") ? new Date() : new Date(birthDate);\n    return {\n      photo: photo || null,\n      name: name || '',\n      birthDate: date,\n      email: email || '',\n      mobile: mobile || '',\n      country: country_id || '',\n      address: address || \"\",\n      city: city || \"\",\n      state: state || \"\",\n      zipCode: zipCode || \"\",\n    }\n  }\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Required\"),\n    email: Yup.string().required(\"Required\"),\n  });\n\n  const handleSubmit = async values => {\n    let { birthDate } = values;\n    birthDate = moment(birthDate).format(\"YYYY-MM-DD\");\n    await setProfile({ ...values, birthDate });\n  }\n\n  return (\n    <>\n      <div className=\"breadcrumb-bar\">\n        <div className=\"container-fluid\">\n          <div className=\"row align-items-center\">\n            <div className=\"col-md-12 col-12\">\n              <nav aria-label=\"breadcrumb\" className=\"page-breadcrumb\">\n                <ol className=\"breadcrumb\">\n                  <li className=\"breadcrumb-item\"><a href=\"/home\">Home</a></li>\n                  <li className=\"breadcrumb-item active\" aria-current=\"page\">Profile Settings</li>\n                </ol>\n              </nav>\n              <h2 className=\"breadcrumb-title\">Profile Settings</h2>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-5 col-lg-4 col-xl-3 theiaStickySidebar\">\n              <DoctorSidebar />\n            </div>\n            <div className=\"col-md-7 col-lg-8 col-xl-9\">\n\n              <Formik\n                initialValues={initialValues()}\n                validationSchema={validationSchema}\n                onSubmit={handleSubmit}\n                validateOnChange={false}\n                enableReinitialize={true}\n              >\n                {(formik) => {\n                  const { setFieldValue, isSubmitting } = formik;\n                  return (\n                    <Form>\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          <h4 className=\"card-title\">Basic Information</h4>\n                          <div className=\"row form-row\">\n                            <div className=\"col-md-12\">\n                              <div className=\"form-group\">\n                                <div className=\"change-avatar\">\n                                  <div className=\"profile-img\">\n                                    <img src={preview || imageUrl} alt=\"User\" />\n                                  </div>\n                                  <div className=\"upload-img\">\n                                    <div className=\"change-photo-btn\">\n                                      <span><i className=\"fa fa-upload\"></i> Upload Photo</span>\n                                      <Field type=\"file\" name=\"file\" className=\"upload\" onChange={(e) => {\n                                        setPreview(URL.createObjectURL(e.target.files[0]));\n                                        setFieldValue(\"photo\", e.currentTarget.files[0]);\n                                      }}\n                                      />\n                                    </div>\n                                    <small className=\"form-text text-muted\">Allowed JPG, GIF or PNG. Max size of 2MB</small>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                              <div className=\"form-group\">\n                                <label>Name <span className=\"text-danger\">*</span></label>\n                                <Field type=\"text\" name=\"name\" className=\"form-control\" />\n                              </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                              <div className=\"form-group\">\n                                <label>Email <span className=\"text-danger\">*</span></label>\n                                <Field type=\"email\" name=\"email\" className=\"form-control\" />\n                              </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                              <div className=\"form-group\">\n                                <label>Phone Number</label>\n                                <Field type=\"text\" name=\"mobile\" className=\"form-control\" />\n                              </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                              <div className=\"form-group mb-0\">\n                                <label>Date of Birth</label>\n                                <div className=\"cal-icon\">\n                                  <Field name=\"birthDate\">\n                                    {\n                                      ({ form, field }) => {\n                                        const { setFieldValue } = form;\n                                        const { value } = field;\n                                        return <DateView\n                                          {...field}\n                                          className=\"form-control datetimepicker\"\n                                          placeholderText=\"Click to select a birth date\"\n                                          maxDate={new Date()}\n                                          selected={value}\n                                          dateFormat=\"yyyy-MM-dd\"\n                                          showYearDropdown\n                                          onChange={(val) => setFieldValue(\"birthDate\", val)}\n                                        />\n                                      }\n                                    }\n                                  </Field>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          <h4 className=\"card-title\">About Me</h4>\n                          <div className=\"form-group mb-0\">\n                            <textarea className=\"form-control\" rows=\"5\"></textarea>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"card contact-card\">\n                        <div className=\"card-body\">\n                          <h4 className=\"card-title\">Contact Details</h4>\n                          <div className=\"row form-row\">\n                            <div className=\"col-md-6\">\n                              <div className=\"form-group\">\n                                <label>Address</label>\n                                <Field type=\"text\" name=\"address\" className=\"form-control\" />\n                              </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                              <div className=\"form-group\">\n                                <label className=\"control-label\">City</label>\n                                <Field type=\"text\" name=\"city\" className=\"form-control\" />\n                              </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                              <div className=\"form-group\">\n                                <label className=\"control-label\">State</label>\n                                <Field type=\"text\" name=\"state\" className=\"form-control\" />\n                              </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                              <div className=\"form-group\">\n                                <label className=\"control-label\">Country</label>\n                                <Field as=\"select\" name=\"country\" className=\"form-control\">\n                                  <option value=\"\" disabled>Select Country</option>\n                                  <option value=\"Germany\">Germany</option>\n                                  {/* {\n                                      countries.map((country, index) => {\n                                        return (\n                                          <option key={index} value={country}>\n                                            {country}\n                                          </option>\n                                        );\n                                      })\n                                    } */}\n                                </Field>\n                              </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                              <div className=\"form-group\">\n                                <label className=\"control-label\">Postal Code</label>\n                                <Field type=\"text\" name=\"zipCode\" className=\"form-control\" />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"submit-section submit-btn-bottom\">\n                        <button type=\"submit\" className=\"btn btn-primary submit-btn\" disabled={isSubmitting}>\n                          <span>Save Changes</span>\n                          <ActionLoading loading={loading} />\n                        </button>\n                      </div>\n\n                    </Form>\n                  )\n                }}\n              </Formik>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ProfileSetting;"],"sourceRoot":""}