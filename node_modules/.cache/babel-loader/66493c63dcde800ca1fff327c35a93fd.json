{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\CSR-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _objectSpread from\"E:\\\\CSR-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"E:\\\\CSR-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:\\\\CSR-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from'react';import{Link,useHistory}from'react-router-dom';import StickyBox from\"react-sticky-box\";import DoctorSidebar from'../../sidebar';import{Formik,Form,Field,ErrorMessage,FieldArray}from'formik';import*as Yup from'yup';import DateView from\"react-datepicker\";// react CKEditor text editor\nimport CKEditor from'@ckeditor/ckeditor5-react';import ClassicEditor from'@ckeditor/ckeditor5-build-classic';import moment from\"moment\";// context\nimport{EmployerContext}from\"../../../../context/employer\";import ActionLoading from\"../../../loading/actionloading\";function AddJob(){var history=useHistory();// context values\nvar _useContext=useContext(EmployerContext),getCategoriesListToken=_useContext.getCategoriesListToken,categoriesListToken=_useContext.categoriesListToken,addJob=_useContext.addJob,loading=_useContext.loading;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),subCategories=_useState2[0],setSubCategories=_useState2[1];// const [details, setDetails] = useState(\"\");\nuseEffect(function(){getCategoriesListToken();},[]);var changeCtegory=function changeCtegory(event){var subCategories=categoriesListToken.find(function(cntry){return cntry.id==event.target.value;}).sub_category;setSubCategories(subCategories);};var initialValues=function initialValues(){return{title:'',category:'',subCategory:\"\",details:'',offer:'',requirements:[''],responsibilities:[''],finishAt:new Date(),image:null};};var validationSchema=Yup.object().shape({title:Yup.string().required(\"Required\"),category:Yup.string().required(\"Required\"),details:Yup.string().required(\"Required\"),offer:Yup.string().required(\"Required\")});var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var requirements,responsibilities,finishAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:requirements=values.requirements,responsibilities=values.responsibilities,finishAt=values.finishAt;requirements=JSON.stringify(requirements);responsibilities=JSON.stringify(responsibilities);finishAt=moment(finishAt).format(\"YYYY-MM-DD\");_context.next=6;return addJob(_objectSpread(_objectSpread({},values),{},{requirements:requirements,responsibilities:responsibilities,finishAt:finishAt}));case 6:history.push(\"/employer/jobs\");case 7:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"breadcrumb-bar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container-fluid\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row align-items-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-12 col-12\"},/*#__PURE__*/React.createElement(\"nav\",{\"aria-label\":\"breadcrumb\",className:\"page-breadcrumb\"},/*#__PURE__*/React.createElement(\"ol\",{className:\"breadcrumb\"},/*#__PURE__*/React.createElement(\"li\",{className:\"breadcrumb-item\"},/*#__PURE__*/React.createElement(Link,{to:\"/home\"},\"Home\")),/*#__PURE__*/React.createElement(\"li\",{className:\"breadcrumb-item\"},/*#__PURE__*/React.createElement(Link,{to:\"/doctor/appointments\"},\"Jobs\")),/*#__PURE__*/React.createElement(\"li\",{className:\"breadcrumb-item active\",\"aria-current\":\"page\"},\"Add Job\"))),/*#__PURE__*/React.createElement(\"h2\",{className:\"breadcrumb-title\"},\"Add Job\"))))),/*#__PURE__*/React.createElement(\"div\",{className:\"content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container-fluid\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-5 col-lg-4 col-xl-3 theiaStickySidebar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"appointments\"},/*#__PURE__*/React.createElement(StickyBox,{offsetTop:50,offsetBottom:20},/*#__PURE__*/React.createElement(DoctorSidebar,null)))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-7 col-lg-8 col-xl-9\"},/*#__PURE__*/React.createElement(\"div\",{className:\"appointments\"},/*#__PURE__*/React.createElement(Formik,{initialValues:initialValues(),validationSchema:validationSchema,onSubmit:handleSubmit,validateOnChange:false},function(formik){var setFieldValue=formik.setFieldValue,handleChange=formik.handleChange,isSubmitting=formik.isSubmitting;return/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"title\"},\"Job Title \",/*#__PURE__*/React.createElement(\"span\",{className:\"text-danger\"},\"*\")),/*#__PURE__*/React.createElement(Field,{type:\"text\",id:\"title\",name:\"title\",className:\"form-control\"}),/*#__PURE__*/React.createElement(ErrorMessage,{name:\"title\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-6\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"category\"},\"Category \",/*#__PURE__*/React.createElement(\"span\",{className:\"text-danger\"},\"*\")),/*#__PURE__*/React.createElement(Field,{as:\"select\",name:\"category\",id:\"category\",className:\"form-control\",onChange:function onChange(e){changeCtegory(e);handleChange(e);}},/*#__PURE__*/React.createElement(\"option\",{value:\"\",disabled:true},\"Select Category\"),categoriesListToken.map(function(category){return/*#__PURE__*/React.createElement(\"option\",{key:category.id,value:category.id},category.name);})),/*#__PURE__*/React.createElement(ErrorMessage,{name:\"category\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-md-6\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"subCategory\"},\"Sub Category\"),/*#__PURE__*/React.createElement(Field,{as:\"select\",name:\"subCategory\",id:\"subCategory\",className:\"form-control\"},/*#__PURE__*/React.createElement(\"option\",{value:\"\",disabled:true},\"Select Sub Category\"),subCategories.map(function(subCategory){return/*#__PURE__*/React.createElement(\"option\",{key:subCategory.id,value:subCategory.id},subCategory.name);})))),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"details\"},\"Details \",/*#__PURE__*/React.createElement(\"span\",{className:\"text-danger\"},\"*\")),/*#__PURE__*/React.createElement(Field,{as:\"textarea\",id:\"details\",name:\"details\",className:\"form-control\",rows:\"7\"}),/*#__PURE__*/React.createElement(ErrorMessage,{name:\"details\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"offer\"},\"Job Offer \",/*#__PURE__*/React.createElement(\"span\",{className:\"text-danger\"},\"*\")),/*#__PURE__*/React.createElement(Field,{type:\"text\",id:\"offer\",name:\"offer\",className:\"form-control\"}),/*#__PURE__*/React.createElement(ErrorMessage,{name:\"offer\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Requirements\"),/*#__PURE__*/React.createElement(FieldArray,{name:\"requirements\"},function(fieldArrayProps){var push=fieldArrayProps.push,remove=fieldArrayProps.remove,values=fieldArrayProps.form.values;var requirements=values.requirements;return/*#__PURE__*/React.createElement(\"div\",null,requirements.map(function(item,index){return/*#__PURE__*/React.createElement(\"div\",{key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group mb-1\"},/*#__PURE__*/React.createElement(Field,{type:\"text\",name:\"requirements[\".concat(index,\"]\"),className:\"form-control\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},index>0&&/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn bg-danger-light\",onClick:function onClick(){return remove(index);}},\" - \"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn bg-info-light\",onClick:function onClick(){return push('');}},\" + \"))));}));})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Responsibilities\"),/*#__PURE__*/React.createElement(FieldArray,{name:\"responsibilities\"},function(fieldArrayProps){var push=fieldArrayProps.push,remove=fieldArrayProps.remove,values=fieldArrayProps.form.values;var responsibilities=values.responsibilities;return/*#__PURE__*/React.createElement(\"div\",null,responsibilities.map(function(item,index){return/*#__PURE__*/React.createElement(\"div\",{key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group mb-1\"},/*#__PURE__*/React.createElement(Field,{type:\"text\",name:\"responsibilities[\".concat(index,\"]\"),className:\"form-control\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},index>0&&/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn bg-danger-light\",onClick:function onClick(){return remove(index);}},\" - \"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn bg-info-light\",onClick:function onClick(){return push('');}},\" + \"))));}));})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Finish At\"),/*#__PURE__*/React.createElement(Field,{name:\"finishAt\"},function(_ref2){var form=_ref2.form,field=_ref2.field;var setFieldValue=form.setFieldValue;var value=field.value;return/*#__PURE__*/React.createElement(DateView,Object.assign({},field,{className:\"form-control datetimepicker\",minDate:new Date(),selected:value,dateFormat:\"yyyy-MM-dd\",showYearDropdown:true,onChange:function onChange(val){return setFieldValue(\"finishAt\",val);}}));})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"image\"},\"Image File\"),/*#__PURE__*/React.createElement(Field,{type:\"file\",name:\"file\",id:\"image\",className:\"form-control\",onChange:function onChange(event){setFieldValue(\"image\",event.currentTarget.files[0]);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"submit-section mb-5\"},/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"btn btn-primary submit-btn\",disabled:isSubmitting},/*#__PURE__*/React.createElement(\"span\",null,\"Add\"),/*#__PURE__*/React.createElement(ActionLoading,{loading:loading}))));})))))));}export default AddJob;","map":{"version":3,"sources":["E:/CSR-master/src/client/components/employer/jobs/addjob/index.jsx"],"names":["React","useContext","useState","useEffect","Link","useHistory","StickyBox","DoctorSidebar","Formik","Form","Field","ErrorMessage","FieldArray","Yup","DateView","CKEditor","ClassicEditor","moment","EmployerContext","ActionLoading","AddJob","history","getCategoriesListToken","categoriesListToken","addJob","loading","subCategories","setSubCategories","changeCtegory","event","find","cntry","id","target","value","sub_category","initialValues","title","category","subCategory","details","offer","requirements","responsibilities","finishAt","Date","image","validationSchema","object","shape","string","required","handleSubmit","values","JSON","stringify","format","push","formik","setFieldValue","handleChange","isSubmitting","e","map","name","fieldArrayProps","remove","form","item","index","field","val","currentTarget","files"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport StickyBox from \"react-sticky-box\";\nimport DoctorSidebar from '../../sidebar';\nimport { Formik, Form, Field, ErrorMessage, FieldArray } from 'formik';\nimport * as Yup from 'yup';\nimport DateView from \"react-datepicker\";\n// react CKEditor text editor\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport moment from \"moment\";\n// context\nimport { EmployerContext } from \"../../../../context/employer\";\nimport ActionLoading from \"../../../loading/actionloading\";\n\nfunction AddJob() {\n\n  const history = useHistory();\n  // context values\n  const { getCategoriesListToken, categoriesListToken, addJob, loading } = useContext(EmployerContext);\n  const [subCategories, setSubCategories] = useState([]);\n  // const [details, setDetails] = useState(\"\");\n\n  useEffect(() => {\n    getCategoriesListToken();\n  }, [])\n\n  const changeCtegory = (event) => {\n    const subCategories = categoriesListToken.find(cntry => cntry.id == event.target.value).sub_category;\n    setSubCategories(subCategories);\n  }\n\n  const initialValues = () => {\n    return {\n      title: '',\n      category: '',\n      subCategory: \"\",\n      details: '',\n      offer: '',\n      requirements: [''],\n      responsibilities: [''],\n      finishAt: new Date(),\n      image: null,\n    }\n  }\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Required\"),\n    category: Yup.string().required(\"Required\"),\n    details: Yup.string().required(\"Required\"),\n    offer: Yup.string().required(\"Required\"),\n  });\n\n  const handleSubmit = async values => {\n    let { requirements, responsibilities, finishAt } = values;\n    requirements = JSON.stringify(requirements);\n    responsibilities = JSON.stringify(responsibilities);\n    finishAt = moment(finishAt).format(\"YYYY-MM-DD\");\n    await addJob({ ...values, requirements, responsibilities, finishAt });\n    history.push(\"/employer/jobs\");\n  }\n\n  return (\n    <div>\n\n      <div className=\"breadcrumb-bar\">\n        <div className=\"container-fluid\">\n          <div className=\"row align-items-center\">\n            <div className=\"col-md-12 col-12\">\n              <nav aria-label=\"breadcrumb\" className=\"page-breadcrumb\">\n                <ol className=\"breadcrumb\">\n                  <li className=\"breadcrumb-item\"><Link to=\"/home\">Home</Link></li>\n                  <li className=\"breadcrumb-item\"><Link to=\"/doctor/appointments\">Jobs</Link></li>\n                  <li className=\"breadcrumb-item active\" aria-current=\"page\">Add Job</li>\n                </ol>\n              </nav>\n              <h2 className=\"breadcrumb-title\">Add Job</h2>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        <div className=\"container-fluid\">\n\n          <div className=\"row\">\n\n            <div className=\"col-md-5 col-lg-4 col-xl-3 theiaStickySidebar\">\n              <div className=\"appointments\">\n                <StickyBox offsetTop={50} offsetBottom={20}>\n                  <DoctorSidebar />\n                </StickyBox>\n              </div>\n            </div>\n\n            <div className=\"col-md-7 col-lg-8 col-xl-9\">\n              <div className=\"appointments\">\n\n                <Formik\n                  initialValues={initialValues()}\n                  validationSchema={validationSchema}\n                  onSubmit={handleSubmit}\n                  validateOnChange={false}\n                >\n                  {(formik) => {\n                    const { setFieldValue, handleChange, isSubmitting } = formik;\n                    return (\n                      <Form>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"title\">Job Title <span className=\"text-danger\">*</span></label>\n                          <Field type=\"text\" id=\"title\" name=\"title\" className=\"form-control\" />\n                          <ErrorMessage name=\"title\" />\n                        </div>\n                        <div className=\"form-row\">\n                          <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"category\">Category <span className=\"text-danger\">*</span></label>\n                            <Field as=\"select\" name=\"category\" id=\"category\" className=\"form-control\"\n                              onChange={(e) => { changeCtegory(e); handleChange(e) }}\n                            >\n                              <option value=\"\" disabled>Select Category</option>\n                              {\n                                categoriesListToken.map((category) => {\n                                  return (\n                                    <option key={category.id} value={category.id}>\n                                      {category.name}\n                                    </option>\n                                  );\n                                })\n                              }\n                            </Field>\n                            <ErrorMessage name=\"category\" />\n                          </div>\n                          <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"subCategory\">Sub Category</label>\n                            <Field as=\"select\" name=\"subCategory\" id=\"subCategory\" className=\"form-control\">\n                              <option value=\"\" disabled>Select Sub Category</option>\n                              {\n                                subCategories.map(subCategory => {\n                                  return (\n                                    <option key={subCategory.id} value={subCategory.id}>\n                                      {subCategory.name}\n                                    </option>\n                                  );\n                                })\n                              }\n                            </Field>\n                          </div>\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"details\">Details <span className=\"text-danger\">*</span></label>\n                          <Field as=\"textarea\" id=\"details\" name=\"details\" className=\"form-control\" rows=\"7\" />\n                          <ErrorMessage name=\"details\" />\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"offer\">Job Offer <span className=\"text-danger\">*</span></label>\n                          <Field type=\"text\" id=\"offer\" name=\"offer\" className=\"form-control\" />\n                          <ErrorMessage name=\"offer\" />\n                        </div>\n                        <div className=\"form-group\">\n                          <label>Requirements</label>\n                          <FieldArray name=\"requirements\">\n                            {\n                              (fieldArrayProps) => {\n                                const { push, remove, form: { values } } = fieldArrayProps;\n                                const { requirements } = values;\n                                return <div>\n                                  {\n                                    requirements.map((item, index) => (\n                                      <div key={index}>\n                                        <div className=\"input-group mb-1\">\n                                          <Field type=\"text\" name={`requirements[${index}]`} className=\"form-control\" />\n                                          <div className=\"input-group-append\">\n                                            {index > 0 &&\n                                              <button type=\"button\" className=\"btn bg-danger-light\" onClick={() => remove(index)}> - </button>\n                                            }\n                                            <button type=\"button\" className=\"btn bg-info-light\" onClick={() => push('')}> + </button>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    ))\n                                  }\n                                </div>\n                              }\n                            }\n                          </FieldArray>\n                        </div>\n                        <div className=\"form-group\">\n                          <label>Responsibilities</label>\n                          <FieldArray name=\"responsibilities\">\n                            {\n                              (fieldArrayProps) => {\n                                const { push, remove, form: { values } } = fieldArrayProps;\n                                const { responsibilities } = values;\n                                return <div>\n                                  {\n                                    responsibilities.map((item, index) => (\n                                      <div key={index}>\n                                        <div className=\"input-group mb-1\">\n                                          <Field type=\"text\" name={`responsibilities[${index}]`} className=\"form-control\" />\n                                          <div className=\"input-group-append\">\n                                            {index > 0 &&\n                                              <button type=\"button\" className=\"btn bg-danger-light\" onClick={() => remove(index)}> - </button>\n                                            }\n                                            <button type=\"button\" className=\"btn bg-info-light\" onClick={() => push('')}> + </button>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    ))\n                                  }\n                                </div>\n                              }\n                            }\n                          </FieldArray>\n                        </div>\n                        <div className=\"form-group\">\n                          <label>Finish At</label>\n                          <Field name=\"finishAt\">\n                            {\n                              ({ form, field }) => {\n                                const { setFieldValue } = form;\n                                const { value } = field;\n                                return <DateView\n                                  {...field}\n                                  className=\"form-control datetimepicker\"\n                                  minDate={new Date()}\n                                  selected={value}\n                                  dateFormat=\"yyyy-MM-dd\"\n                                  showYearDropdown\n                                  onChange={(val) => setFieldValue(\"finishAt\", val)}\n                                />\n                              }\n                            }\n                          </Field>\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"image\">Image File</label>\n                          <Field type=\"file\" name=\"file\" id=\"image\" className=\"form-control\" onChange={(event) => {\n                            setFieldValue(\"image\", event.currentTarget.files[0]);\n                          }}\n                          />\n                        </div>\n                        <div className=\"submit-section mb-5\">\n                          <button type=\"submit\" className=\"btn btn-primary submit-btn\" disabled={isSubmitting}>\n                            <span>Add</span>\n                            <ActionLoading loading={loading} />\n                          </button>\n                        </div>\n                      </Form>\n                    )\n                  }}\n                </Formik>\n\n              </div>\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default AddJob;\n"]},"metadata":{},"sourceType":"module"}