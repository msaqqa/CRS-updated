{"ast":null,"code":"var _jsxFileName = \"E:\\\\CSR-master\\\\src\\\\client\\\\context\\\\employee.js\";\nimport React, { Component, createContext } from 'react';\nimport axios from \"axios\";\nimport { UserContext } from \"./user\"; // importing toastify module \n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure(); // context\n\nconst EmployeeContext = createContext(); // provider\n\nclass EmployeeProvider extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      url: \"https://joodya.com/crs/api/v1\",\n      profile: {\n        categories: [],\n        countries: [],\n        employeeInfo: {}\n      },\n      proposals: [],\n      education: [],\n      works: [],\n      languages: [],\n      skills: [],\n      loading: true\n    };\n\n    this.componentDidMount = () => {};\n\n    this.authHeader = () => {\n      const user = JSON.parse(localStorage.getItem('user'));\n\n      if (user && user.token) {\n        return {\n          Authorization: `Bearer ${user.token}`\n        };\n      } else {\n        // redirect to login page\n        return {};\n      }\n    };\n\n    this.getProfile = async () => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'get',\n        url: `${this.state.url}/employee/get_profile`,\n        headers: this.authHeader()\n      }).then(res => {\n        const {\n          categories,\n          countries,\n          data\n        } = res.data;\n        this.setState({\n          profile: {\n            categories,\n            countries,\n            employeeInfo: data\n          }\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.setProfile = async _ref => {\n      let {\n        pref,\n        photo,\n        name,\n        birthDate,\n        email,\n        mobile,\n        category,\n        country,\n        address,\n        city,\n        state,\n        zipCode\n      } = _ref;\n      const fd = new FormData();\n      fd.append(\"pref\", pref);\n      fd.append(\"photo\", photo);\n      fd.append(\"name\", name);\n      fd.append(\"birthDate\", birthDate);\n      fd.append(\"email\", email);\n      fd.append(\"mobile\", mobile);\n      fd.append(\"category_id\", category);\n      fd.append(\"country_id\", country);\n      fd.append(\"address\", address);\n      fd.append(\"city\", city);\n      fd.append(\"state\", state);\n      fd.append(\"zipCode\", zipCode);\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/set_profile`,\n        headers: this.authHeader(),\n        data: fd\n      }).then(async res => {\n        await this.getProfile();\n        const {\n          userRefresh\n        } = this.context;\n        userRefresh(this.state.profile.employeeInfo);\n        toast.success('Success saved chenged', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.setProposalJob = async (id, coverLetter) => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/send_proposal`,\n        headers: this.authHeader(),\n        data: {\n          \"job_id\": id,\n          \"message\": coverLetter\n        }\n      }).then(res => {\n        toast.success('Success Post Proposal', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.getProposals = async () => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/proposals`,\n        headers: this.authHeader()\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const proposals = data;\n        this.setState({\n          proposals\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getEducation = async () => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/educations`,\n        headers: this.authHeader()\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const education = data;\n        this.setState({\n          education\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.AddEducation = async _ref2 => {\n      let {\n        title,\n        specialization,\n        organization,\n        percentage,\n        from_date,\n        to_date,\n        attachments\n      } = _ref2;\n      let fd = new FormData();\n      fd.append(\"title\", title);\n      fd.append(\"specialization\", specialization);\n      fd.append(\"organization\", organization);\n      fd.append(\"percentage\", percentage);\n      fd.append(\"from_date\", from_date);\n      fd.append(\"to_date\", to_date);\n      fd.append(\"attachments\", attachments); // for (var pair of fd.entries()) {\n      //     console.log(pair[0]+ ', ' + pair[1]); \n      // }\n      // console.log(\"attachments\", attachments);\n\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/add_education`,\n        headers: this.authHeader(),\n        data: fd\n      }).then(res => {\n        toast.success('Success Add Education', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        this.getEducation();\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.updateEducation = async _ref3 => {\n      let {\n        id,\n        title,\n        specialization,\n        organization,\n        percentage,\n        from_date,\n        to_date,\n        attachments\n      } = _ref3;\n      let fd = new FormData();\n      fd.append(\"education_id\", id);\n      fd.append(\"title\", title);\n      fd.append(\"specialization\", specialization);\n      fd.append(\"organization\", organization);\n      fd.append(\"percentage\", percentage);\n      fd.append(\"from_date\", from_date);\n      fd.append(\"to_date\", to_date);\n      fd.append(\"attachments\", attachments);\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/update_education`,\n        headers: this.authHeader(),\n        data: fd\n      }).then(res => {\n        toast.success('Success Update Education', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        this.getEducation();\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.deleteEducation = async id => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/delete_education`,\n        headers: this.authHeader(),\n        data: {\n          \"education_id\": id\n        }\n      }).then(res => {\n        toast.success('Success Delete Education', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        this.getEducation();\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.getWorks = async () => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/works`,\n        headers: this.authHeader()\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const works = data;\n        this.setState({\n          works\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.AddWork = async _ref4 => {\n      let {\n        title,\n        description,\n        from_date,\n        to_date,\n        attachments\n      } = _ref4;\n      let fd = new FormData();\n      fd.append(\"title\", title);\n      fd.append(\"description\", description);\n      fd.append(\"from_date\", from_date);\n      fd.append(\"to_date\", to_date);\n      fd.append(\"attachments\", attachments); // for (var pair of fd.entries()) {\n      //     console.log(pair[0]+ ', ' + pair[1]); \n      // }\n\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/add_work`,\n        headers: this.authHeader(),\n        data: fd\n      }).then(res => {\n        toast.success('Success Add Work', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        this.getWorks();\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.updateWork = async _ref5 => {\n      let {\n        id,\n        title,\n        description,\n        from_date,\n        to_date,\n        attachments\n      } = _ref5;\n      let fd = new FormData();\n      fd.append(\"work_id\", id);\n      fd.append(\"title\", title);\n      fd.append(\"description\", description);\n      fd.append(\"from_date\", from_date);\n      fd.append(\"to_date\", to_date);\n      fd.append(\"attachments\", attachments);\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/update_work`,\n        headers: this.authHeader(),\n        data: fd\n      }).then(res => {\n        toast.success('Success Update Work', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        this.getWorks();\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.deleteWork = async id => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/delete_work`,\n        headers: this.authHeader(),\n        data: {\n          \"work_id\": id\n        }\n      }).then(res => {\n        toast.success('Success Delete Work', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        this.getWorks();\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.getLanguages = async () => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/languages`,\n        headers: this.authHeader()\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const languages = data;\n        this.setState({\n          languages\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.AddLanguage = async values => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/add_language`,\n        headers: this.authHeader(),\n        data: values\n      }).then(res => {\n        toast.success('Success Add Language', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        this.getLanguages();\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.updateLanguage = async _ref6 => {\n      let {\n        id,\n        name,\n        level\n      } = _ref6;\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/update_language`,\n        headers: this.authHeader(),\n        data: {\n          \"language_id\": id,\n          name,\n          level\n        }\n      }).then(res => {\n        toast.success('Success Update Language', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        this.getLanguages();\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.deleteLanguage = async id => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/delete_language`,\n        headers: this.authHeader(),\n        data: {\n          \"language_id\": id\n        }\n      }).then(res => {\n        toast.success('Success Delete Language', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        this.getLanguages();\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.getSkills = async () => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/skills`,\n        headers: this.authHeader()\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const skills = data;\n        this.setState({\n          skills\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.AddSkill = async name => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/add_skill`,\n        headers: this.authHeader(),\n        data: {\n          name\n        }\n      }).then(res => {\n        toast.success('Success Add Skill', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        this.getSkills();\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.updateSkill = async _ref7 => {\n      let {\n        id,\n        name\n      } = _ref7;\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/update_skill`,\n        headers: this.authHeader(),\n        data: {\n          \"skill_id\": id,\n          name\n        }\n      }).then(res => {\n        toast.success('Success Update Skill', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        this.getSkills();\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.deleteSkill = async id => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/delete_skill`,\n        headers: this.authHeader(),\n        data: {\n          \"skill_id\": id\n        }\n      }).then(res => {\n        toast.success('Success Delete Skill', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        this.getSkills();\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(EmployeeContext.Provider, {\n      value: { ...this.state,\n        getProfile: this.getProfile,\n        setProfile: this.setProfile,\n        setProposalJob: this.setProposalJob,\n        getProposals: this.getProposals,\n        getEducation: this.getEducation,\n        AddEducation: this.AddEducation,\n        updateEducation: this.updateEducation,\n        deleteEducation: this.deleteEducation,\n        getWorks: this.getWorks,\n        AddWork: this.AddWork,\n        updateWork: this.updateWork,\n        deleteWork: this.deleteWork,\n        getLanguages: this.getLanguages,\n        AddLanguage: this.AddLanguage,\n        updateLanguage: this.updateLanguage,\n        deleteLanguage: this.deleteLanguage,\n        getSkills: this.getSkills,\n        AddSkill: this.AddSkill,\n        updateSkill: this.updateSkill,\n        deleteSkill: this.deleteSkill\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n} // consumer\n\n\nconst EmployeeConsumer = EmployeeContext.Consumer;\nexport { EmployeeConsumer, EmployeeContext };\nEmployeeProvider.contextType = UserContext;\nexport default EmployeeProvider;","map":{"version":3,"sources":["E:/CSR-master/src/client/context/employee.js"],"names":["React","Component","createContext","axios","UserContext","toast","configure","EmployeeContext","EmployeeProvider","state","url","profile","categories","countries","employeeInfo","proposals","education","works","languages","skills","loading","componentDidMount","authHeader","user","JSON","parse","localStorage","getItem","token","Authorization","getProfile","setState","method","headers","then","res","data","console","log","error","setProfile","pref","photo","name","birthDate","email","mobile","category","country","address","city","zipCode","fd","FormData","append","userRefresh","context","success","autoClose","position","POSITION","TOP_CENTER","setProposalJob","id","coverLetter","getProposals","getEducation","AddEducation","title","specialization","organization","percentage","from_date","to_date","attachments","updateEducation","deleteEducation","getWorks","AddWork","description","updateWork","deleteWork","getLanguages","AddLanguage","values","updateLanguage","level","deleteLanguage","getSkills","AddSkill","updateSkill","deleteSkill","render","props","children","EmployeeConsumer","Consumer","contextType"],"mappings":"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","sourcesContent":["import React, {Component, createContext} from 'react';\nimport axios from \"axios\";\nimport {UserContext} from \"./user\";\n// importing toastify module \nimport {toast} from 'react-toastify';  \nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure();\n\n// context\nconst EmployeeContext = createContext();\n\n// provider\nclass EmployeeProvider extends Component {\n    state = {\n        url: \"https://joodya.com/crs/api/v1\",\n        profile: {\n            categories: [],\n            countries: [],\n            employeeInfo: {},\n        },\n        proposals: [],\n        education: [],\n        works: [],\n        languages: [],\n        skills: [],\n        loading: true,\n    }\n    \n    componentDidMount = () => {\n        \n    }\n\n    authHeader = () => {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (user && user.token) {\n            return { Authorization: `Bearer ${user.token}` };\n        } else {\n            // redirect to login page\n            return {};\n        }\n    }\n\n    getProfile = async () => {\n        this.setState({loading: true});\n        await axios({\n            method: 'get',\n            url: `${this.state.url}/employee/get_profile`,\n            headers: this.authHeader(),\n        }).then(\n            res => {\n                const {categories, countries, data} = res.data;\n                this.setState({profile: {\n                    categories,\n                    countries,\n                    employeeInfo: data,\n                }})\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    }\n\n    setProfile = async ({pref, photo, name, birthDate, email, mobile, category, country, address, city, state, zipCode}) => {\n        const fd = new FormData();\n        fd.append(\"pref\", pref);\n        fd.append(\"photo\", photo);\n        fd.append(\"name\", name);\n        fd.append(\"birthDate\", birthDate);\n        fd.append(\"email\", email);\n        fd.append(\"mobile\", mobile);\n        fd.append(\"category_id\", category);\n        fd.append(\"country_id\", country);\n        fd.append(\"address\", address);\n        fd.append(\"city\", city);\n        fd.append(\"state\", state);\n        fd.append(\"zipCode\", zipCode);\n        this.setState({loading: true});\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/set_profile`,\n            headers: this.authHeader(),\n            data: fd,\n        }).then(\n            async res => {\n                await this.getProfile();\n                const {userRefresh} = this.context;\n                userRefresh(this.state.profile.employeeInfo);\n                toast.success('Success saved chenged', {autoClose:2000, position: toast.POSITION.TOP_CENTER})\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    }\n\n    setProposalJob = async (id, coverLetter) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/send_proposal`,\n            headers: this.authHeader(),\n            data: {\"job_id\": id, \"message\": coverLetter},\n        }).then(\n            res => {\n                toast.success('Success Post Proposal', {autoClose:2000, position: toast.POSITION.TOP_CENTER})\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    getProposals = async () => {\n        this.setState({loading: true});\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/proposals`,\n            headers: this.authHeader(),\n        }).then(\n            res => {\n                const {data} = res.data;\n                const proposals = data;\n                this.setState({proposals})\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    }\n\n    getEducation = async () => {\n        this.setState({loading: true});\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/educations`,\n            headers: this.authHeader(),\n        }).then(\n            res => {\n                const {data} = res.data;\n                const education = data;\n                this.setState({education})\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    }\n\n    AddEducation = async ({title, specialization, organization, percentage, from_date, to_date, attachments}) => {\n        let fd = new FormData();\n        fd.append(\"title\", title);\n        fd.append(\"specialization\", specialization);\n        fd.append(\"organization\", organization);\n        fd.append(\"percentage\", percentage);\n        fd.append(\"from_date\", from_date);\n        fd.append(\"to_date\", to_date);\n        fd.append(\"attachments\", attachments);\n\n        // for (var pair of fd.entries()) {\n        //     console.log(pair[0]+ ', ' + pair[1]); \n        // }\n        // console.log(\"attachments\", attachments);\n\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/add_education`,\n            headers: this.authHeader(),\n            data: fd,\n        }).then(\n            res => {\n                toast.success('Success Add Education', {autoClose:2000, position: toast.POSITION.TOP_CENTER})\n                this.getEducation();\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    updateEducation  = async ({id, title, specialization, organization, percentage, from_date, to_date, attachments}) => {\n        let fd = new FormData();\n        fd.append(\"education_id\", id);\n        fd.append(\"title\", title);\n        fd.append(\"specialization\", specialization);\n        fd.append(\"organization\", organization);\n        fd.append(\"percentage\", percentage);\n        fd.append(\"from_date\", from_date);\n        fd.append(\"to_date\", to_date);\n        fd.append(\"attachments\", attachments);\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/update_education`,\n            headers: this.authHeader(),\n            data: fd\n        }).then(\n            res => {\n                toast.success('Success Update Education', {autoClose:2000, position: toast.POSITION.TOP_CENTER})\n                this.getEducation();\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    deleteEducation  = async (id) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/delete_education`,\n            headers: this.authHeader(),\n            data: {\"education_id\": id},\n        }).then(\n            res => {\n                toast.success('Success Delete Education', {autoClose:2000, position: toast.POSITION.TOP_CENTER})\n                this.getEducation();\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    getWorks = async () => {\n        this.setState({loading: true});\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/works`,\n            headers: this.authHeader(),\n        }).then(\n            res => {\n                const {data} = res.data;\n                const works = data;\n                this.setState({works})\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    }\n\n    AddWork = async ({title, description, from_date, to_date, attachments}) => {\n        let fd = new FormData();\n        fd.append(\"title\", title);\n        fd.append(\"description\", description);\n        fd.append(\"from_date\", from_date);\n        fd.append(\"to_date\", to_date);\n        fd.append(\"attachments\", attachments);\n        // for (var pair of fd.entries()) {\n        //     console.log(pair[0]+ ', ' + pair[1]); \n        // }\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/add_work`,\n            headers: this.authHeader(),\n            data: fd,\n        }).then(\n            res => {\n                toast.success('Success Add Work', {autoClose:2000, position: toast.POSITION.TOP_CENTER})\n                this.getWorks();\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    updateWork = async ({id, title, description, from_date, to_date, attachments}) => {\n        let fd = new FormData();\n        fd.append(\"work_id\", id);\n        fd.append(\"title\", title);\n        fd.append(\"description\", description);\n        fd.append(\"from_date\", from_date);\n        fd.append(\"to_date\", to_date);\n        fd.append(\"attachments\", attachments);\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/update_work`,\n            headers: this.authHeader(),\n            data: fd,\n        }).then(\n            res => {\n                toast.success('Success Update Work', {autoClose:2000, position: toast.POSITION.TOP_CENTER})\n                this.getWorks();\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    deleteWork  = async (id) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/delete_work`,\n            headers: this.authHeader(),\n            data: {\"work_id\": id},\n        }).then(\n            res => {\n                toast.success('Success Delete Work', {autoClose:2000, position: toast.POSITION.TOP_CENTER})\n                this.getWorks();\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    getLanguages = async () => {\n        this.setState({loading: true});\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/languages`,\n            headers: this.authHeader(),\n        }).then(\n            res => {\n                const {data} = res.data;\n                const languages = data;\n                this.setState({languages})\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    }\n\n    AddLanguage = async (values) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/add_language`,\n            headers: this.authHeader(),\n            data: values,\n        }).then(\n            res => {\n                toast.success('Success Add Language', {autoClose:2000, position: toast.POSITION.TOP_CENTER})\n                this.getLanguages();\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    updateLanguage = async ({id, name, level}) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/update_language`,\n            headers: this.authHeader(),\n            data: {\"language_id\": id, name, level},\n        }).then(\n            res => {\n                toast.success('Success Update Language', {autoClose:2000, position: toast.POSITION.TOP_CENTER})\n                this.getLanguages();\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    deleteLanguage  = async (id) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/delete_language`,\n            headers: this.authHeader(),\n            data: {\"language_id\": id},\n        }).then(\n            res => {\n                toast.success('Success Delete Language', {autoClose:2000, position: toast.POSITION.TOP_CENTER})\n                this.getLanguages();\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    getSkills = async () => {\n        this.setState({loading: true});\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/skills`,\n            headers: this.authHeader(),\n        }).then(\n            res => {\n                const {data} = res.data;\n                const skills = data;\n                this.setState({skills})\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    }\n\n    AddSkill = async (name) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/add_skill`,\n            headers: this.authHeader(),\n            data: {name},\n        }).then(\n            res => {\n                toast.success('Success Add Skill', {autoClose:2000, position: toast.POSITION.TOP_CENTER})\n                this.getSkills();\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    updateSkill = async ({id, name}) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/update_skill`,\n            headers: this.authHeader(),\n            data: {\"skill_id\": id, name},\n        }).then(\n            res => {\n                toast.success('Success Update Skill', {autoClose:2000, position: toast.POSITION.TOP_CENTER})\n                this.getSkills();\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    deleteSkill  = async (id) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/delete_skill`,\n            headers: this.authHeader(),\n            data: {\"skill_id\": id},\n        }).then(\n            res => {\n                toast.success('Success Delete Skill', {autoClose:2000, position: toast.POSITION.TOP_CENTER})\n                this.getSkills();\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n    \n    render() {\n        return (\n            <EmployeeContext.Provider value={{\n                ...this.state,\n\n                getProfile: this.getProfile,\n                setProfile: this.setProfile,\n\n                setProposalJob: this.setProposalJob,\n                getProposals: this.getProposals,\n                \n                getEducation: this.getEducation,\n                AddEducation: this.AddEducation,\n                updateEducation: this.updateEducation,\n                deleteEducation: this.deleteEducation,\n\n                getWorks: this.getWorks,\n                AddWork: this.AddWork,\n                updateWork: this.updateWork,\n                deleteWork: this.deleteWork,\n\n                getLanguages: this.getLanguages,\n                AddLanguage: this.AddLanguage,\n                updateLanguage: this.updateLanguage,\n                deleteLanguage: this.deleteLanguage,\n\n                getSkills: this.getSkills,\n                AddSkill: this.AddSkill,\n                updateSkill:this.updateSkill,\n                deleteSkill: this.deleteSkill,\n            }}>\n                {this.props.children}\n            </EmployeeContext.Provider>\n        )\n    }\n}\n\n// consumer\nconst EmployeeConsumer = EmployeeContext.Consumer;\n\nexport {EmployeeConsumer, EmployeeContext};\nEmployeeProvider.contextType = UserContext;\nexport default EmployeeProvider;"]},"metadata":{},"sourceType":"module"}