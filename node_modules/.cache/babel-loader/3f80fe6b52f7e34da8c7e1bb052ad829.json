{"ast":null,"code":"var _jsxFileName = \"E:\\\\CSR-master\\\\src\\\\admin\\\\components\\\\jobs\\\\employerjobs\\\\index.jsx\";\nimport React, { Component } from \"react\";\nimport SidebarNav from \"../../sidebar\";\nimport { Link } from 'react-router-dom';\nimport { Table } from \"antd\";\nimport { itemRender, onShowSizeChange } from \"../../../components/paginationfunction\";\nimport IMG01 from \"../../../assets/images/doctor-thumb-01.jpg\";\nimport PageLoading from \"../../loading/pageloading\"; // context\n\nimport { AdminContext } from \"../../../context/admin\"; // moment\n\nimport moment from \"moment\";\n\nclass EmployerJobs extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleSingleJob = async id => {\n      await this.context.getSingleJob(id);\n      this.props.history.push(`/admin/single-job/${id}`);\n    };\n  }\n\n  render() {\n    const {\n      employerInfo: { ...employerInfo\n      },\n      jobs\n    } = this.context.singleEmployer;\n    const {\n      name\n    } = employerInfo;\n    const {\n      closed,\n      coplete,\n      open,\n      processed\n    } = jobs;\n    const data = [...closed, ...coplete, ...open, ...processed];\n    const columns = [{\n      title: \"Job Name\",\n      dataIndex: \"title\",\n      render: (title, _ref) => {\n        let {\n          image,\n          id\n        } = _ref;\n        const imageUrl = image ? `http://excodeteam.com/crs/public/images/${image}` : IMG01;\n        return /*#__PURE__*/React.createElement(\"h2\", {\n          className: \"table-avatar\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"#\",\n          onClick: () => this.handleSingleJob(id),\n          className: \"avatar avatar-sm mr-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          alt: \"Job Image\",\n          src: imageUrl,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(Link, {\n          to: \"#\",\n          onClick: () => this.handleSingleJob(id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }\n        }, title));\n      },\n      sorter: (a, b) => a.title.length - b.title.length\n    }, {\n      title: \"Category\",\n      dataIndex: \"category\",\n      render: category => category ? category.name : \"null\",\n      sorter: (a, b) => a.category.name.length - b.category.name.length\n    }, {\n      title: \"Status\",\n      dataIndex: \"status\",\n      render: status => {\n        const statusValue = status === \"0\" ? \"Open\" : status === \"1\" ? \"Closed\" : status === \"2\" ? \"Processed\" : \"Completed\";\n        const statusClass = status === \"0\" ? \"warning\" : status === \"1\" ? \"danger\" : status === \"2\" ? \"primary\" : \"success\";\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: `badge badge-pill bg-${statusClass}-light`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 18\n          }\n        }, statusValue);\n      },\n      sorter: (a, b) => a.employer.status.length - b.employer.status.length\n    }, {\n      title: \"Posted At\",\n      dataIndex: \"created_at\",\n      render: date => moment(date).format(\"YYYY-MM-DD\"),\n      sorter: (a, b) => a.created_at.length - b.created_at.length\n    }, {\n      title: \"Proposals Count\",\n      dataIndex: \"\",\n      render: () => \"Proposals (0)\"\n    }, {\n      title: \"Details\",\n      dataIndex: \"id\",\n      render: (id, record) => /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm bg-info-light\",\n        onClick: () => this.handleSingleJob(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, \"View (\", record.jobs_count, \")\")\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SidebarNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"page-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, name, \" Jobs\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"breadcrumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/admin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 23\n      }\n    }, \"Dashboard\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"Jobs\"), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"breadcrumb-item active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, name, \" Jobs\"))))), loading ? /*#__PURE__*/React.createElement(PageLoading, {\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 24\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"table-striped\",\n      style: {\n        overflowX: \"auto\"\n      },\n      columns: columns // bordered\n      ,\n      dataSource: data,\n      rowKey: record => record.id,\n      showSizeChanger: true,\n      pagination: {\n        total: data ? data.length : 0,\n        showTotal: (total, range) => `Showing ${range[0]} to ${range[1]} of ${total} entries`,\n        showSizeChanger: true,\n        onShowSizeChange: onShowSizeChange,\n        itemRender: itemRender\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    })))))))));\n  }\n\n}\n\nEmployerJobs.contextType = AdminContext;\nexport default EmployerJobs;","map":{"version":3,"sources":["E:/CSR-master/src/admin/components/jobs/employerjobs/index.jsx"],"names":["React","Component","SidebarNav","Link","Table","itemRender","onShowSizeChange","IMG01","PageLoading","AdminContext","moment","EmployerJobs","handleSingleJob","id","context","getSingleJob","props","history","push","render","employerInfo","jobs","singleEmployer","name","closed","coplete","open","processed","data","columns","title","dataIndex","image","imageUrl","sorter","a","b","length","category","status","statusValue","statusClass","employer","date","format","created_at","record","jobs_count","loading","overflowX","total","showTotal","range","showSizeChanger","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SidebarNav from \"../../sidebar\";\nimport { Link } from 'react-router-dom';\nimport { Table } from \"antd\";\nimport { itemRender, onShowSizeChange } from \"../../../components/paginationfunction\";\nimport IMG01 from \"../../../assets/images/doctor-thumb-01.jpg\";\nimport PageLoading from \"../../loading/pageloading\"\n// context\nimport { AdminContext } from \"../../../context/admin\";\n// moment\nimport moment from \"moment\";\n\nclass EmployerJobs extends Component {\n\n  handleSingleJob = async (id) => {\n    await this.context.getSingleJob(id);\n    this.props.history.push(`/admin/single-job/${id}`);\n  }\n\n  render() {\n    const { employerInfo: { ...employerInfo }, jobs } = this.context.singleEmployer;\n    const { name } = employerInfo;\n    const { closed, coplete, open, processed } = jobs;\n    const data = [...closed, ...coplete, ...open, ...processed];\n\n    const columns = [\n      {\n        title: \"Job Name\",\n        dataIndex: \"title\",\n        render: (title, { image, id }) => {\n          const imageUrl = image ? `http://excodeteam.com/crs/public/images/${image}` : IMG01;\n          return (\n            <h2 className=\"table-avatar\">\n              <Link to=\"#\" onClick={() => this.handleSingleJob(id)} className=\"avatar avatar-sm mr-2\">\n                <img alt=\"Job Image\" src={imageUrl} />\n              </Link>\n              <Link to=\"#\" onClick={() => this.handleSingleJob(id)}>{title}</Link>\n            </h2>\n          )\n        },\n        sorter: (a, b) => a.title.length - b.title.length,\n      },\n      {\n        title: \"Category\",\n        dataIndex: \"category\",\n        render: (category) => (category ? category.name : \"null\"),\n        sorter: (a, b) => a.category.name.length - b.category.name.length,\n      },\n      {\n        title: \"Status\",\n        dataIndex: \"status\",\n        render: (status) => {\n          const statusValue = status === \"0\" ? \"Open\" : status === \"1\" ? \"Closed\" : status === \"2\" ? \"Processed\" : \"Completed\";\n          const statusClass = status === \"0\" ? \"warning\" : status === \"1\" ? \"danger\" : status === \"2\" ? \"primary\" : \"success\";\n          return <span className={`badge badge-pill bg-${statusClass}-light`}>{statusValue}</span>;\n        },\n        sorter: (a, b) => a.employer.status.length - b.employer.status.length,\n      },\n      {\n        title: \"Posted At\",\n        dataIndex: \"created_at\",\n        render: (date) => (moment(date).format(\"YYYY-MM-DD\")),\n        sorter: (a, b) => a.created_at.length - b.created_at.length,\n      },\n      {\n        title: \"Proposals Count\",\n        dataIndex: \"\",\n        render: () => (\"Proposals (0)\"),\n      },\n      {\n        title: \"Details\",\n        dataIndex: \"id\",\n        render: (id, record) => (\n          <button className=\"btn btn-sm bg-info-light\" onClick={() => this.handleSingleJob(id)}>View ({record.jobs_count})</button>\n        ),\n      },\n    ];\n\n    return (\n      <>\n        <SidebarNav />\n        <div className=\"page-wrapper\">\n          <div className=\"content container-fluid\">\n\n            <div className=\"page-header\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <h3 className=\"page-title\">{name} Jobs</h3>\n                  <ul className=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\">\n                      <Link to=\"/admin\">Dashboard</Link>\n                    </li>\n                    <li className=\"breadcrumb-item\">Jobs</li>\n                    <li className=\"breadcrumb-item active\">{name} Jobs</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            {loading ? <PageLoading loading={loading} /> :\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <div className=\"table-responsive\">\n                        <Table\n                          className=\"table-striped\"\n                          style={{ overflowX: \"auto\" }}\n                          columns={columns}\n                          // bordered\n                          dataSource={data}\n                          rowKey={(record) => record.id}\n                          showSizeChanger={true}\n                          pagination={{\n                            total: data ? data.length : 0,\n                            showTotal: (total, range) =>\n                              `Showing ${range[0]} to ${range[1]} of ${total} entries`,\n                            showSizeChanger: true,\n                            onShowSizeChange: onShowSizeChange,\n                            itemRender: itemRender,\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nEmployerJobs.contextType = AdminContext;\nexport default EmployerJobs;"]},"metadata":{},"sourceType":"module"}