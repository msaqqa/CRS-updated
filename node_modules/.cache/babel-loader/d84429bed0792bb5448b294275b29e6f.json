{"ast":null,"code":"var _jsxFileName = \"E:\\\\CSR-master\\\\src\\\\admin\\\\context\\\\admin.js\";\nimport React, { Component, createContext } from 'react';\nimport axios from \"axios\";\nimport history from \"../../history\"; // Importing toastify module \n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; // toast-configuration method,  \n// it is compulsory method. \n\ntoast.configure(); // context\n\nconst AdminContext = createContext(); // provider\n\nclass AdminProvider extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      url: \"http://excodeteam.com/crs/api/v1\",\n      dashboard: {},\n      jobs: [],\n      singleJob: \"\",\n      jobStatus: \"\",\n      employers: [],\n      employerActive: \"\",\n      singleEmployer: {},\n      employees: [],\n      proposals: [],\n      categories: [],\n      subCategories: [],\n      EmployeeProfile: {\n        info: {},\n        proposals: {}\n      },\n      EmployerProfile: {\n        info: {},\n        jobs: {}\n      },\n      loading: false\n    };\n\n    this.authHeader = () => {\n      const user = JSON.parse(localStorage.getItem('user'));\n\n      if (user && user.token) {\n        return {\n          Authorization: `Bearer ${user.token}`\n        };\n      } else {\n        // redirect to login page\n        return {};\n      }\n    };\n\n    this.userLogout = () => {\n      localStorage.removeItem(\"user\");\n      window.open('/login', '_self');\n    };\n\n    this.getDashboard = async () => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/home`,\n        headers: this.authHeader()\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const dashboard = data;\n        this.setState({\n          dashboard\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getJobs = async status => {\n      this.setState({\n        loading: true\n      });\n\n      if (status === \"0\") {\n        status = JSON.stringify(status);\n      }\n\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/all_jobs`,\n        headers: this.authHeader(),\n        data: {\n          status\n        }\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const jobs = data;\n        this.setState({\n          jobs\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getSingleJob = async job_id => {\n      this.setState({\n        loading: true,\n        jobStatus: \"\"\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/get_job`,\n        headers: this.authHeader(),\n        data: {\n          job_id\n        }\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const singleJob = data;\n        this.setState({\n          singleJob\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.completeJob = async id => {\n      console.log(\"Complete Job\", id);\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/complete_job`,\n        headers: this.authHeader(),\n        data: {\n          \"job_id\": id\n        }\n      }).then(res => {\n        const {\n          data,\n          job_status\n        } = res.data;\n        this.setState({\n          jobStatus: job_status\n        });\n        toast.success('Success Complete Job', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.deleteJob = async (id, status) => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employer/delete_job`,\n        headers: this.authHeader(),\n        data: {\n          \"job_id\": id\n        }\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const {\n          message\n        } = data;\n        toast.success('Success Delete Job', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n      }, error => {\n        console.log(error);\n      }), this.getJobs(status);\n    };\n\n    this.getEmployers = async () => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/get_employers`,\n        headers: this.authHeader()\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const employers = data;\n        this.setState({\n          employers\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.activateEmployer = async id => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/activate_user`,\n        headers: this.authHeader(),\n        data: {\n          \"user_id\": id\n        }\n      }).then(res => {\n        const {\n          data,\n          active\n        } = res.data;\n        this.setState({\n          employers: data,\n          employerActive: active\n        });\n        toast.success('Success Activate Employer', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.deactivateEmployer = async id => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/deactivate_user`,\n        headers: this.authHeader(),\n        data: {\n          \"user_id\": id\n        }\n      }).then(res => {\n        const {\n          data,\n          active\n        } = res.data;\n        this.setState({\n          employers: data,\n          employerActive: active\n        });\n        toast.success('Success Deactivate_user Employer', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.getEmployerJobs = async employer_id => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/get_employers`,\n        headers: this.authHeader(),\n        data: {\n          employer_id\n        }\n      }).then(res => {\n        const {\n          data,\n          jobs\n        } = res.data;\n        const employerInfo = data;\n        this.setState({\n          singleEmployer: {\n            employerInfo,\n            jobs\n          }\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getEmployees = async () => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/get_employees`,\n        headers: this.authHeader()\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const employees = data;\n        this.setState({\n          employees\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getProposalsJob = async () => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/proposals`,\n        headers: this.authHeader()\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const proposals = data;\n        this.setState({\n          proposals\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getEmployeeProfile = async id => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/get_employees`,\n        headers: this.authHeader(),\n        data: {\n          \"employee_id\": id\n        }\n      }).then(res => {\n        const {\n          data,\n          prposals\n        } = res.data;\n        this.setState({\n          EmployeeProfile: {\n            info: data,\n            proposals: prposals\n          }\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getEmployerProfile = async id => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/get_employers`,\n        headers: this.authHeader(),\n        data: {\n          \"employer_id\": id\n        }\n      }).then(res => {\n        const {\n          data,\n          jobs\n        } = res.data;\n        this.setState({\n          EmployerProfile: {\n            info: data,\n            jobs\n          }\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getCategories = async () => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/categories`,\n        headers: this.authHeader()\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const categories = data;\n        this.setState({\n          categories\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.addCategory = async _ref => {\n      let {\n        name,\n        parent,\n        image\n      } = _ref;\n      const fd = new FormData();\n      fd.append(\"name\", name);\n      fd.append(\"parent\", parent);\n      fd.append(\"image\", image);\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/add_category`,\n        headers: this.authHeader(),\n        data: fd\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const categories = data;\n        this.setState({\n          categories\n        });\n        toast.success('Success Add Category', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.updateCategory = async _ref2 => {\n      let {\n        id,\n        name,\n        parent,\n        image\n      } = _ref2;\n      const fd = new FormData();\n      fd.append(\"category_id\", id);\n      fd.append(\"name\", name);\n      fd.append(\"parent\", parent);\n      fd.append(\"image\", image);\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/update_category`,\n        headers: this.authHeader(),\n        data: fd\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const categories = data;\n        this.setState({\n          categories\n        });\n        toast.success('Success Add Category', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.deleteCategory = async id => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/delete_category`,\n        headers: this.authHeader(),\n        data: {\n          \"category_id\": id\n        }\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const categories = data;\n        this.setState({\n          categories\n        });\n        toast.success('Success Delete Category', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.getSubCategories = async id => {\n      if (this.state.categories.length === 0) {\n        await this.getCategories();\n      }\n\n      ;\n      const subCategories = this.state.categories.find(cntry => cntry.id == id).sub_category;\n      this.setState({\n        subCategories\n      });\n    };\n\n    this.setSuccessStory = async (id, successStory, storyImage) => {\n      const fd = new FormData();\n      fd.append(\"user_id\", id);\n      fd.append(\"success_story\", successStory);\n      fd.append(\"story_image\", storyImage);\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/update_story`,\n        headers: this.authHeader(),\n        data: fd\n      }).then(res => {\n        toast.success('Success Save Story', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AdminContext.Provider, {\n      value: { ...this.state,\n        userLogout: this.userLogout,\n        getDashboard: this.getDashboard,\n        getJobs: this.getJobs,\n        deleteJob: this.deleteJob,\n        getSingleJob: this.getSingleJob,\n        getProposalsJob: this.getProposalsJob,\n        getEmployers: this.getEmployers,\n        getEmployerJobs: this.getEmployerJobs,\n        activateEmployer: this.activateEmployer,\n        deactivateEmployer: this.deactivateEmployer,\n        getEmployerProfile: this.getEmployerProfile,\n        getEmployees: this.getEmployees,\n        getEmployeeProfile: this.getEmployeeProfile,\n        completeJob: this.completeJob,\n        getCategories: this.getCategories,\n        getSubCategories: this.getSubCategories,\n        addCategory: this.addCategory,\n        updateCategory: this.updateCategory,\n        deleteCategory: this.deleteCategory,\n        setSuccessStory: this.setSuccessStory\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n} // consumer\n\n\nconst AdminConsumer = AdminContext.Consumer;\nexport { AdminConsumer, AdminContext };\nexport default AdminProvider;","map":{"version":3,"sources":["E:/CSR-master/src/admin/context/admin.js"],"names":["React","Component","createContext","axios","history","toast","configure","AdminContext","AdminProvider","state","url","dashboard","jobs","singleJob","jobStatus","employers","employerActive","singleEmployer","employees","proposals","categories","subCategories","EmployeeProfile","info","EmployerProfile","loading","authHeader","user","JSON","parse","localStorage","getItem","token","Authorization","userLogout","removeItem","window","open","getDashboard","setState","method","headers","then","res","data","console","log","error","getJobs","status","stringify","getSingleJob","job_id","completeJob","id","job_status","success","autoClose","position","POSITION","TOP_CENTER","deleteJob","message","getEmployers","activateEmployer","active","deactivateEmployer","getEmployerJobs","employer_id","employerInfo","getEmployees","getProposalsJob","getEmployeeProfile","prposals","getEmployerProfile","getCategories","addCategory","name","parent","image","fd","FormData","append","updateCategory","deleteCategory","getSubCategories","length","find","cntry","sub_category","setSuccessStory","successStory","storyImage","render","props","children","AdminConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component, createContext } from 'react';\nimport axios from \"axios\";\nimport history from \"../../history\";\n// Importing toastify module \nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// toast-configuration method,  \n// it is compulsory method. \ntoast.configure();\n\n// context\nconst AdminContext = createContext();\n\n// provider\nclass AdminProvider extends Component {\n    state = {\n        url: \"http://excodeteam.com/crs/api/v1\",\n        dashboard: {},\n        jobs: [],\n        singleJob: \"\",\n        jobStatus: \"\",\n        employers: [],\n        employerActive: \"\",\n        singleEmployer: {},\n        employees: [],\n        proposals: [],\n        categories: [],\n        subCategories: [],\n        EmployeeProfile: {\n            info: {},\n            proposals: {}\n        },\n        EmployerProfile: {\n            info: {},\n            jobs: {}\n        },\n        loading: false,\n    }\n\n    authHeader = () => {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (user && user.token) {\n            return { Authorization: `Bearer ${user.token}` };\n        } else {\n            // redirect to login page\n            return {};\n        }\n    }\n\n    userLogout = () => {\n        localStorage.removeItem(\"user\");\n        window.open('/login', '_self');\n    };\n\n    getDashboard = async () => {\n        this.setState({ loading: true });\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/home`,\n            headers: this.authHeader(),\n        }).then(\n            res => {\n                const { data } = res.data;\n                const dashboard = data;\n                this.setState({ dashboard })\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({ loading: false });\n    }\n\n\n    getJobs = async (status) => {\n        this.setState({ loading: true });\n        if (status === \"0\") {\n            status = JSON.stringify(status);\n        }\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/all_jobs`,\n            headers: this.authHeader(),\n            data: { status },\n        }).then(\n            res => {\n                const { data } = res.data;\n                const jobs = data;\n                this.setState({ jobs })\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({ loading: false });\n    }\n\n    getSingleJob = async (job_id) => {\n        this.setState({ loading: true, jobStatus: \"\" });\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/get_job`,\n            headers: this.authHeader(),\n            data: { job_id },\n        }).then(\n            res => {\n                const { data } = res.data;\n                const singleJob = data;\n                this.setState({ singleJob })\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({ loading: false });\n    }\n\n    completeJob = async (id) => {\n        console.log(\"Complete Job\", id);\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/complete_job`,\n            headers: this.authHeader(),\n            data: { \"job_id\": id },\n        }).then(\n            res => {\n                const { data, job_status } = res.data;\n                this.setState({ jobStatus: job_status });\n                toast.success('Success Complete Job', { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    deleteJob = async (id, status) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employer/delete_job`,\n            headers: this.authHeader(),\n            data: { \"job_id\": id },\n        }).then(\n            res => {\n                const { data } = res.data;\n                const { message } = data;\n                toast.success('Success Delete Job', { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n            },\n            error => {\n                console.log(error);\n            }\n        ), this.getJobs(status);\n    }\n\n    getEmployers = async () => {\n        this.setState({ loading: true });\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/get_employers`,\n            headers: this.authHeader(),\n        }).then(\n            res => {\n                const { data } = res.data;\n                const employers = data;\n                this.setState({ employers })\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({ loading: false });\n    }\n\n    activateEmployer = async (id) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/activate_user`,\n            headers: this.authHeader(),\n            data: { \"user_id\": id },\n        }).then(\n            res => {\n                const { data, active } = res.data;\n                this.setState({\n                    employers: data,\n                    employerActive: active\n                });\n                toast.success('Success Activate Employer', { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    deactivateEmployer = async (id) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/deactivate_user`,\n            headers: this.authHeader(),\n            data: { \"user_id\": id },\n        }).then(\n            res => {\n                const { data, active } = res.data;\n                this.setState({\n                    employers: data,\n                    employerActive: active\n                });\n                toast.success('Success Deactivate_user Employer', { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    getEmployerJobs = async (employer_id) => {\n        this.setState({ loading: true });\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/get_employers`,\n            headers: this.authHeader(),\n            data: { employer_id },\n        }).then(\n            res => {\n                const { data, jobs } = res.data;\n                const employerInfo = data;\n                this.setState({\n                    singleEmployer: {\n                        employerInfo,\n                        jobs\n                    }\n                })\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({ loading: false });\n    }\n\n\n    getEmployees = async () => {\n        this.setState({ loading: true });\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/get_employees`,\n            headers: this.authHeader(),\n        }).then(\n            res => {\n                const { data } = res.data;\n                const employees = data;\n                this.setState({ employees })\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({ loading: false });\n    }\n\n    getProposalsJob = async () => {\n        this.setState({ loading: true });\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/proposals`,\n            headers: this.authHeader(),\n        }).then(\n            res => {\n                const { data } = res.data;\n                const proposals = data;\n                this.setState({ proposals })\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({ loading: false });\n    }\n\n    getEmployeeProfile = async (id) => {\n        this.setState({ loading: true });\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/get_employees`,\n            headers: this.authHeader(),\n            data: { \"employee_id\": id }\n        }).then(\n            res => {\n                const { data, prposals } = res.data;\n                this.setState({\n                    EmployeeProfile: {\n                        info: data,\n                        proposals: prposals\n                    }\n                })\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({ loading: false });\n    }\n\n    getEmployerProfile = async (id) => {\n        this.setState({ loading: true });\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/get_employers`,\n            headers: this.authHeader(),\n            data: { \"employer_id\": id }\n        }).then(\n            res => {\n                const { data, jobs } = res.data;\n                this.setState({\n                    EmployerProfile: {\n                        info: data,\n                        jobs\n                    }\n                })\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({ loading: false });\n    }\n\n    // categories\n\n    getCategories = async () => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/categories`,\n            headers: this.authHeader(),\n        }).then(\n            res => {\n                const { data } = res.data;\n                const categories = data;\n                this.setState({ categories });\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    addCategory = async ({ name, parent, image }) => {\n        const fd = new FormData();\n        fd.append(\"name\", name);\n        fd.append(\"parent\", parent);\n        fd.append(\"image\", image);\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/add_category`,\n            headers: this.authHeader(),\n            data: fd,\n        }).then(\n            res => {\n                const { data } = res.data;\n                const categories = data;\n                this.setState({ categories });\n                toast.success('Success Add Category', { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    updateCategory = async ({ id, name, parent, image }) => {\n        const fd = new FormData();\n        fd.append(\"category_id\", id);\n        fd.append(\"name\", name);\n        fd.append(\"parent\", parent);\n        fd.append(\"image\", image);\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/update_category`,\n            headers: this.authHeader(),\n            data: fd,\n        }).then(\n            res => {\n                const { data } = res.data;\n                const categories = data;\n                this.setState({ categories });\n                toast.success('Success Add Category', { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    deleteCategory = async (id) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/delete_category`,\n            headers: this.authHeader(),\n            data: { \"category_id\": id },\n        }).then(\n            res => {\n                const { data } = res.data;\n                const categories = data;\n                this.setState({ categories });\n                toast.success('Success Delete Category', { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    getSubCategories = async (id) => {\n        if (this.state.categories.length === 0) {\n            await this.getCategories();\n        };\n        const subCategories = this.state.categories.find(cntry => cntry.id == id).sub_category;\n        this.setState({ subCategories })\n    }\n\n    setSuccessStory = async (id, successStory, storyImage) => {\n        const fd = new FormData();\n        fd.append(\"user_id\", id);\n        fd.append(\"success_story\", successStory);\n        fd.append(\"story_image\", storyImage);\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/update_story`,\n            headers: this.authHeader(),\n            data: fd,\n        }).then(\n            res => {\n                toast.success('Success Save Story', { autoClose: 2000, position: toast.POSITION.TOP_CENTER })\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    render() {\n        return (\n            <AdminContext.Provider value={{\n                ...this.state,\n                userLogout: this.userLogout,\n                getDashboard: this.getDashboard,\n\n                getJobs: this.getJobs,\n                deleteJob: this.deleteJob,\n                getSingleJob: this.getSingleJob,\n                getProposalsJob: this.getProposalsJob,\n                getEmployers: this.getEmployers,\n\n                getEmployerJobs: this.getEmployerJobs,\n                activateEmployer: this.activateEmployer,\n                deactivateEmployer: this.deactivateEmployer,\n                getEmployerProfile: this.getEmployerProfile,\n\n                getEmployees: this.getEmployees,\n                getEmployeeProfile: this.getEmployeeProfile,\n\n                completeJob: this.completeJob,\n\n                getCategories: this.getCategories,\n                getSubCategories: this.getSubCategories,\n                addCategory: this.addCategory,\n                updateCategory: this.updateCategory,\n                deleteCategory: this.deleteCategory,\n\n                setSuccessStory: this.setSuccessStory,\n            }}>\n                {this.props.children}\n            </AdminContext.Provider>\n        )\n    }\n}\n\n// consumer\nconst AdminConsumer = AdminContext.Consumer;\n\nexport { AdminConsumer, AdminContext };\nexport default AdminProvider;\n"]},"metadata":{},"sourceType":"module"}