{"ast":null,"code":"var _jsxFileName = \"E:\\\\CSR-master\\\\src\\\\client\\\\components\\\\employer\\\\jobs\\\\addjob\\\\index.jsx\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport StickyBox from \"react-sticky-box\";\nimport DoctorSidebar from '../../sidebar';\nimport { Formik, Form, Field, ErrorMessage, FieldArray } from 'formik';\nimport * as Yup from 'yup';\nimport DateView from \"react-datepicker\"; // react CKEditor text editor\n\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport moment from \"moment\"; // context\n\nimport { EmployerContext } from \"../../../../context/employer\";\nimport ActionLoading from \"../../../loading/actionloading\";\n\nfunction AddJob() {\n  const history = useHistory(); // context values\n\n  const {\n    getCategoriesListToken,\n    categoriesListToken,\n    addJob,\n    loading\n  } = useContext(EmployerContext);\n  const [subCategories, setSubCategories] = useState([]); // const [details, setDetails] = useState(\"\");\n\n  useEffect(() => {\n    getCategoriesListToken();\n  }, []);\n\n  const changeCtegory = event => {\n    const subCategories = categoriesListToken.find(cntry => cntry.id == event.target.value).sub_category;\n    setSubCategories(subCategories);\n  };\n\n  const initialValues = () => {\n    return {\n      title: '',\n      category: '',\n      subCategory: \"\",\n      details: '',\n      offer: '',\n      requirements: [''],\n      responsibilities: [''],\n      finishAt: new Date(),\n      image: null\n    };\n  };\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Required\"),\n    category: Yup.string().required(\"Required\"),\n    details: Yup.string().required(\"Required\"),\n    offer: Yup.string().required(\"Required\")\n  });\n\n  const handleSubmit = async values => {\n    let {\n      requirements,\n      responsibilities,\n      finishAt\n    } = values;\n    requirements = JSON.stringify(requirements);\n    responsibilities = JSON.stringify(responsibilities);\n    finishAt = moment(finishAt).format(\"YYYY-MM-DD\");\n    await addJob({ ...values,\n      requirements,\n      responsibilities,\n      finishAt\n    });\n    history.push(\"/employer/jobs\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"breadcrumb-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    className: \"page-breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 51\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/doctor/appointments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 51\n    }\n  }, \"Jobs\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"breadcrumb-item active\",\n    \"aria-current\": \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, \"Add Job\"))), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"breadcrumb-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"Add Job\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-5 col-lg-4 col-xl-3 theiaStickySidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appointments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StickyBox, {\n    offsetTop: 50,\n    offsetBottom: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DoctorSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-7 col-lg-8 col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appointments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues(),\n    validationSchema: validationSchema,\n    onSubmit: handleSubmit,\n    validateOnChange: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, formik => {\n    const {\n      setFieldValue,\n      handleChange,\n      isSubmitting\n    } = formik;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 27\n      }\n    }, \"Job Title \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 60\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, \"Category \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 64\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Field, {\n      as: \"select\",\n      name: \"category\",\n      id: \"category\",\n      className: \"form-control\",\n      onChange: e => {\n        changeCtegory(e);\n        handleChange(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 31\n      }\n    }, \"Select Category\"), categoriesListToken.map(category => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: category.id,\n        value: category.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 37\n        }\n      }, category.name);\n    })), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"subCategory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, \"Sub Category\"), /*#__PURE__*/React.createElement(Field, {\n      as: \"select\",\n      name: \"subCategory\",\n      id: \"subCategory\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 31\n      }\n    }, \"Select Sub Category\"), subCategories.map(subCategory => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: subCategory.id,\n        value: subCategory.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 37\n        }\n      }, subCategory.name);\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 27\n      }\n    }, \"Details \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 60\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Field, {\n      as: \"textarea\",\n      id: \"details\",\n      name: \"details\",\n      className: \"form-control\",\n      rows: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"offer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 27\n      }\n    }, \"Job Offer \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 60\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      id: \"offer\",\n      name: \"offer\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"offer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 27\n      }\n    }, \"Requirements\"), /*#__PURE__*/React.createElement(FieldArray, {\n      name: \"requirements\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 27\n      }\n    }, fieldArrayProps => {\n      const {\n        push,\n        remove,\n        form: {\n          values\n        }\n      } = fieldArrayProps;\n      const {\n        requirements\n      } = values;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 40\n        }\n      }, requirements.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        type: \"text\",\n        name: `requirements[${index}]`,\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 43\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 43\n        }\n      }, index > 0 && /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn bg-danger-light\",\n        onClick: () => remove(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 47\n        }\n      }, \" - \"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn bg-info-light\",\n        onClick: () => push(''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 45\n        }\n      }, \" + \"))))));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 27\n      }\n    }, \"Responsibilities\"), /*#__PURE__*/React.createElement(FieldArray, {\n      name: \"responsibilities\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 27\n      }\n    }, fieldArrayProps => {\n      const {\n        push,\n        remove,\n        form: {\n          values\n        }\n      } = fieldArrayProps;\n      const {\n        responsibilities\n      } = values;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 40\n        }\n      }, responsibilities.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        type: \"text\",\n        name: `responsibilities[${index}]`,\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 43\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 43\n        }\n      }, index > 0 && /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn bg-danger-light\",\n        onClick: () => remove(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 47\n        }\n      }, \" - \"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn bg-info-light\",\n        onClick: () => push(''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 45\n        }\n      }, \" + \"))))));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 27\n      }\n    }, \"Finish At\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"finishAt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 27\n      }\n    }, _ref => {\n      let {\n        form,\n        field\n      } = _ref;\n      const {\n        setFieldValue\n      } = form;\n      const {\n        value\n      } = field;\n      return /*#__PURE__*/React.createElement(DateView, Object.assign({}, field, {\n        className: \"form-control datetimepicker\",\n        minDate: new Date(),\n        selected: value,\n        dateFormat: \"yyyy-MM-dd\",\n        showYearDropdown: true,\n        onChange: val => setFieldValue(\"finishAt\", val),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 40\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 27\n      }\n    }, \"Image File\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"file\",\n      name: \"file\",\n      id: \"image\",\n      className: \"form-control\",\n      onChange: event => {\n        setFieldValue(\"image\", event.currentTarget.files[0]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submit-section mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary submit-btn\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 29\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(ActionLoading, {\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    }))));\n  })))))));\n}\n\nexport default AddJob;","map":{"version":3,"sources":["E:/CSR-master/src/client/components/employer/jobs/addjob/index.jsx"],"names":["React","useContext","useState","useEffect","Link","useHistory","StickyBox","DoctorSidebar","Formik","Form","Field","ErrorMessage","FieldArray","Yup","DateView","CKEditor","ClassicEditor","moment","EmployerContext","ActionLoading","AddJob","history","getCategoriesListToken","categoriesListToken","addJob","loading","subCategories","setSubCategories","changeCtegory","event","find","cntry","id","target","value","sub_category","initialValues","title","category","subCategory","details","offer","requirements","responsibilities","finishAt","Date","image","validationSchema","object","shape","string","required","handleSubmit","values","JSON","stringify","format","push","formik","setFieldValue","handleChange","isSubmitting","e","map","name","fieldArrayProps","remove","form","item","index","field","val","currentTarget","files"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport StickyBox from \"react-sticky-box\";\nimport DoctorSidebar from '../../sidebar';\nimport { Formik, Form, Field, ErrorMessage, FieldArray } from 'formik';\nimport * as Yup from 'yup';\nimport DateView from \"react-datepicker\";\n// react CKEditor text editor\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport moment from \"moment\";\n// context\nimport { EmployerContext } from \"../../../../context/employer\";\nimport ActionLoading from \"../../../loading/actionloading\";\n\nfunction AddJob() {\n\n  const history = useHistory();\n  // context values\n  const { getCategoriesListToken, categoriesListToken, addJob, loading } = useContext(EmployerContext);\n  const [subCategories, setSubCategories] = useState([]);\n  // const [details, setDetails] = useState(\"\");\n\n  useEffect(() => {\n    getCategoriesListToken();\n  }, [])\n\n  const changeCtegory = (event) => {\n    const subCategories = categoriesListToken.find(cntry => cntry.id == event.target.value).sub_category;\n    setSubCategories(subCategories);\n  }\n\n  const initialValues = () => {\n    return {\n      title: '',\n      category: '',\n      subCategory: \"\",\n      details: '',\n      offer: '',\n      requirements: [''],\n      responsibilities: [''],\n      finishAt: new Date(),\n      image: null,\n    }\n  }\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Required\"),\n    category: Yup.string().required(\"Required\"),\n    details: Yup.string().required(\"Required\"),\n    offer: Yup.string().required(\"Required\"),\n  });\n\n  const handleSubmit = async values => {\n    let { requirements, responsibilities, finishAt } = values;\n    requirements = JSON.stringify(requirements);\n    responsibilities = JSON.stringify(responsibilities);\n    finishAt = moment(finishAt).format(\"YYYY-MM-DD\");\n    await addJob({ ...values, requirements, responsibilities, finishAt });\n    history.push(\"/employer/jobs\");\n  }\n\n  return (\n    <div>\n\n      <div className=\"breadcrumb-bar\">\n        <div className=\"container-fluid\">\n          <div className=\"row align-items-center\">\n            <div className=\"col-md-12 col-12\">\n              <nav aria-label=\"breadcrumb\" className=\"page-breadcrumb\">\n                <ol className=\"breadcrumb\">\n                  <li className=\"breadcrumb-item\"><Link to=\"/home\">Home</Link></li>\n                  <li className=\"breadcrumb-item\"><Link to=\"/doctor/appointments\">Jobs</Link></li>\n                  <li className=\"breadcrumb-item active\" aria-current=\"page\">Add Job</li>\n                </ol>\n              </nav>\n              <h2 className=\"breadcrumb-title\">Add Job</h2>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        <div className=\"container-fluid\">\n\n          <div className=\"row\">\n\n            <div className=\"col-md-5 col-lg-4 col-xl-3 theiaStickySidebar\">\n              <div className=\"appointments\">\n                <StickyBox offsetTop={50} offsetBottom={20}>\n                  <DoctorSidebar />\n                </StickyBox>\n              </div>\n            </div>\n\n            <div className=\"col-md-7 col-lg-8 col-xl-9\">\n              <div className=\"appointments\">\n\n                <Formik\n                  initialValues={initialValues()}\n                  validationSchema={validationSchema}\n                  onSubmit={handleSubmit}\n                  validateOnChange={false}\n                >\n                  {(formik) => {\n                    const { setFieldValue, handleChange, isSubmitting } = formik;\n                    return (\n                      <Form>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"title\">Job Title <span className=\"text-danger\">*</span></label>\n                          <Field type=\"text\" id=\"title\" name=\"title\" className=\"form-control\" />\n                          <ErrorMessage name=\"title\" />\n                        </div>\n                        <div className=\"form-row\">\n                          <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"category\">Category <span className=\"text-danger\">*</span></label>\n                            <Field as=\"select\" name=\"category\" id=\"category\" className=\"form-control\"\n                              onChange={(e) => { changeCtegory(e); handleChange(e) }}\n                            >\n                              <option value=\"\" disabled>Select Category</option>\n                              {\n                                categoriesListToken.map((category) => {\n                                  return (\n                                    <option key={category.id} value={category.id}>\n                                      {category.name}\n                                    </option>\n                                  );\n                                })\n                              }\n                            </Field>\n                            <ErrorMessage name=\"category\" />\n                          </div>\n                          <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"subCategory\">Sub Category</label>\n                            <Field as=\"select\" name=\"subCategory\" id=\"subCategory\" className=\"form-control\">\n                              <option value=\"\" disabled>Select Sub Category</option>\n                              {\n                                subCategories.map(subCategory => {\n                                  return (\n                                    <option key={subCategory.id} value={subCategory.id}>\n                                      {subCategory.name}\n                                    </option>\n                                  );\n                                })\n                              }\n                            </Field>\n                          </div>\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"details\">Details <span className=\"text-danger\">*</span></label>\n                          <Field as=\"textarea\" id=\"details\" name=\"details\" className=\"form-control\" rows=\"7\" />\n                          <ErrorMessage name=\"details\" />\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"offer\">Job Offer <span className=\"text-danger\">*</span></label>\n                          <Field type=\"text\" id=\"offer\" name=\"offer\" className=\"form-control\" />\n                          <ErrorMessage name=\"offer\" />\n                        </div>\n                        <div className=\"form-group\">\n                          <label>Requirements</label>\n                          <FieldArray name=\"requirements\">\n                            {\n                              (fieldArrayProps) => {\n                                const { push, remove, form: { values } } = fieldArrayProps;\n                                const { requirements } = values;\n                                return <div>\n                                  {\n                                    requirements.map((item, index) => (\n                                      <div key={index}>\n                                        <div className=\"input-group mb-1\">\n                                          <Field type=\"text\" name={`requirements[${index}]`} className=\"form-control\" />\n                                          <div className=\"input-group-append\">\n                                            {index > 0 &&\n                                              <button type=\"button\" className=\"btn bg-danger-light\" onClick={() => remove(index)}> - </button>\n                                            }\n                                            <button type=\"button\" className=\"btn bg-info-light\" onClick={() => push('')}> + </button>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    ))\n                                  }\n                                </div>\n                              }\n                            }\n                          </FieldArray>\n                        </div>\n                        <div className=\"form-group\">\n                          <label>Responsibilities</label>\n                          <FieldArray name=\"responsibilities\">\n                            {\n                              (fieldArrayProps) => {\n                                const { push, remove, form: { values } } = fieldArrayProps;\n                                const { responsibilities } = values;\n                                return <div>\n                                  {\n                                    responsibilities.map((item, index) => (\n                                      <div key={index}>\n                                        <div className=\"input-group mb-1\">\n                                          <Field type=\"text\" name={`responsibilities[${index}]`} className=\"form-control\" />\n                                          <div className=\"input-group-append\">\n                                            {index > 0 &&\n                                              <button type=\"button\" className=\"btn bg-danger-light\" onClick={() => remove(index)}> - </button>\n                                            }\n                                            <button type=\"button\" className=\"btn bg-info-light\" onClick={() => push('')}> + </button>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    ))\n                                  }\n                                </div>\n                              }\n                            }\n                          </FieldArray>\n                        </div>\n                        <div className=\"form-group\">\n                          <label>Finish At</label>\n                          <Field name=\"finishAt\">\n                            {\n                              ({ form, field }) => {\n                                const { setFieldValue } = form;\n                                const { value } = field;\n                                return <DateView\n                                  {...field}\n                                  className=\"form-control datetimepicker\"\n                                  minDate={new Date()}\n                                  selected={value}\n                                  dateFormat=\"yyyy-MM-dd\"\n                                  showYearDropdown\n                                  onChange={(val) => setFieldValue(\"finishAt\", val)}\n                                />\n                              }\n                            }\n                          </Field>\n                        </div>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"image\">Image File</label>\n                          <Field type=\"file\" name=\"file\" id=\"image\" className=\"form-control\" onChange={(event) => {\n                            setFieldValue(\"image\", event.currentTarget.files[0]);\n                          }}\n                          />\n                        </div>\n                        <div className=\"submit-section mb-5\">\n                          <button type=\"submit\" className=\"btn btn-primary submit-btn\" disabled={isSubmitting}>\n                            <span>Add</span>\n                            <ActionLoading loading={loading} />\n                          </button>\n                        </div>\n                      </Form>\n                    )\n                  }}\n                </Formik>\n\n              </div>\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default AddJob;\n"]},"metadata":{},"sourceType":"module"}