{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\CSR-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"E:\\\\CSR-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"E:\\\\CSR-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\CSR-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\CSR-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\CSR-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import loginBanner from'../../assets/images/login-banner.png';import{Link}from'react-router-dom';import{Formik,Form,Field,ErrorMessage}from'formik';import*as yup from'yup';import ActionLoading from\"../loading/actionloading\";import{UserContext}from\"../../context/user\";var LoginContainer=/*#__PURE__*/function(_Component){_inherits(LoginContainer,_Component);var _super=_createSuper(LoginContainer);function LoginContainer(){var _this;_classCallCheck(this,LoginContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={url:\"http://excodeteam.com/crs/api/v1/user/login\",error:false};_this.initialValues=function(){return{email:\"\",password:\"\"};};_this.schema=function(){var schema=yup.object().shape({email:yup.string().email(\"Invalid email format\").required(\"Required\"),password:yup.string().required(\"Required\")});return schema;};_this.handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var userLogin;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:userLogin=_this.context.userLogin;_context.next=3;return userLogin(values);case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.form=function(props){var isSubmitting=props.isSubmitting;return/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(\"div\",{className:\"form-group form-focus\"},/*#__PURE__*/React.createElement(Field,{name:\"email\",type:\"email\",className:\"form-control floating\",placeholder:\"Email\"}),/*#__PURE__*/React.createElement(ErrorMessage,{name:\"email\",component:\"div\",className:\"text-danger text-xs\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group form-focus\"},/*#__PURE__*/React.createElement(Field,{name:\"password\",type:\"password\",className:\"form-control floating\",placeholder:\"Password\"}),/*#__PURE__*/React.createElement(ErrorMessage,{name:\"password\",component:\"div\",className:\"text-danger text-xs\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"text-right\"},_this.state.error&&/*#__PURE__*/React.createElement(\"div\",{className:\"dont-have mt-0 mb-2\"},\"You is not member. please \",/*#__PURE__*/React.createElement(Link,{to:\"/register\"},\"Register\"),\" or confirm your data\"),/*#__PURE__*/React.createElement(Link,{to:\"/forgot-password\",className:\"forgot-link\"},\"Forgot Password ?\")),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary btn-block btn-lg login-btn\",type:\"submit\",disabled:isSubmitting},/*#__PURE__*/React.createElement(\"span\",null,\"Login\"),/*#__PURE__*/React.createElement(ActionLoading,{loading:_this.context.loading})),/*#__PURE__*/React.createElement(\"div\",{className:\"text-center dont-have\"},\"Don\\u2019t have an account ? \",/*#__PURE__*/React.createElement(Link,{to:\"/register\"},\"Register\")));};return _this;}_createClass(LoginContainer,[{key:\"componentDidMount\",value:function componentDidMount(){document.body.classList.add('account-page');}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){document.body.classList.remove('account-page');}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container-fluid\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-10 offset-md-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"account-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row align-items-center justify-content-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-7 col-lg-6 login-left text-center\"},/*#__PURE__*/React.createElement(\"img\",{src:loginBanner,className:\"img-fluid\",alt:\"Doccure Login\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-12 col-lg-6 login-right\"},/*#__PURE__*/React.createElement(\"div\",{className:\"login-header\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Login\")),/*#__PURE__*/React.createElement(Formik,{initialValues:this.initialValues(),validationSchema:this.schema,onSubmit:this.handleSubmit},this.form))))))));}}]);return LoginContainer;}(Component);LoginContainer.contextType=UserContext;export default LoginContainer;","map":{"version":3,"sources":["E:/CSR-master/src/client/components/login/login.jsx"],"names":["React","Component","loginBanner","Link","Formik","Form","Field","ErrorMessage","yup","ActionLoading","UserContext","LoginContainer","state","url","error","initialValues","email","password","schema","object","shape","string","required","handleSubmit","values","userLogin","context","form","props","isSubmitting","loading","document","body","classList","add","remove","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport loginBanner from '../../assets/images/login-banner.png';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport ActionLoading from \"../loading/actionloading\";\nimport { UserContext } from \"../../context/user\";\n\nclass LoginContainer extends Component {\n  state = {\n    url: \"http://excodeteam.com/crs/api/v1/user/login\",\n    error: false,\n  }\n\n  componentDidMount() {\n    document.body.classList.add('account-page');\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('account-page');\n  }\n\n  initialValues = () => {\n    return (\n      {\n        email: \"\",\n        password: \"\",\n      }\n    )\n  }\n\n  schema = () => {\n    const schema = yup.object().shape({\n      email: yup.string().email(\"Invalid email format\").required(\"Required\"),\n      password: yup.string().required(\"Required\"),\n    });\n    return schema;\n  }\n\n  handleSubmit = async (values) => {\n    const { userLogin } = this.context;\n    await userLogin(values);\n  }\n\n  form = (props) => {\n    const { isSubmitting } = props;\n    return (\n      <Form>\n        <div className=\"form-group form-focus\">\n          <Field name=\"email\" type=\"email\" className=\"form-control floating\" placeholder=\"Email\" />\n          <ErrorMessage name=\"email\" component=\"div\" className=\"text-danger text-xs\" />\n        </div>\n        <div className=\"form-group form-focus\">\n          <Field name=\"password\" type=\"password\" className=\"form-control floating\" placeholder=\"Password\" />\n          <ErrorMessage name=\"password\" component=\"div\" className=\"text-danger text-xs\" />\n        </div>\n        <div className=\"text-right\">\n          {this.state.error && <div className=\"dont-have mt-0 mb-2\">You is not member. please <Link to=\"/register\">Register</Link> or confirm your data</div>}\n          <Link to=\"/forgot-password\" className=\"forgot-link\">Forgot Password ?</Link>\n        </div>\n        <button className=\"btn btn-primary btn-block btn-lg login-btn\" type=\"submit\" disabled={isSubmitting}>\n          <span>Login</span>\n          <ActionLoading loading={this.context.loading} />\n        </button>\n        <div className=\"text-center dont-have\">Don’t have an account ? <Link to=\"/register\">Register</Link></div>\n      </Form>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"container-fluid\">\n\n          <div className=\"row\">\n            <div className=\"col-md-10 offset-md-1\">\n\n              <div className=\"account-content\">\n                <div className=\"row align-items-center justify-content-center\">\n                  <div className=\"col-md-7 col-lg-6 login-left text-center\">\n                    <img src={loginBanner} className=\"img-fluid\" alt=\"Doccure Login\" />\n                  </div>\n                  <div className=\"col-md-12 col-lg-6 login-right\">\n                    <div className=\"login-header\">\n                      <h3>Login</h3>\n                    </div>\n                    <Formik\n                      initialValues={this.initialValues()}\n                      validationSchema={this.schema}\n                      onSubmit={this.handleSubmit}\n                    >\n                      {this.form}\n                    </Formik>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginContainer.contextType = UserContext;\nexport default LoginContainer;"]},"metadata":{},"sourceType":"module"}