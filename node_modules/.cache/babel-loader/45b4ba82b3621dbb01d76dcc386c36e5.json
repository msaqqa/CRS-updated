{"ast":null,"code":"var _jsxFileName = \"E:\\\\CSR-master\\\\src\\\\client\\\\components\\\\jobs\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Modal } from 'react-bootstrap'; //images\n\nimport { IMG01 } from './img.jsx'; //components\n\nimport JobSearch from './search';\nimport SubCategories from './subcategories';\nimport RecentJobs from './recentjobs';\nimport JobsCategories from './jobscategories';\nimport TagsWidget from './tagswidget'; // react CKEditor text editor\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic'; // context\n\nimport { JobConsumer, JobContext } from \"../../context/jobs\";\nimport ReactHtmlParser, { convertNodeToElement } from 'react-html-parser';\nimport moment from \"moment\";\nimport PageLoading from \"../loading/pageloading\";\n\nclass JobsList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      show: false,\n      disabled: null,\n      titleText: \"\",\n      coverLetter: \"\",\n      jobTitle: \"\",\n      jobId: \"\",\n      isEmployee: false,\n      isPosted: false\n    };\n\n    this.componentDidMount = () => {\n      const user = JSON.parse(localStorage.getItem('user'));\n\n      if (user && user.type == 1) {\n        this.setState({\n          disabled: true,\n          titleText: \"You should post as an employee only\"\n        });\n      }\n    };\n\n    this.handleSingleJob = async id => {\n      const {\n        getSingleJob\n      } = this.context;\n      await getSingleJob(id);\n      this.props.history.push(`/jobs/single-job/${id}`);\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.checkUserMember = () => {\n      const user = JSON.parse(localStorage.getItem('user'));\n\n      if (user) {\n        this.setState({\n          isEmployee: true\n        });\n      } else {\n        this.setState({\n          isEmployee: false\n        });\n      }\n    };\n\n    this.handleShow = (id, title) => {\n      this.checkUserMember();\n      this.setState({\n        show: true,\n        jobId: id,\n        jobTitle: title\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        jobId,\n        coverLetter\n      } = this.state;\n      const {\n        setProposalJob\n      } = this.context;\n      const isEmpty = !coverLetter;\n\n      if (isEmpty) {\n        return false;\n      } else {\n        await setProposalJob(jobId, coverLetter);\n        this.handleClose();\n      }\n    };\n\n    this.transform = node => {\n      node.name = 'span';\n      return convertNodeToElement(node);\n    };\n  }\n\n  render() {\n    const transform = this.transform;\n    const {\n      categoryName,\n      categoryType\n    } = this.context.categories;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"breadcrumb-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      className: \"page-breadcrumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ol\", {\n      className: \"breadcrumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 53\n      }\n    }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"breadcrumb-item active\",\n      \"aria-current\": \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, \"Jobs\"), categoryName && /*#__PURE__*/React.createElement(\"li\", {\n      className: \"breadcrumb-item active\",\n      \"aria-current\": \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 23\n      }\n    }, categoryName))), categoryName ? /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"breadcrumb-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, categoryName) : /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"breadcrumb-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, \"Jobs\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-8 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(JobConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, value => {\n      const {\n        categories,\n        getSingleJob,\n        loading\n      } = value;\n      const {\n        categoryJobs\n      } = categories;\n\n      if (loading) {\n        return /*#__PURE__*/React.createElement(PageLoading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 30\n          }\n        });\n      }\n\n      return categoryJobs && categoryJobs.length > 0 ? categoryJobs.map((job, index) => {\n        let {\n          image,\n          id,\n          title,\n          details,\n          category,\n          employer: { ...employer\n          },\n          created_at,\n          finish_at\n        } = job;\n        const maxChar = 200;\n\n        if (details && details.length > maxChar) {\n          details = details.substring(0, maxChar) + \". . .\";\n        }\n\n        const categoryObj = category ? { ...category\n        } : {};\n        const finishAt = !finish_at || finish_at === \"0000-00-00 00:00:00\" ? new Date() : new Date(finish_at);\n        const imageUrl = image ? `http://excodeteam.com/crs/public/images/${image}` : IMG01;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          className: \"card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-body\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"booking-doc-info\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"#\",\n          className: \"booking-doc-img\",\n          onClick: () => this.handleSingleJob(id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: imageUrl,\n          alt: \"User\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"booking-info\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          onClick: () => this.handleSingleJob(id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 37\n          }\n        }, title)), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mb-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }\n        }, ReactHtmlParser(details.substring(0, 200), {\n          transform\n        }), /*#__PURE__*/React.createElement(Link, {\n          to: `/jobs/single-job/${id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 35\n          }\n        }, \"more than\")), /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"entry-meta meta-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fab fa-sketch\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 39\n          }\n        }), \" \", categoryObj.name), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fab fa-black-tie\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 39\n          }\n        }), \" By \", employer.name), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fas fa-hourglass-start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 39\n          }\n        }), \" \", moment(created_at).format(\"YYYY-MM-DD\")), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fas fa-hourglass-end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 39\n          }\n        }), \" \", moment(finishAt).format(\"YYYY-MM-DD\")), /*#__PURE__*/React.createElement(\"li\", {\n          title: this.state.titleText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"#\",\n          className: \"text-info\",\n          disabled: this.state.disabled,\n          onClick: () => this.handleShow(id, title),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fas fa-file-signature\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 39\n          }\n        }), \" Post Proposal\")))))));\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"appointment-list text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }\n      }, \"No results for this search\"));\n    }), /*#__PURE__*/React.createElement(Modal, {\n      size: \"lg\",\n      show: this.state.show,\n      onHide: this.handleClose,\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, this.state.jobTitle)), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, this.state.isEmployee ? /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 27\n      }\n    }, \"Cover Letter\"), /*#__PURE__*/React.createElement(CKEditor, {\n      editor: ClassicEditor,\n      onChange: (e, editor) => this.setState({\n        coverLetter: editor.getData()\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary mr-2\",\n      onClick: e => this.handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, \"Send\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: () => this.handleClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }, \"Cancel\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }, \"You must be logged in to make a proposal\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      className: \"btn btn-primary mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: () => this.handleClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, \"Cancel\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4 col-md-12 sidebar-right theiaStickySidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(JobSearch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }), !categoryType && /*#__PURE__*/React.createElement(SubCategories, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(RecentJobs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(JobsCategories, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TagsWidget, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nJobsList.contextType = JobContext;\nexport default JobsList;","map":{"version":3,"sources":["E:/CSR-master/src/client/components/jobs/index.jsx"],"names":["React","Component","Link","Modal","IMG01","JobSearch","SubCategories","RecentJobs","JobsCategories","TagsWidget","CKEditor","ClassicEditor","JobConsumer","JobContext","ReactHtmlParser","convertNodeToElement","moment","PageLoading","JobsList","state","show","disabled","titleText","coverLetter","jobTitle","jobId","isEmployee","isPosted","componentDidMount","user","JSON","parse","localStorage","getItem","type","setState","handleSingleJob","id","getSingleJob","context","props","history","push","handleClose","checkUserMember","handleShow","title","handleSubmit","e","preventDefault","setProposalJob","isEmpty","transform","node","name","render","categoryName","categoryType","categories","value","loading","categoryJobs","length","map","job","index","image","details","category","employer","created_at","finish_at","maxChar","substring","categoryObj","finishAt","Date","imageUrl","format","editor","getData","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Modal } from 'react-bootstrap';\n//images\nimport { IMG01 } from './img.jsx';\n//components\nimport JobSearch from './search';\nimport SubCategories from './subcategories';\nimport RecentJobs from './recentjobs';\nimport JobsCategories from './jobscategories';\nimport TagsWidget from './tagswidget';\n// react CKEditor text editor\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n// context\nimport { JobConsumer, JobContext } from \"../../context/jobs\";\nimport ReactHtmlParser, { convertNodeToElement } from 'react-html-parser';\nimport moment from \"moment\";\nimport PageLoading from \"../loading/pageloading\";\n\nclass JobsList extends Component {\n\n  state = {\n    show: false,\n    disabled: null,\n    titleText: \"\",\n    coverLetter: \"\",\n    jobTitle: \"\",\n    jobId: \"\",\n    isEmployee: false,\n    isPosted: false,\n  }\n\n  componentDidMount = () => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user && user.type == 1) {\n      this.setState({\n        disabled: true,\n        titleText: \"You should post as an employee only\"\n      });\n    }\n  }\n\n  handleSingleJob = async (id) => {\n    const { getSingleJob } = this.context;\n    await getSingleJob(id);\n    this.props.history.push(`/jobs/single-job/${id}`);\n  }\n\n  handleClose = () => {\n    this.setState({\n      show: false\n    });\n  }\n\n  checkUserMember = () => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      this.setState({\n        isEmployee: true,\n      });\n    } else {\n      this.setState({\n        isEmployee: false,\n      });\n    }\n  }\n\n  handleShow = (id, title) => {\n    this.checkUserMember();\n    this.setState({\n      show: true,\n      jobId: id,\n      jobTitle: title\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const { jobId, coverLetter } = this.state;\n    const { setProposalJob } = this.context;\n    const isEmpty = !coverLetter;\n    if (isEmpty) {\n      return false;\n    } else {\n      await setProposalJob(jobId, coverLetter);\n      this.handleClose();\n    }\n  }\n\n  transform = (node) => {\n    node.name = 'span';\n    return convertNodeToElement(node);\n  }\n\n  render() {\n    const transform = this.transform;\n    const { categoryName, categoryType } = this.context.categories;\n\n    return (\n      <div>\n        <div className=\"breadcrumb-bar\">\n          <div className=\"container-fluid\">\n            <div className=\"row align-items-center\">\n              <div className=\"col-md-12 col-12\">\n                <nav aria-label=\"breadcrumb\" className=\"page-breadcrumb\">\n                  <ol className=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\"><Link to=\"/home\">Home</Link></li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">Jobs</li>\n                    {categoryName &&\n                      <li className=\"breadcrumb-item active\" aria-current=\"page\">{categoryName}</li>\n                    }\n                  </ol>\n                </nav>\n                {categoryName ?\n                  <h2 className=\"breadcrumb-title\">{categoryName}</h2> :\n                  <h2 className=\"breadcrumb-title\">Jobs</h2>\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          <div className=\"container\">\n            <div className=\"row\">\n\n              <div className=\"col-lg-8 col-md-12\">\n                <JobConsumer>\n                  {(value) => {\n                    const { categories, getSingleJob, loading } = value;\n                    const { categoryJobs } = categories;\n                    if (loading) {\n                      return <PageLoading />\n                    }\n                    return (categoryJobs && categoryJobs.length > 0) ? (categoryJobs.map((job, index) => {\n                      let { image, id, title, details, category, employer: { ...employer }, created_at, finish_at } = job;\n                      const maxChar = 200;\n                      if (details && (details.length > maxChar)) {\n                        details = details.substring(0, maxChar) + \". . .\"\n                      }\n                      const categoryObj = category ? { ...category } : {};\n                      const finishAt = (!finish_at || finish_at === \"0000-00-00 00:00:00\") ? new Date() : new Date(finish_at);\n                      const imageUrl = image ? `http://excodeteam.com/crs/public/images/${image}` : IMG01;\n                      return (\n                        <div key={index} className=\"card\">\n                          <div className=\"card-body\">\n                            <div className=\"booking-doc-info\">\n                              <Link to=\"#\" className=\"booking-doc-img\" onClick={() => this.handleSingleJob(id)}>\n                                <img src={imageUrl} alt=\"User\" />\n                              </Link>\n                              <div className=\"booking-info\">\n                                <h4><Link onClick={() => this.handleSingleJob(id)}>{title}</Link></h4>\n                                <p className=\"mb-2\">\n                                  {ReactHtmlParser(details.substring(0, 200), { transform })}\n                                  <Link to={`/jobs/single-job/${id}`}>more than</Link>\n                                </p>\n                                <ul className=\"entry-meta meta-item\">\n                                  <li><i className=\"fab fa-sketch\"></i> {categoryObj.name}</li>\n                                  <li><i className=\"fab fa-black-tie\"></i> By {employer.name}</li>\n                                  <li><i className=\"fas fa-hourglass-start\"></i> {moment(created_at).format(\"YYYY-MM-DD\")}</li>\n                                  <li><i className=\"fas fa-hourglass-end\"></i> {moment(finishAt).format(\"YYYY-MM-DD\")}</li>\n                                  <li title={this.state.titleText}>\n                                    <Link to=\"#\" className=\"text-info\" disabled={this.state.disabled} onClick={() => this.handleShow(id, title)}>\n                                      <i className=\"fas fa-file-signature\"></i> Post Proposal\n                                    </Link>\n                                  </li>\n                                </ul>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      )\n                    })) : (\n                      <div className=\"appointment-list text-center\">\n                        <div className=\"alert mb-0\" >\n                          No results for this search\n                        </div>\n                      </div>\n                    )\n                  }}\n                </JobConsumer>\n\n                {/*view modal*/}\n                <Modal size=\"lg\" show={this.state.show} onHide={this.handleClose} centered>\n                  <Modal.Header closeButton>\n                    <Modal.Title>{this.state.jobTitle}</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                    {this.state.isEmployee\n                      ? <form>\n                        <div className=\"form-group\">\n                          <label>Cover Letter</label>\n                          <CKEditor\n                            editor={ClassicEditor}\n                            onChange={(e, editor) => this.setState({ coverLetter: editor.getData() })}\n                          />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary mr-2\" onClick={(e) => this.handleSubmit(e)}>Send</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleClose()}>Cancel</button>\n                      </form>\n                      : <>\n                        <p>You must be logged in to make a proposal</p>\n                        <Link to=\"/login\" className=\"btn btn-primary mr-2\">Login</Link>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleClose()}>Cancel</button>\n                      </>\n                    }\n                  </Modal.Body>\n                </Modal>\n\n              </div>\n\n              <div className=\"col-lg-4 col-md-12 sidebar-right theiaStickySidebar\">\n                <JobSearch />\n                {!categoryType && <SubCategories />}\n                <RecentJobs />\n                <JobsCategories />\n                <TagsWidget />\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nJobsList.contextType = JobContext\nexport default JobsList;"]},"metadata":{},"sourceType":"module"}