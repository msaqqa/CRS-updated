{"ast":null,"code":"var _jsxFileName = \"E:\\\\CSR-master\\\\src\\\\client\\\\components\\\\home\\\\recentjobs\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { IMG01 } from '../img.jsx';\nimport { Link } from 'react-router-dom';\nimport { Modal } from 'react-bootstrap'; // slider\n\nimport Slider from \"react-slick\"; // context\n\nimport { JobConsumer, JobContext } from \"../../../context/jobs\"; // react CKEditor text editor\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic'; // ReactHtmlParser\n\nimport ReactHtmlParser from 'react-html-parser'; // moment\n\nimport moment from \"moment\";\nimport PageLoading from \"../../loading/pageloading\";\n\nclass HomeBookDoctor extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      show: false,\n      disabled: null,\n      titleText: \"\",\n      coverLetter: \"\",\n      jobTitle: \"\",\n      jobId: 0,\n      isEmployee: false,\n      isPosted: false\n    };\n\n    this.componentDidMount = () => {\n      const user = JSON.parse(localStorage.getItem('user'));\n\n      if (user && user.type == 1) {\n        this.setState({\n          disabled: true,\n          titleText: \"You should post as an employee only\"\n        });\n      }\n    };\n\n    this.postedSend = () => {\n      if (this.state.isPosted) {\n        this.setState({\n          disabled: true\n        });\n      }\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleShow = (id, title) => {\n      this.checkUserMember();\n      this.setState({\n        show: true,\n        jobId: id,\n        jobTitle: title\n      });\n    };\n\n    this.checkUserMember = () => {\n      const user = JSON.parse(localStorage.getItem('user'));\n\n      if (user && user.type == 2) {\n        this.setState({\n          isEmployee: true\n        });\n      } else {\n        this.setState({\n          isEmployee: false\n        });\n      }\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        jobId,\n        coverLetter\n      } = this.state;\n      const {\n        setProposalJob\n      } = this.context;\n      const isEmpty = !coverLetter;\n\n      if (isEmpty) {\n        return false;\n      } else {\n        await setProposalJob(jobId, coverLetter);\n        this.handleClose();\n      }\n    };\n  }\n\n  render() {\n    const settings = {\n      width: 400,\n      dots: false,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 4,\n      slidesToScroll: 4,\n      centerPadding: '10px',\n      arrows: true,\n      centerMode: true,\n      responsive: [{\n        breakpoint: 400,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          infinite: true\n        }\n      }, {\n        breakpoint: 993,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          infinite: true\n        }\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"section section-doctor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"section-header text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"Recent Jobs\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"doctor-slider slider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(JobConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, value => {\n      const {\n        categories: {\n          recentJobs\n        },\n        getCategoriesJobs,\n        getSingleJob,\n        loading\n      } = value;\n      console.log(\"recentJobs\", recentJobs);\n\n      if (loading) {\n        return /*#__PURE__*/React.createElement(PageLoading, {\n          loading: loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 28\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      }), [{\n        \"id\": 85,\n        \"title\": \"nurse senior full time\",\n        \"details\": \"nurse senior full time\",\n        \"offer\": \"test test\",\n        \"category_id\": \"2\",\n        \"sub_category\": \"19\",\n        \"image\": null,\n        \"created_at\": \"2022-01-31T20:15:40.000000Z\",\n        \"updated_at\": \"2022-01-31T20:15:40.000000Z\",\n        \"employer_id\": \"139\",\n        \"status\": \"0\",\n        \"finish_at\": \"2020-12-21 00:00:00\",\n        \"requirements\": \"[\\\"requrment 1\\\",\\\"ewqurment 2\\\" ,\\\"requerment 3\\\"]\",\n        \"responsibility\": \"[\\\"responsibility 1\\\",\\\"responsibility 2\\\"]\",\n        \"category\": null,\n        \"employer\": {\n          \"id\": 139,\n          \"name\": \"sharif naim\",\n          \"email\": \"demo@gmail.com\",\n          \"mobile\": \"252525\",\n          \"country_id\": \"1\",\n          \"category_id\": \"1\",\n          \"sub_category\": \"19\",\n          \"type\": \"2\",\n          \"photo\": null,\n          \"email_verified_at\": null,\n          \"pref\": null,\n          \"birthDate\": null,\n          \"city\": null,\n          \"state\": null,\n          \"zipCode\": null,\n          \"address\": null,\n          \"success_story\": null,\n          \"story_image\": null,\n          \"active\": \"1\",\n          \"otp\": null\n        }\n      }].map(job => {\n        const {\n          id,\n          image,\n          title,\n          details,\n          category: { ...category\n          },\n          employer: { ...employer\n          },\n          created_at,\n          finish_at\n        } = job;\n        const {\n          id: categoryId,\n          name: categoryName,\n          image: categoryImg\n        } = category;\n        const {\n          name: employerName\n        } = employer; // job.posted? this.postedSend : false;\n        // const imageUrl = image? `http://excodeteam.com/crs/public/images/${image}` : IMG01;\n\n        const categoryImgUrl = categoryImg ? `http://excodeteam.com/crs/public/images/${categoryImg}` : IMG01;\n        const subDetails = details.substr(0, 100); // {ReactHtmlParser(subDetails, node=>node.textContent)}\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"profile-widget\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pro-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"/patient/doctor-profile\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 37\n          }\n        }, title)), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"speciality\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 35\n          }\n        }, subDetails), /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"doc-department\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"/jobs\",\n          onClick: () => getCategoriesJobs(categoryId),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 66\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: categoryImgUrl,\n          className: \"img-fluid\",\n          alt: \"Category\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 129\n          }\n        }), categoryName)), /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"available-info\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fab fa-black-tie\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 41\n          }\n        }), \" By \", employerName), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fas fa-hourglass-start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 41\n          }\n        }), \" \", moment(created_at).format(\"YYYY-MM-DD\")), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fas fa-hourglass-end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 41\n          }\n        }), \" \", moment(finish_at).format(\"YYYY-MM-DD\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row row-sm\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: `/jobs/single-job/${id}`,\n          className: \"btn view-btn w-100\",\n          onClick: () => getSingleJob(id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 39\n          }\n        }, \"View Details\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          title: this.state.titleText,\n          className: \"btn book-btn w-100\",\n          disabled: this.state.disabled,\n          onClick: () => this.handleShow(id, title),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 39\n          }\n        }, \"Post Proposal\"))))));\n      }));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"view-all text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/jobs\",\n      onClick: () => this.context.getCategoriesJobs(),\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 15\n      }\n    }, \"View All\")), /*#__PURE__*/React.createElement(Modal, {\n      size: \"lg\",\n      show: this.state.show,\n      onHide: this.handleClose,\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, this.state.jobTitle)), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 15\n      }\n    }, this.state.isEmployee ? /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 23\n      }\n    }, \"Cover Letter\"), /*#__PURE__*/React.createElement(CKEditor, {\n      editor: ClassicEditor,\n      onChange: (e, editor) => this.setState({\n        coverLetter: editor.getData()\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary mr-2\",\n      onClick: e => this.handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }, \"Send\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-light\",\n      onClick: () => this.handleClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }, \"Cancel\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    }, \"You must be logged in to make a proposal\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      className: \"btn btn-primary mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-light\",\n      onClick: () => this.handleClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }, \"Cancel\")))))));\n  }\n\n}\n\nHomeBookDoctor.contextType = JobContext;\nexport default HomeBookDoctor;","map":{"version":3,"sources":["E:/CSR-master/src/client/components/home/recentjobs/index.jsx"],"names":["React","Component","IMG01","Link","Modal","Slider","JobConsumer","JobContext","CKEditor","ClassicEditor","ReactHtmlParser","moment","PageLoading","HomeBookDoctor","state","show","disabled","titleText","coverLetter","jobTitle","jobId","isEmployee","isPosted","componentDidMount","user","JSON","parse","localStorage","getItem","type","setState","postedSend","handleClose","handleShow","id","title","checkUserMember","handleSubmit","e","preventDefault","setProposalJob","context","isEmpty","render","settings","width","dots","infinite","speed","slidesToShow","slidesToScroll","centerPadding","arrows","centerMode","responsive","breakpoint","value","categories","recentJobs","getCategoriesJobs","getSingleJob","loading","console","log","map","job","image","details","category","employer","created_at","finish_at","categoryId","name","categoryName","categoryImg","employerName","categoryImgUrl","subDetails","substr","format","editor","getData","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { IMG01 } from '../img.jsx';\nimport { Link } from 'react-router-dom';\nimport { Modal } from 'react-bootstrap';\n// slider\nimport Slider from \"react-slick\";\n// context\nimport { JobConsumer, JobContext } from \"../../../context/jobs\";\n// react CKEditor text editor\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n// ReactHtmlParser\nimport ReactHtmlParser from 'react-html-parser';\n// moment\nimport moment from \"moment\";\nimport PageLoading from \"../../loading/pageloading\";\n\nclass HomeBookDoctor extends Component {\n\n  state = {\n    show: false,\n    disabled: null,\n    titleText: \"\",\n    coverLetter: \"\",\n    jobTitle: \"\",\n    jobId: 0,\n    isEmployee: false,\n    isPosted: false,\n  }\n\n  componentDidMount = () => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user && user.type == 1) {\n      this.setState({\n        disabled: true,\n        titleText: \"You should post as an employee only\"\n      });\n    }\n  }\n\n  // handleSingleJob = async (id) => {\n  //   await this.context.getSingleJob(id);\n  //   this.props.history.push(`/jobs/single-job/${id}`);\n  // }\n\n  postedSend = () => {\n    if (this.state.isPosted) {\n      this.setState({ disabled: true });\n    }\n  }\n\n  handleClose = () => {\n    this.setState({\n      show: false\n    });\n  }\n\n  handleShow = (id, title) => {\n    this.checkUserMember();\n    this.setState({\n      show: true,\n      jobId: id,\n      jobTitle: title\n    });\n  }\n\n  checkUserMember = () => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user && user.type == 2) {\n      this.setState({\n        isEmployee: true,\n      });\n    } else {\n      this.setState({\n        isEmployee: false,\n      });\n    }\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const { jobId, coverLetter } = this.state;\n    const { setProposalJob } = this.context;\n    const isEmpty = !coverLetter;\n    if (isEmpty) {\n      return false;\n    } else {\n      await setProposalJob(jobId, coverLetter);\n      this.handleClose();\n    }\n  }\n\n  render() {\n    const settings = {\n      width: 400,\n      dots: false,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 4,\n      slidesToScroll: 4,\n      centerPadding: '10px',\n      arrows: true,\n      centerMode: true,\n      responsive: [\n        {\n          breakpoint: 400,\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            infinite: true,\n          }\n        },\n        {\n          breakpoint: 993,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 2,\n            infinite: true,\n          }\n        }\n      ]\n    };\n\n    return (\n      <section className=\"section section-doctor\">\n        <div className=\"container-fluid\">\n          <div className=\"section-header text-center\">\n            <h2>Recent Jobs</h2>\n            {/* <p>Lorem Ipsum is simply dummy text </p> */}\n          </div>\n          <div className=\"doctor-slider slider\">\n            {\n              <JobConsumer>\n                {(value) => {\n                  const { categories: { recentJobs }, getCategoriesJobs, getSingleJob, loading } = value;\n                  console.log(\"recentJobs\", recentJobs)\n                  if (loading) {\n                    return <PageLoading loading={loading} />\n                  }\n                  return (\n                    <Slider {...settings}>\n                      {\n                        [\n                          {\n                            \"id\": 85,\n                            \"title\": \"nurse senior full time\",\n                            \"details\": \"nurse senior full time\",\n                            \"offer\": \"test test\",\n                            \"category_id\": \"2\",\n                            \"sub_category\": \"19\",\n                            \"image\": null,\n                            \"created_at\": \"2022-01-31T20:15:40.000000Z\",\n                            \"updated_at\": \"2022-01-31T20:15:40.000000Z\",\n                            \"employer_id\": \"139\",\n                            \"status\": \"0\",\n                            \"finish_at\": \"2020-12-21 00:00:00\",\n                            \"requirements\": \"[\\\"requrment 1\\\",\\\"ewqurment 2\\\" ,\\\"requerment 3\\\"]\",\n                            \"responsibility\": \"[\\\"responsibility 1\\\",\\\"responsibility 2\\\"]\",\n                            \"category\": null,\n                            \"employer\": {\n                              \"id\": 139,\n                              \"name\": \"sharif naim\",\n                              \"email\": \"demo@gmail.com\",\n                              \"mobile\": \"252525\",\n                              \"country_id\": \"1\",\n                              \"category_id\": \"1\",\n                              \"sub_category\": \"19\",\n                              \"type\": \"2\",\n                              \"photo\": null,\n                              \"email_verified_at\": null,\n                              \"pref\": null,\n                              \"birthDate\": null,\n                              \"city\": null,\n                              \"state\": null,\n                              \"zipCode\": null,\n                              \"address\": null,\n                              \"success_story\": null,\n                              \"story_image\": null,\n                              \"active\": \"1\",\n                              \"otp\": null\n                            }\n                          }\n                        ].map((job) => {\n                          const { id, image, title, details, category: { ...category }, employer: { ...employer }, created_at, finish_at } = job;\n                          const { id: categoryId, name: categoryName, image: categoryImg } = category;\n                          const { name: employerName } = employer;\n                          // job.posted? this.postedSend : false;\n                          // const imageUrl = image? `http://excodeteam.com/crs/public/images/${image}` : IMG01;\n                          const categoryImgUrl = categoryImg ? `http://excodeteam.com/crs/public/images/${categoryImg}` : IMG01;\n                          const subDetails = details.substr(0, 100);\n                          // {ReactHtmlParser(subDetails, node=>node.textContent)}\n                          return (\n                            <div key={id}>\n                              <div className=\"profile-widget\">\n                                <div className=\"pro-content\">\n                                  <h3 className=\"title\">\n                                    <Link to=\"/patient/doctor-profile\">{title}</Link>\n                                  </h3>\n                                  <p className=\"speciality\">{subDetails}</p>\n                                  <h5 className=\"doc-department\"><Link to=\"/jobs\" onClick={() => getCategoriesJobs(categoryId)}><img src={categoryImgUrl} className=\"img-fluid\" alt=\"Category\" />{categoryName}</Link></h5>\n                                  <ul className=\"available-info\">\n                                    <li><i className=\"fab fa-black-tie\"></i> By {employerName}</li>\n                                    <li><i className=\"fas fa-hourglass-start\"></i> {moment(created_at).format(\"YYYY-MM-DD\")}</li>\n                                    <li><i className=\"fas fa-hourglass-end\"></i> {moment(finish_at).format(\"YYYY-MM-DD\")}</li>\n                                  </ul>\n                                  <div className=\"row row-sm\">\n                                    <div className=\"col-6\">\n                                      <Link to={`/jobs/single-job/${id}`} className=\"btn view-btn w-100\" onClick={() => getSingleJob(id)}>View Details</Link>\n                                    </div>\n                                    <div className=\"col-6\">\n                                      <button title={this.state.titleText} className=\"btn book-btn w-100\" disabled={this.state.disabled} onClick={() => this.handleShow(id, title)}>Post Proposal</button>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          )\n                        })\n                      }\n                    </Slider>\n                  )\n                }}\n              </JobConsumer>\n            }\n\n            <div className=\"view-all text-center\">\n              <Link to=\"/jobs\" onClick={() => this.context.getCategoriesJobs()} className=\"btn btn-primary\">View All</Link>\n            </div>\n\n            {/*view modal*/}\n            <Modal size=\"lg\" show={this.state.show} onHide={this.handleClose} centered>\n              <Modal.Header closeButton>\n                <Modal.Title>{this.state.jobTitle}</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                {this.state.isEmployee\n                  ? <form>\n                    <div className=\"form-group\">\n                      <label>Cover Letter</label>\n                      <CKEditor\n                        editor={ClassicEditor}\n                        onChange={(e, editor) => this.setState({ coverLetter: editor.getData() })}\n                      />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary mr-2\" onClick={(e) => this.handleSubmit(e)}>Send</button>\n                    <button type=\"button\" className=\"btn btn-light\" onClick={() => this.handleClose()}>Cancel</button>\n                  </form>\n                  : <>\n                    <p>You must be logged in to make a proposal</p>\n                    <Link to=\"/login\" className=\"btn btn-primary mr-2\">Login</Link>\n                    <button type=\"button\" className=\"btn btn-light\" onClick={() => this.handleClose()}>Cancel</button>\n                  </>\n                }\n              </Modal.Body>\n            </Modal>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nHomeBookDoctor.contextType = JobContext\nexport default HomeBookDoctor;"]},"metadata":{},"sourceType":"module"}