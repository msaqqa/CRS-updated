{"ast":null,"code":"var _jsxFileName = \"E:\\\\CSR-master\\\\src\\\\admin\\\\context\\\\admin.js\";\nimport React, { Component, createContext } from 'react';\nimport axios from \"axios\";\nimport history from \"../../history\"; // Importing toastify module \n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; // toast-configuration method,  \n// it is compulsory method. \n\ntoast.configure(); // context\n\nconst AdminContext = createContext(); // provider\n\nclass AdminProvider extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      url: \"https://joodya.com/crs/api/v1\",\n      jobs: [],\n      singleJob: \"\",\n      jobStatus: \"\",\n      employers: [],\n      employerActive: \"\",\n      singleEmployer: {},\n      employees: [],\n      proposals: [],\n      categories: [],\n      subCategories: [],\n      EmployeeProfile: {\n        info: {},\n        proposals: {}\n      },\n      EmployerProfile: {\n        info: {},\n        jobs: {}\n      },\n      loading: false\n    };\n\n    this.authHeader = () => {\n      const user = JSON.parse(localStorage.getItem('user'));\n\n      if (user && user.token) {\n        return {\n          Authorization: `Bearer ${user.token}`\n        };\n      } else {\n        // redirect to login page\n        return {};\n      }\n    };\n\n    this.userLogout = () => {\n      localStorage.removeItem(\"user\");\n      window.open('/login', '_self');\n    };\n\n    this.getJobs = async status => {\n      this.setState({\n        loading: true\n      });\n\n      if (status === \"0\") {\n        status = JSON.stringify(status);\n      }\n\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/all_jobs`,\n        headers: this.authHeader(),\n        data: {\n          status\n        }\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const jobs = data;\n        this.setState({\n          jobs\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getSingleJob = async job_id => {\n      this.setState({\n        loading: true,\n        jobStatus: \"\"\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/get_job`,\n        headers: this.authHeader(),\n        data: {\n          job_id\n        }\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const singleJob = data;\n        this.setState({\n          singleJob\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.completeJob = async id => {\n      console.log(\"Complete Job\", id);\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/complete_job`,\n        headers: this.authHeader(),\n        data: {\n          \"job_id\": id\n        }\n      }).then(res => {\n        const {\n          data,\n          job_status\n        } = res.data;\n        this.setState({\n          jobStatus: job_status\n        });\n        toast.success('Success Complete Job', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.getEmployers = async () => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/get_employers`,\n        headers: this.authHeader()\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const employers = data;\n        this.setState({\n          employers\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.activateEmployer = async id => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/activate_user`,\n        headers: this.authHeader(),\n        data: {\n          \"user_id\": id\n        }\n      }).then(res => {\n        const {\n          data,\n          active\n        } = res.data;\n        this.setState({\n          employers: data,\n          employerActive: active\n        });\n        toast.success('Success Activate Employer', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.deactivateEmployer = async id => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/deactivate_user`,\n        headers: this.authHeader(),\n        data: {\n          \"user_id\": id\n        }\n      }).then(res => {\n        const {\n          data,\n          active\n        } = res.data;\n        this.setState({\n          employers: data,\n          employerActive: active\n        });\n        toast.success('Success Deactivate_user Employer', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.getEmployerJobs = async employer_id => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/get_employers`,\n        headers: this.authHeader(),\n        data: {\n          employer_id\n        }\n      }).then(res => {\n        const {\n          data,\n          jobs\n        } = res.data;\n        const employerInfo = data;\n        this.setState({\n          singleEmployer: {\n            employerInfo,\n            jobs\n          }\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getEmployees = async () => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/get_employees`,\n        headers: this.authHeader()\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const employees = data;\n        this.setState({\n          employees\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getProposalsJob = async () => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/proposals`,\n        headers: this.authHeader()\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const proposals = data;\n        this.setState({\n          proposals\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getEmployeeProfile = async id => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/get_employees`,\n        headers: this.authHeader(),\n        data: {\n          \"employee_id\": id\n        }\n      }).then(res => {\n        const {\n          data,\n          prposals\n        } = res.data;\n        this.setState({\n          EmployeeProfile: {\n            info: data,\n            proposals: prposals\n          }\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getEmployerProfile = async id => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/get_employers`,\n        headers: this.authHeader(),\n        data: {\n          \"employer_id\": id\n        }\n      }).then(res => {\n        const {\n          data,\n          jobs\n        } = res.data;\n        this.setState({\n          EmployerProfile: {\n            info: data,\n            jobs\n          }\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getCategories = async () => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/categories`,\n        headers: this.authHeader()\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const categories = data;\n        this.setState({\n          categories\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.addCategory = async _ref => {\n      let {\n        name,\n        parent,\n        image\n      } = _ref;\n      const fd = new FormData();\n      fd.append(\"name\", name);\n      fd.append(\"parent\", parent);\n      fd.append(\"image\", image);\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/add_category`,\n        headers: this.authHeader(),\n        data: fd\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const categories = data;\n        this.setState({\n          categories\n        });\n        toast.success('Success Add Category', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.updateCategory = async _ref2 => {\n      let {\n        id,\n        name,\n        parent,\n        image\n      } = _ref2;\n      const fd = new FormData();\n      fd.append(\"category_id\", id);\n      fd.append(\"name\", name);\n      fd.append(\"parent\", parent);\n      fd.append(\"image\", image);\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/update_category`,\n        headers: this.authHeader(),\n        data: fd\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const categories = data;\n        this.setState({\n          categories\n        });\n        toast.success('Success Add Category', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.deleteCategory = async id => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/delete_category`,\n        headers: this.authHeader(),\n        data: {\n          \"category_id\": id\n        }\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const categories = data;\n        this.setState({\n          categories\n        });\n        toast.success('Success Delete Category', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.getSubCategories = async id => {\n      if (this.state.categories.length === 0) {\n        await this.getCategories();\n      }\n\n      ;\n      const subCategories = this.state.categories.find(cntry => cntry.id == id).sub_category;\n      this.setState({\n        subCategories\n      });\n    };\n\n    this.setSuccessStory = async (id, successStory, storyImage) => {\n      const fd = new FormData();\n      fd.append(\"user_id\", id);\n      fd.append(\"success_story\", successStory);\n      fd.append(\"story_image\", storyImage);\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/update_story`,\n        headers: this.authHeader(),\n        data: fd\n      }).then(res => {\n        toast.success('Success Save Story', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AdminContext.Provider, {\n      value: { ...this.state,\n        userLogout: this.userLogout,\n        getJobs: this.getJobs,\n        getSingleJob: this.getSingleJob,\n        getProposalsJob: this.getProposalsJob,\n        getEmployers: this.getEmployers,\n        getEmployerJobs: this.getEmployerJobs,\n        activateEmployer: this.activateEmployer,\n        deactivateEmployer: this.deactivateEmployer,\n        getEmployerProfile: this.getEmployerProfile,\n        getEmployees: this.getEmployees,\n        getEmployeeProfile: this.getEmployeeProfile,\n        completeJob: this.completeJob,\n        getCategories: this.getCategories,\n        getSubCategories: this.getSubCategories,\n        addCategory: this.addCategory,\n        updateCategory: this.updateCategory,\n        deleteCategory: this.deleteCategory,\n        setSuccessStory: this.setSuccessStory\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n} // consumer\n\n\nconst AdminConsumer = AdminContext.Consumer;\nexport { AdminConsumer, AdminContext };\nexport default AdminProvider;","map":{"version":3,"sources":["E:/CSR-master/src/admin/context/admin.js"],"names":["React","Component","createContext","axios","history","toast","configure","AdminContext","AdminProvider","state","url","jobs","singleJob","jobStatus","employers","employerActive","singleEmployer","employees","proposals","categories","subCategories","EmployeeProfile","info","EmployerProfile","loading","authHeader","user","JSON","parse","localStorage","getItem","token","Authorization","userLogout","removeItem","window","open","getJobs","status","setState","stringify","method","headers","data","then","res","console","log","error","getSingleJob","job_id","completeJob","id","job_status","success","autoClose","position","POSITION","TOP_CENTER","getEmployers","activateEmployer","active","deactivateEmployer","getEmployerJobs","employer_id","employerInfo","getEmployees","getProposalsJob","getEmployeeProfile","prposals","getEmployerProfile","getCategories","addCategory","name","parent","image","fd","FormData","append","updateCategory","deleteCategory","getSubCategories","length","find","cntry","sub_category","setSuccessStory","successStory","storyImage","render","props","children","AdminConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, {Component, createContext} from 'react';\nimport axios from \"axios\";\nimport history from \"../../history\";\n// Importing toastify module \nimport {toast} from 'react-toastify';  \nimport 'react-toastify/dist/ReactToastify.css';\n// toast-configuration method,  \n// it is compulsory method. \ntoast.configure();\n\n// context\nconst AdminContext = createContext();\n\n// provider\nclass AdminProvider extends Component {\n    state = {\n        url: \"https://joodya.com/crs/api/v1\",\n        jobs: [],\n        singleJob: \"\",\n        jobStatus: \"\",\n        employers: [],\n        employerActive: \"\",\n        singleEmployer: {},\n        employees: [],\n        proposals: [],\n        categories: [],\n        subCategories: [],\n        EmployeeProfile: {\n            info: {},\n            proposals: {}\n        },\n        EmployerProfile: {\n            info: {},\n            jobs: {}\n        },\n        loading: false,\n    }\n    \n    authHeader = () => {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (user && user.token) {\n            return { Authorization: `Bearer ${user.token}` };\n        } else {\n            // redirect to login page\n            return {};\n        }\n    }\n\n    userLogout = () => {\n        localStorage.removeItem(\"user\");\n        window.open('/login', '_self');\n    };\n\n    getJobs = async (status) => {\n        this.setState({loading: true});\n        if(status===\"0\"){\n            status = JSON.stringify(status);\n        }\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/all_jobs`,\n            headers: this.authHeader(),\n            data: {status},\n        }).then(\n            res => {\n                const {data} = res.data;\n                const jobs = data;\n                this.setState({jobs})\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    }\n\n    getSingleJob = async (job_id) => {\n        this.setState({loading: true, jobStatus: \"\"});\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/get_job`,\n            headers: this.authHeader(),\n            data: {job_id},\n        }).then(\n            res => {\n                const {data} = res.data;\n                const singleJob = data;\n                this.setState({singleJob})\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    }\n\n    completeJob = async (id) => {\n        console.log(\"Complete Job\", id);\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/complete_job`,\n            headers: this.authHeader(),\n            data: {\"job_id\": id},\n        }).then(\n            res => {\n                const {data, job_status} = res.data;\n                this.setState({jobStatus: job_status});\n                toast.success('Success Complete Job', {autoClose:2000, position: toast.POSITION.TOP_CENTER});\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    getEmployers = async () => {\n        this.setState({loading: true});\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/get_employers`,\n            headers: this.authHeader(),\n        }).then(\n            res => {\n                const {data} = res.data;\n                const employers = data;\n                this.setState({employers})\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    }\n\n    activateEmployer = async (id) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/activate_user`,\n            headers: this.authHeader(),\n            data: {\"user_id\": id},\n        }).then(\n            res => {\n                const {data, active} = res.data;\n                this.setState({\n                    employers: data,\n                    employerActive: active\n                });\n                toast.success('Success Activate Employer', {autoClose:2000, position: toast.POSITION.TOP_CENTER});\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    deactivateEmployer = async (id) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/deactivate_user`,\n            headers: this.authHeader(),\n            data: {\"user_id\": id},\n        }).then(\n            res => {\n                const {data, active} = res.data;\n                this.setState({\n                    employers: data,\n                    employerActive: active\n                });\n                toast.success('Success Deactivate_user Employer', {autoClose:2000, position: toast.POSITION.TOP_CENTER});\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    getEmployerJobs = async (employer_id) => {\n        this.setState({loading: true});\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/get_employers`,\n            headers: this.authHeader(),\n            data: {employer_id},\n        }).then(\n            res => {\n                const {data, jobs} = res.data;\n                const employerInfo = data;\n                this.setState({\n                    singleEmployer: {\n                        employerInfo,\n                        jobs\n                    }\n                })\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    }\n\n\n    getEmployees = async () => {\n        this.setState({loading: true});\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/get_employees`,\n            headers: this.authHeader(),\n        }).then(\n            res => {\n                const {data} = res.data;\n                const employees = data;\n                this.setState({employees})\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    }\n\n    getProposalsJob = async () => {\n        this.setState({loading: true});\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/proposals`,\n            headers: this.authHeader(),\n        }).then(\n            res => {\n                const {data} = res.data;\n                const proposals = data;\n                this.setState({proposals})\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    }\n\n    getEmployeeProfile = async (id) => {\n        this.setState({loading: true});\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/get_employees`,\n            headers: this.authHeader(),\n            data: {\"employee_id\": id}\n        }).then(\n            res => {\n                const {data, prposals} = res.data;\n                this.setState({\n                    EmployeeProfile: {\n                        info: data,\n                        proposals: prposals\n                    }\n                })\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    }\n\n    getEmployerProfile = async (id) => {\n        this.setState({loading: true});\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/get_employers`,\n            headers: this.authHeader(),\n            data: {\"employer_id\": id}\n        }).then(\n            res => {\n                const {data, jobs} = res.data;\n                this.setState({\n                    EmployerProfile: {\n                        info: data,\n                        jobs\n                    }\n                })\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    }\n\n    // categories\n\n    getCategories = async () => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/categories`,\n            headers: this.authHeader(),\n        }).then(\n            res => {\n                const {data} = res.data;\n                const categories = data;\n                this.setState({categories});\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    addCategory = async ({name, parent, image}) => {\n        const fd = new FormData();\n        fd.append(\"name\", name);\n        fd.append(\"parent\", parent);\n        fd.append(\"image\", image);\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/add_category`,\n            headers: this.authHeader(),\n            data: fd,\n        }).then(\n            res => {\n                const {data} = res.data;\n                const categories = data;\n                this.setState({categories});\n                toast.success('Success Add Category', {autoClose:2000, position: toast.POSITION.TOP_CENTER});\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    updateCategory = async ({id, name, parent, image}) => {\n        const fd = new FormData();\n        fd.append(\"category_id\", id);\n        fd.append(\"name\", name);\n        fd.append(\"parent\", parent);\n        fd.append(\"image\", image);\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/update_category`,\n            headers: this.authHeader(),\n            data: fd,\n        }).then(\n            res => {\n                const {data} = res.data;\n                const categories = data;\n                this.setState({categories});\n                toast.success('Success Add Category', {autoClose:2000, position: toast.POSITION.TOP_CENTER});\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    deleteCategory = async (id) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/delete_category`,\n            headers: this.authHeader(),\n            data: {\"category_id\": id},\n        }).then(\n            res => {\n                const {data} = res.data;\n                const categories = data;\n                this.setState({categories});\n                toast.success('Success Delete Category', {autoClose:2000, position: toast.POSITION.TOP_CENTER});\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    getSubCategories = async (id) => {\n        if(this.state.categories.length===0){\n            await this.getCategories();\n        };\n        const subCategories = this.state.categories.find(cntry => cntry.id == id).sub_category;\n        this.setState({subCategories})\n    }\n\n    setSuccessStory = async (id, successStory, storyImage) => {\n        const fd = new FormData();\n        fd.append(\"user_id\", id);\n        fd.append(\"success_story\", successStory);\n        fd.append(\"story_image\", storyImage);\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/update_story`,\n            headers: this.authHeader(),\n            data: fd,\n        }).then(\n            res => {\n                toast.success('Success Save Story', {autoClose:2000, position: toast.POSITION.TOP_CENTER})\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n     \n    render() {\n        return (\n            <AdminContext.Provider value={{\n                ...this.state,\n                userLogout: this.userLogout,\n\n                getJobs: this.getJobs,\n                getSingleJob: this.getSingleJob,\n                getProposalsJob: this.getProposalsJob,\n                getEmployers: this.getEmployers,\n\n                getEmployerJobs: this.getEmployerJobs,\n                activateEmployer: this.activateEmployer,\n                deactivateEmployer: this.deactivateEmployer,\n                getEmployerProfile: this.getEmployerProfile,\n\n                getEmployees: this.getEmployees,\n                getEmployeeProfile: this.getEmployeeProfile,\n\n                completeJob: this.completeJob,\n\n                getCategories: this.getCategories,\n                getSubCategories: this.getSubCategories,\n                addCategory: this.addCategory,\n                updateCategory: this.updateCategory,\n                deleteCategory: this.deleteCategory,\n\n                setSuccessStory: this.setSuccessStory,\n            }}>\n                {this.props.children}\n            </AdminContext.Provider>\n        )\n    }\n}\n\n// consumer\nconst AdminConsumer = AdminContext.Consumer;\n\nexport {AdminConsumer, AdminContext};\nexport default AdminProvider;\n"]},"metadata":{},"sourceType":"module"}