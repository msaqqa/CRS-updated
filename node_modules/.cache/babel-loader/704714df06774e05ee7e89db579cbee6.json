{"ast":null,"code":"var _jsxFileName = \"E:\\\\CSR-master\\\\src\\\\client\\\\context\\\\user.js\";\nimport React, { Component, createContext } from 'react';\nimport history from \"../../history\";\nimport axios from \"axios\"; // importing toastify module\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure(); // context\n\nconst UserContext = createContext(); // provider\n\nclass UserProvider extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      url: \"https://joodya.com/crs/api/v1\",\n      categories: [],\n      countries: [],\n      user: {},\n      loading: false,\n      forgetStatus: 0\n    };\n\n    this.componentDidMount = () => {\n      localStorage.getItem(\"user\") ? this.setState({\n        user: JSON.parse(localStorage.getItem(\"user\"))\n      }) : this.setState({\n        user: {}\n      });\n    };\n\n    this.getCategories = async () => {\n      await axios({\n        method: 'get',\n        url: `${this.state.url}/user/register`\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const {\n          categories\n        } = data;\n        this.setState({\n          categories\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.getCountries = async () => {\n      await axios({\n        method: 'get',\n        url: \"https://restcountries.eu/rest/v2/all\"\n      }).then(res => {\n        const countries = res.data.map(item => {\n          return item.name;\n        });\n        this.setState({\n          countries\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.userRegister = async values => {\n      this.setState({\n        loading: true\n      });\n      console.log(\"userRegister\", values);\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/user/register`,\n        data: { ...values\n        }\n      }).then(res => {\n        const {\n          code,\n          status,\n          message\n        } = res.data;\n\n        if (code == 200 && status === true) {\n          toast.success(message, {\n            autoClose: 2000,\n            position: toast.POSITION.TOP_CENTER\n          });\n          history.push(\"/login\");\n        } else {\n          toast.error(message, {\n            position: toast.POSITION.TOP_CENTER\n          });\n        }\n\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.userLogin = async values => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/user/login`,\n        data: { ...values\n        }\n      }).then(res => {\n        const {\n          code,\n          status,\n          message,\n          accessToken: token,\n          user\n        } = res.data;\n\n        if (code === \"200\" && status === true) {\n          const {\n            type,\n            photo,\n            name,\n            birthDate,\n            country_id\n          } = user;\n          this.setState({\n            user: {\n              token,\n              ...user\n            }\n          });\n          const dashboardUrl = type === \"2\" ? \"/employee/dashboard\" : \"/employer/dashboard\";\n          type === \"0\" ? window.open('/admin', '_blank') : history.push(dashboardUrl);\n          localStorage.setItem(\"user\", JSON.stringify({\n            token,\n            type,\n            photo,\n            name,\n            birthDate,\n            country_id\n          }));\n          toast.success(message, {\n            autoClose: 2000,\n            position: toast.POSITION.TOP_CENTER\n          });\n        } else {\n          toast.error(message, {\n            position: toast.POSITION.TOP_CENTER\n          });\n        }\n\n        console.log(res);\n      }, error => {\n        toast.error(\"There was an error. Please try again...\", {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.userRefresh = async user => {\n      const {\n        type,\n        photo,\n        name,\n        birthDate,\n        country_id\n      } = user;\n      const {\n        token\n      } = this.state.user;\n      await this.setState({\n        user: {\n          token,\n          ...user\n        }\n      });\n      localStorage.setItem(\"user\", JSON.stringify({\n        token,\n        type,\n        photo,\n        name,\n        birthDate,\n        country_id\n      }));\n    };\n\n    this.userLogout = () => {\n      this.setState({\n        user: {}\n      });\n      localStorage.removeItem(\"user\");\n      history.push(\"/login\");\n    };\n\n    this.changePassword = async _ref => {\n      let {\n        oldPassword,\n        newPassword\n      } = _ref;\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/change_password`,\n        headers: {\n          Authorization: `Bearer ${this.state.user.token}`\n        },\n        data: {\n          \"old_password\": oldPassword,\n          \"new_password\": newPassword\n        }\n      }).then(res => {\n        const {\n          code,\n          status,\n          message\n        } = res.data;\n\n        if (code === 200 && status === true) {\n          toast.success(message, {\n            autoClose: 2000,\n            position: toast.POSITION.TOP_CENTER\n          });\n        } else {\n          toast.error(message, {\n            autoClose: 2000,\n            position: toast.POSITION.TOP_CENTER\n          });\n        }\n\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.forgotPassword = async values => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/user/forgot_password`,\n        data: values\n      }).then(res => {\n        const {\n          code,\n          status,\n          message\n        } = res.data;\n\n        if (code === 200 && status === true) {\n          this.setState({\n            forgetStatus: 1\n          });\n          toast.success(message, {\n            autoClose: 2000,\n            position: toast.POSITION.TOP_CENTER\n          });\n        } else {\n          toast.error(message, {\n            autoClose: 2000,\n            position: toast.POSITION.TOP_CENTER\n          });\n        }\n\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.sendCode = async values => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/user/send_code`,\n        data: values\n      }).then(res => {\n        const {\n          code,\n          status,\n          message\n        } = res.data;\n\n        if (code === 200 && status === true) {\n          this.setState({\n            forgetStatus: 2\n          });\n          toast.success(message, {\n            autoClose: 2000,\n            position: toast.POSITION.TOP_CENTER\n          });\n        } else {\n          toast.error(message, {\n            autoClose: 2000,\n            position: toast.POSITION.TOP_CENTER\n          });\n        }\n\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.resetPassword = async values => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/user/reset_password`,\n        data: values\n      }).then(res => {\n        const {\n          code,\n          status,\n          message\n        } = res.data;\n\n        if (code === 200 && status === true) {\n          this.setState({\n            forgetStatus: 0\n          });\n          history.push(\"/login\");\n          toast.success(message, {\n            autoClose: 2000,\n            position: toast.POSITION.TOP_CENTER\n          });\n        } else {\n          toast.error(message, {\n            autoClose: 2000,\n            position: toast.POSITION.TOP_CENTER\n          });\n        }\n\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: { ...this.state,\n        getCategories: this.getCategories,\n        getCountries: this.getCountries,\n        userRegister: this.userRegister,\n        userLogin: this.userLogin,\n        userRefresh: this.userRefresh,\n        userLogout: this.userLogout,\n        changePassword: this.changePassword,\n        forgotPassword: this.forgotPassword,\n        sendCode: this.sendCode,\n        resetPassword: this.resetPassword\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n} // consumer\n\n\nconst UserConsumer = UserContext.Consumer;\nexport { UserConsumer, UserContext };\nexport default UserProvider;","map":{"version":3,"sources":["E:/CSR-master/src/client/context/user.js"],"names":["React","Component","createContext","history","axios","toast","configure","UserContext","UserProvider","state","url","categories","countries","user","loading","forgetStatus","componentDidMount","localStorage","getItem","setState","JSON","parse","getCategories","method","then","res","data","console","log","error","getCountries","map","item","name","userRegister","values","code","status","message","success","autoClose","position","POSITION","TOP_CENTER","push","userLogin","accessToken","token","type","photo","birthDate","country_id","dashboardUrl","window","open","setItem","stringify","userRefresh","userLogout","removeItem","changePassword","oldPassword","newPassword","headers","Authorization","forgotPassword","sendCode","resetPassword","render","props","children","UserConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component, createContext } from 'react';\nimport history from \"../../history\";\nimport axios from \"axios\";\n// importing toastify module\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure();\n\n// context\nconst UserContext = createContext();\n\n// provider\nclass UserProvider extends Component {\n    state = {\n        url: \"https://joodya.com/crs/api/v1\",\n        categories: [],\n        countries: [],\n        user: {},\n        loading: false,\n        forgetStatus: 0\n    }\n\n    componentDidMount = () => {\n        localStorage.getItem(\"user\")\n            ? this.setState({ user: JSON.parse(localStorage.getItem(\"user\")) })\n            : this.setState({ user: {} });\n    }\n\n    getCategories = async () => {\n        await axios({\n            method: 'get',\n            url: `${this.state.url}/user/register`,\n        }).then(\n            res => {\n                const { data } = res.data;\n                const { categories } = data;\n                this.setState({ categories });\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    getCountries = async () => {\n        await axios({\n            method: 'get',\n            url: \"https://restcountries.eu/rest/v2/all\",\n        }).then(\n            res => {\n                const countries = res.data.map(item => {\n                    return item.name\n                })\n                this.setState({ countries });\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n\n    userRegister = async (values) => {\n        this.setState({ loading: true });\n        console.log(\"userRegister\", values);\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/user/register`,\n            data: { ...values },\n        }).then(\n            res => {\n                const { code, status, message } = res.data;\n                if (code == 200 && status === true) {\n                    toast.success(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                    history.push(\"/login\");\n                } else {\n                    toast.error(message, { position: toast.POSITION.TOP_CENTER });\n                }\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({ loading: false });\n    }\n\n    userLogin = async (values) => {\n        this.setState({ loading: true });\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/user/login`,\n            data: { ...values },\n        }).then(\n            res => {\n                const { code, status, message, accessToken: token, user } = res.data;\n                if (code === \"200\" && status === true) {\n                    const { type, photo, name, birthDate, country_id } = user;\n                    this.setState({\n                        user: { token, ...user }\n                    });\n                    const dashboardUrl = (type === \"2\" ? \"/employee/dashboard\" : \"/employer/dashboard\");\n                    type === \"0\" ? window.open('/admin', '_blank') : history.push(dashboardUrl);\n                    localStorage.setItem(\"user\", JSON.stringify({ token, type, photo, name, birthDate, country_id }));\n                    toast.success(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                } else {\n                    toast.error(message, { position: toast.POSITION.TOP_CENTER });\n                }\n                console.log(res);\n\n            },\n            error => {\n                toast.error(\"There was an error. Please try again...\", { autoClose: 2000, position: toast.POSITION.TOP_CENTER })\n                console.log(error);\n            }\n        )\n        this.setState({ loading: false });\n    }\n\n    userRefresh = async (user) => {\n        const { type, photo, name, birthDate, country_id } = user;\n        const { token } = this.state.user;\n        await this.setState({ user: { token, ...user } });\n        localStorage.setItem(\"user\", JSON.stringify({ token, type, photo, name, birthDate, country_id }));\n    }\n\n    userLogout = () => {\n        this.setState({ user: {} });\n        localStorage.removeItem(\"user\");\n        history.push(\"/login\");\n    };\n\n    changePassword = async ({ oldPassword, newPassword }) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/change_password`,\n            headers: { Authorization: `Bearer ${this.state.user.token}` },\n            data: { \"old_password\": oldPassword, \"new_password\": newPassword },\n        }).then(\n            res => {\n                const { code, status, message } = res.data;\n                if (code === 200 && status === true) {\n                    toast.success(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                } else {\n                    toast.error(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER })\n                }\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    forgotPassword = async (values) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/user/forgot_password`,\n            data: values,\n        }).then(\n            res => {\n                const { code, status, message } = res.data;\n                if (code === 200 && status === true) {\n                    this.setState({ forgetStatus: 1 })\n                    toast.success(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                } else {\n                    toast.error(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER })\n                }\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    sendCode = async (values) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/user/send_code`,\n            data: values,\n        }).then(\n            res => {\n                const { code, status, message } = res.data;\n                if (code === 200 && status === true) {\n                    this.setState({ forgetStatus: 2 })\n                    toast.success(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                } else {\n                    toast.error(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER })\n                }\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    resetPassword = async (values) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/user/reset_password`,\n            data: values,\n        }).then(\n            res => {\n                const { code, status, message } = res.data;\n                if (code === 200 && status === true) {\n                    this.setState({ forgetStatus: 0 })\n                    history.push(\"/login\");\n                    toast.success(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER });\n                } else {\n                    toast.error(message, { autoClose: 2000, position: toast.POSITION.TOP_CENTER })\n                }\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    render() {\n        return (\n            <UserContext.Provider value={{\n                ...this.state,\n                getCategories: this.getCategories,\n                getCountries: this.getCountries,\n                userRegister: this.userRegister,\n                userLogin: this.userLogin,\n                userRefresh: this.userRefresh,\n                userLogout: this.userLogout,\n                changePassword: this.changePassword,\n\n                forgotPassword: this.forgotPassword,\n                sendCode: this.sendCode,\n                resetPassword: this.resetPassword\n            }}>\n                {this.props.children}\n            </UserContext.Provider>\n        )\n    }\n}\n\n// consumer\nconst UserConsumer = UserContext.Consumer;\n\nexport { UserConsumer, UserContext };\nexport default UserProvider;"]},"metadata":{},"sourceType":"module"}