{"ast":null,"code":"var _jsxFileName = \"E:\\\\CSR-master\\\\src\\\\client\\\\context\\\\jobs.js\";\nimport React, { Component, createContext } from 'react';\nimport axios from \"axios\";\nimport history from \"../../history\"; // Importing toastify module \n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; // toast-configuration method,  \n// it is compulsory method. \n\ntoast.configure(); // context\n\nconst JobContext = createContext(); // provider\n\nclass JobProvider extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      url: \"https://joodya.com/crs/api/v1\",\n      categories: {\n        categoriesList: [],\n        recentJobs: [],\n        categoryJobs: [],\n        subCategories: []\n      },\n      singleJob: {},\n      successStories: [],\n      loading: false\n    };\n\n    this.componentDidMount = () => {\n      this.getCategoriesJobs();\n      this.getSuccessStories();\n    };\n\n    this.authHeader = () => {\n      const user = JSON.parse(localStorage.getItem('user'));\n\n      if (user && user.token) {\n        return {\n          Authorization: `Bearer ${user.token}`\n        };\n      } else {\n        // redirect to login page\n        return {};\n      }\n    };\n\n    this.getCategoriesJobs = async (catVal, catName, catType) => {\n      this.setState({\n        loading: true\n      });\n      let category_id, sub_category, keyword;\n\n      if (typeof catVal === \"number\") {\n        catType === \"sub\" ? sub_category = catVal : category_id = catVal;\n      } else {\n        keyword = catVal;\n      }\n\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employer/all_jobs`,\n        data: {\n          category_id,\n          sub_category,\n          keyword\n        }\n      }).then(res => {\n        const {\n          data,\n          categories,\n          recent_jobs,\n          tags\n        } = res.data;\n        const categoryJobs = data.data;\n        const subCategories = category_id ? categories.find(cntry => cntry.id == category_id).sub_category : [];\n        this.setState({\n          categories: {\n            categoriesList: categories,\n            recentJobs: recent_jobs,\n            tags,\n            categoryJobs,\n            categoryName: catName ? catName : \"\",\n            categoryType: catType,\n            subCategories\n          }\n        });\n        const categoriesStorage = {\n          categoriesList: categories,\n          recentJobs: recent_jobs,\n          tags,\n          categoryJobs\n        };\n        localStorage.setItem(\"categories\", JSON.stringify(categoriesStorage));\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getStorageCategoriesJobs = () => {\n      return localStorage.getItem(\"categories\") ? JSON.parse(localStorage.getItem(\"categories\")) : {};\n    };\n\n    this.getSingleJob = async id => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/get_job`,\n        data: {\n          \"job_id\": id\n        }\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const singleJob = data;\n        this.setState({\n          singleJob\n        }); // history.push(\"/jobs/single-job\");\n\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.setProposalJob = async (id, coverLetter) => {\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/employee/send_proposal`,\n        headers: this.authHeader(),\n        data: {\n          \"job_id\": id,\n          \"message\": coverLetter\n        }\n      }).then(res => {\n        toast.success('Success Post Proposal', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_CENTER\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.getSuccessStories = async () => {\n      this.setState({\n        loading: true\n      });\n      await axios({\n        method: 'post',\n        url: `${this.state.url}/admin/success_story`\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        const successStories = data;\n        this.setState({\n          successStories\n        });\n        console.log(res);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        loading: false\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(JobContext.Provider, {\n      value: { ...this.state,\n        getCategoriesJobs: this.getCategoriesJobs,\n        getSingleJob: this.getSingleJob,\n        setProposalJob: this.setProposalJob,\n        getSuccessStories: this.getSuccessStories\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n} // consumer\n\n\nconst JobConsumer = JobContext.Consumer;\nexport { JobConsumer, JobContext };\nexport default JobProvider;","map":{"version":3,"sources":["E:/CSR-master/src/client/context/jobs.js"],"names":["React","Component","createContext","axios","history","toast","configure","JobContext","JobProvider","state","url","categories","categoriesList","recentJobs","categoryJobs","subCategories","singleJob","successStories","loading","componentDidMount","getCategoriesJobs","getSuccessStories","authHeader","user","JSON","parse","localStorage","getItem","token","Authorization","catVal","catName","catType","setState","category_id","sub_category","keyword","method","data","then","res","recent_jobs","tags","find","cntry","id","categoryName","categoryType","categoriesStorage","setItem","stringify","console","log","error","getStorageCategoriesJobs","getSingleJob","setProposalJob","coverLetter","headers","success","autoClose","position","POSITION","TOP_CENTER","render","props","children","JobConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, {Component, createContext} from 'react';\nimport axios from \"axios\";\nimport history from \"../../history\";\n// Importing toastify module \nimport {toast} from 'react-toastify';  \nimport 'react-toastify/dist/ReactToastify.css';\n// toast-configuration method,  \n // it is compulsory method. \ntoast.configure()\n\n// context\nconst JobContext = createContext();\n\n// provider\nclass JobProvider extends Component {\n    state = {\n        url: \"https://joodya.com/crs/api/v1\",\n        categories: {\n            categoriesList: [],\n            recentJobs: [],\n            categoryJobs: [],\n            subCategories: []\n        },\n        singleJob: {},\n        successStories: [],\n        loading: false,\n    }\n    \n    componentDidMount = () => {\n        this.getCategoriesJobs();\n        this.getSuccessStories();\n    }\n\n    authHeader = () => {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (user && user.token) {\n            return { Authorization: `Bearer ${user.token}` };\n        } else {\n            // redirect to login page\n            return {};\n        }\n    }\n\n    // get categories jobs\n    getCategoriesJobs = async (catVal, catName, catType) => {\n        this.setState({loading: true});\n        let category_id, sub_category, keyword;\n        if(typeof(catVal) === \"number\"){\n            catType === \"sub\"? sub_category = catVal : category_id = catVal;\n        }else{\n            keyword = catVal\n        }\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employer/all_jobs`,\n            data: {category_id, sub_category, keyword},\n        }).then(\n            res => {\n                const {data, categories, recent_jobs, tags} = res.data;\n                const categoryJobs = data.data;\n                const subCategories = category_id? categories.find(cntry => cntry.id == category_id).sub_category : []\n                this.setState({\n                    categories: {\n                        categoriesList: categories,\n                        recentJobs: recent_jobs,\n                        tags,\n                        categoryJobs,\n                        categoryName: catName? catName : \"\",\n                        categoryType: catType,\n                        subCategories\n                    }\n                });\n                const categoriesStorage = {categoriesList: categories, recentJobs: recent_jobs, tags, categoryJobs}\n                localStorage.setItem(\"categories\", JSON.stringify(categoriesStorage));\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    };\n    // get storage categories jobs\n    getStorageCategoriesJobs = () => {\n        return localStorage.getItem(\"categories\")\n        ? JSON.parse(localStorage.getItem(\"categories\"))\n        : {};\n    };\n\n    getSingleJob = async (id) => {\n        this.setState({loading: true});\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/get_job`,\n            data: {\"job_id\": id},\n        }).then(\n            res => {\n                const {data} = res.data;\n                const singleJob = data;\n                this.setState({singleJob});\n                // history.push(\"/jobs/single-job\");\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    };\n\n    setProposalJob = async (id, coverLetter) => {\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/employee/send_proposal`,\n            headers: this.authHeader(),\n            data: {\"job_id\": id, \"message\": coverLetter},\n        }).then(\n            res => {\n                toast.success('Success Post Proposal', {autoClose:2000, position: toast.POSITION.TOP_CENTER})\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n    }\n\n    getSuccessStories = async () => {\n        this.setState({loading: true});\n        await axios({\n            method: 'post',\n            url: `${this.state.url}/admin/success_story`,\n        }).then(\n            res => {\n                const {data} = res.data;\n                const successStories = data;\n                this.setState({successStories});\n                console.log(res);\n            },\n            error => {\n                console.log(error);\n            }\n        )\n        this.setState({loading: false});\n    };\n\n    render() {\n        return (\n            <JobContext.Provider value={{\n                ...this.state,\n                getCategoriesJobs: this.getCategoriesJobs,\n                getSingleJob: this.getSingleJob,\n                setProposalJob: this.setProposalJob,\n                getSuccessStories: this.getSuccessStories,\n            }}>\n                {this.props.children}\n            </JobContext.Provider>\n        )\n    }\n}\n\n// consumer\nconst JobConsumer = JobContext.Consumer;\n\nexport {JobConsumer, JobContext};\nexport default JobProvider;"]},"metadata":{},"sourceType":"module"}